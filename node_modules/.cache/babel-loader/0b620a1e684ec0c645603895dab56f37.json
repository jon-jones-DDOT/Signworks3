{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\SuperQuery.js\";\nimport React, { Component } from 'react';\nimport './SuperQuery.css';\nimport ModalWrapper from './Modals/ModalWrapper';\nimport { layerURLs } from '../../utils/JSAPI';\nimport Downshift from 'downshift';\nimport { SupportType, SignType, addOptionsToSelect } from '../../SignworksJSON';\nimport { mapModes } from \"../../redux/reducers/graphic\";\nimport { runInThisContext } from 'vm'; //import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\n\nvar SuperQuery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuperQuery, _Component);\n\n  function SuperQuery(props) {\n    var _this;\n\n    _classCallCheck(this, SuperQuery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SuperQuery).call(this, props));\n    _this.items = [];\n    _this.inputProps = {\n      size: 40,\n      autoFocus: true\n    };\n    _this.menuProps = {\n      style: {\n        listStyle: 'none'\n      }\n    };\n    _this.supportTypes = new SupportType();\n    _this.signTypes = new SignType();\n\n    _this.formattedMuttArray = function () {\n      var mutt = [];\n\n      for (var i = 0; i < _this.props.map.muttArray.length; i++) {\n        var leMutt = {};\n        leMutt.name = _this.props.map.muttArray[i].code.toUpperCase() + \":\" + _this.props.map.muttArray[i].name.toUpperCase();\n        leMutt.id = _this.props.map.muttArray[i].id;\n        mutt.push(leMutt);\n      }\n\n      return mutt;\n    };\n\n    _this.mutcdLookUpSelectHandler = function (desc) {\n      var option = desc.name.split(':');\n\n      _this.setState({\n        selectedMutt: option[0],\n        selected: true\n      });\n\n      _this.myRef.current.focus();\n    };\n\n    _this.cancelClickHandler = function () {\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.whereConcatHandler = function () {\n      var complex = false;\n      var where = \"\";\n\n      if (_this.state.selectedMutt) {\n        where = \"SIGNCODE='\" + _this.state.selectedMutt + \"'\";\n        complex = true;\n      }\n\n      if (_this.state.selectedSupportId) {\n        where += (complex ? ' AND ' : \"\") + \" SUPPORTID='\" + _this.state.selectedSupportId + \"'\";\n        complex = true;\n      }\n\n      if (_this.state.selectedSignId) {\n        where += (complex ? ' AND ' : \"\") + \" SIGNID='\" + _this.state.selectedSignId + \"'\";\n        complex = true;\n      }\n\n      if (_this.state.selectedSupportType > 0) {\n        where += (complex ? ' AND ' : \"\") + \" SUPPORTTYPE=\" + _this.state.selectedSupportType;\n        complex = true;\n      }\n\n      if (_this.state.selectedSupportStatus > -1) {\n        where += (complex ? ' AND ' : \"\") + \" SUPPORTSTATUS=\" + _this.state.selectedSupportStatus;\n        complex = true;\n      }\n\n      if (_this.state.selectedSignStatus > -1) {\n        where += (complex ? ' AND ' : \"\") + \" SIGNSTATUS=\" + _this.state.selectedSignStatus;\n        complex = true;\n      }\n\n      if (_this.state.selectedMph > 0) {\n        where += (complex ? ' AND ' : \"\") + \" SIGNNUMBER='\" + _this.state.selectedMph + \"'\";\n        complex = true;\n      }\n\n      if (_this.state.selectedSubblockKey) {\n        where += (complex ? ' AND ' : \"\") + \" SUBBLOCKKEY='\" + _this.state.selectedSubblockKey + \"'\";\n        complex = true;\n      }\n\n      return where;\n    };\n\n    _this.searchClickHandler = function (evt) {\n      var where = _this.whereConcatHandler();\n\n      _this.props.removeQueryGraphics();\n\n      var extent = null;\n\n      if (_this.state.selectedExtent === 1) {\n        extent = _this.props.map.extent;\n      } else if (_this.state.selectedExtent === 2) {\n        extent = null;\n      } else if (_this.state.selectedExtent === 3) {\n        extent = {};\n      } else {\n        alert('you have no extent selected, somehow');\n      }\n\n      var layer = layerURLs(_this.props).superquery;\n\n      _this.props.querySuperQuery(where, extent, layer);\n    };\n\n    _this.tabSelectHandler = function (tab) {\n      if (tab == 1) {\n        _this.setState({\n          tab1select: true,\n          tab2select: false,\n          tab3select: false\n        });\n      } else if (tab == 2) {\n        _this.setState({\n          tab1select: false,\n          tab2select: true,\n          tab3select: false\n        });\n      } else {\n        _this.setState({\n          tab1select: false,\n          tab2select: false,\n          tab3select: true\n        });\n      }\n    };\n\n    _this.supportIdChangeHandler = function (evt) {\n      _this.setState({\n        selectedSupportId: evt.target.value.trim()\n      });\n    };\n\n    _this.signIdChangeHandler = function (evt) {\n      _this.setState({\n        selectedSignId: evt.target.value.trim()\n      });\n    };\n\n    _this.supportTypeChangeHandler = function (evt) {\n      _this.setState({\n        selectedSupportType: Number(evt.target.value)\n      });\n    };\n\n    _this.supportStatusChangeHandler = function (evt) {\n      _this.setState({\n        selectedSupportStatus: Number(evt.target.value)\n      });\n    };\n\n    _this.mphChangeHandler = function (evt) {\n      _this.setState({\n        selectedMph: Number(evt.target.value)\n      });\n    };\n\n    _this.signStatusChangeHandler = function (evt) {\n      _this.setState({\n        selectedSignStatus: Number(evt.target.value)\n      });\n    };\n\n    _this.subblockKeyChangeHandler = function (evt) {\n      _this.setState({\n        selectedSubblockKey: evt.target.value.trim()\n      });\n    };\n\n    _this.clearAttribHandler = function () {\n      _this.setState({\n        selectedSupportId: \"\",\n        selectedSignId: \"\",\n        selectedSupportType: 0,\n        selectedSupportStatus: 1,\n        selectedSignStatus: 1,\n        selectedMph: \"\",\n        selectedSubblockKey: \"\",\n        selected: false,\n        ready: true\n      });\n    };\n\n    _this.extentChangeHandler = function (evt) {\n      _this.setState({\n        selectedExtent: Number(evt.target.value)\n      });\n    };\n\n    _this.drawButtonClickHandler = function (evt) {\n      _this.props.setMapClickMode(mapModes.DRAW_MODE, 'default');\n    };\n\n    _this.myRef = React.createRef();\n    _this.state = {\n      selectedMutt: \"\",\n      selectedSupportId: \"\",\n      selectedSignId: \"\",\n      selectedSupportType: 0,\n      selectedSupportStatus: 1,\n      selectedSignStatus: 1,\n      selectedMph: \"\",\n      selectedSubblockKey: \"\",\n      selected: false,\n      ready: true,\n      hidden: false,\n      tab1select: true,\n      tab2select: false,\n      tab3select: false,\n      selectedExtent: 1,\n      customExtent: null //  this.items = this.getOptions();\n\n    };\n    _this.items = _this.formattedMuttArray();\n\n    _this.props.removeQueryGraphics();\n\n    return _this;\n  }\n\n  _createClass(SuperQuery, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"Query\",\n        width: 400,\n        showOk: this.props.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SuperQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SuperQueryCancel\",\n        title: \"Close Window\",\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        className: \"queryTabRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.state.tab1select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"MUTCD\"), React.createElement(\"div\", {\n        className: this.state.tab2select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"ATTRIBUTES\"), React.createElement(\"div\", {\n        className: this.state.tab3select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"EXTENT\")), React.createElement(\"div\", {\n        className: this.state.tab1select ? \"queryTabContentSelected\" : \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Type a partial MUTCD and select from results\"), React.createElement(Downshift, {\n        onChange: function onChange(sel) {\n          return _this2.mutcdLookUpSelectHandler(sel);\n        },\n        itemToString: function itemToString(item) {\n          return item ? item.name : '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            getMenuProps = _ref.getMenuProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex,\n            selectedItem = _ref.selectedItem;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({}, getInputProps(_this2.inputProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        })), React.createElement(\"ul\", Object.assign({}, getMenuProps(_this2.menuProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }), isOpen ? _this2.items.filter(function (item) {\n          return !inputValue || item.name.includes(inputValue.toUpperCase());\n        }).map(function (item, index) {\n          return React.createElement(\"li\", Object.assign({}, getItemProps({\n            key: item.id,\n            index: index,\n            item: item,\n            style: {\n              backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n              fontWeight: selectedItem === item ? 'bold' : 'normal'\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335\n            },\n            __self: this\n          }), item.name);\n        }) : null));\n      })), React.createElement(\"div\", {\n        className: this.state.tab2select ? \"queryTabContentSelected\" : \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"MUTCD:\"), React.createElement(\"input\", {\n        type: \"text\",\n        disabled: true,\n        value: this.state.selectedMutt,\n        className: \"selectedMUTCD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"MPH:\"), React.createElement(\"select\", {\n        className: \"selectedMPH\",\n        value: this.state.selectedMph,\n        onChange: this.mphChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, addOptionsToSelect(this.signTypes._codedValuesSpeedLimit))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"SUBBLOCK KEY:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"selectedSubblockKey\",\n        value: this.state.selectedSubblockKey,\n        onChange: this.subblockKeyChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"SUPPORT STATUS:\"), React.createElement(\"select\", {\n        className: \"selectedSupportStatus\",\n        value: this.state.selectedSupportStatus,\n        onChange: this.supportStatusChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, addOptionsToSelect(this.supportTypes._codedValuesSupportStatus))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"SUPPORT TYPE:\"), React.createElement(\"select\", {\n        className: \"selectedSupportType\",\n        value: this.state.selectedSupportType,\n        onChange: this.supportTypeChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, addOptionsToSelect(this.supportTypes._codedValuesSupportType0))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"SUPPORT ID:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"selectedSupportId\",\n        value: this.state.selectedSupportId,\n        onChange: this.supportIdChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"SIGN STATUS:\"), React.createElement(\"select\", {\n        className: \"selectedSignStatus\",\n        value: this.state.selectedSignStatus,\n        onChange: this.signStatusChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, addOptionsToSelect(this.signTypes._codedValuesSignStatus))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"SIGN ID:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"selectedSignId\",\n        value: this.state.selectedSignId,\n        onChange: this.signIdChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: this.state.tab3select ? \"queryTabContentSelected\" : \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"queryRadioDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"extent\",\n        value: \"1\",\n        defaultChecked: true,\n        className: \"queryRadioButton\",\n        onChange: this.extentChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), \"Map Extent - Will search the general area shown on the map.\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"queryRadioDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"extent\",\n        value: \"2\",\n        className: \"queryRadioButton\",\n        onChange: this.extentChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), \"City Extent - Will search the entire area of the District. Primarily for use with IDs, using this option for a MUTCD may result in queries that are too big to be useful.\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"queryRadioDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"extent\",\n        value: \"3\",\n        className: \"queryRadioButton\",\n        onChange: this.extentChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), \"Custom Extent - Use the Draw Tool to make a search extent.\", React.createElement(\"button\", {\n        className: \"drawButton\",\n        onClick: this.drawButtonClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bottomDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, this.props.graphic.queryCount, \"\\xA0 features found\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"The Extent for the query will be the extent of the displayed map\"), React.createElement(\"button\", {\n        onClick: this.clearAttribHandler,\n        disabled: !this.state.tab2select,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"CLEAR\"), React.createElement(\"button\", {\n        ref: this.myRef,\n        onClick: this.searchClickHandler,\n        disabled: this.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"SEARCH\"))));\n    }\n  }]);\n\n  return SuperQuery;\n}(Component);\n\nexport { SuperQuery as default };","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\SuperQuery.js"],"names":["React","Component","ModalWrapper","layerURLs","Downshift","SupportType","SignType","addOptionsToSelect","mapModes","runInThisContext","SuperQuery","props","items","inputProps","size","autoFocus","menuProps","style","listStyle","supportTypes","signTypes","formattedMuttArray","mutt","i","map","muttArray","length","leMutt","name","code","toUpperCase","id","push","mutcdLookUpSelectHandler","desc","option","split","setState","selectedMutt","selected","myRef","current","focus","cancelClickHandler","modalClicked","whereConcatHandler","complex","where","state","selectedSupportId","selectedSignId","selectedSupportType","selectedSupportStatus","selectedSignStatus","selectedMph","selectedSubblockKey","searchClickHandler","evt","removeQueryGraphics","extent","selectedExtent","alert","layer","superquery","querySuperQuery","tabSelectHandler","tab","tab1select","tab2select","tab3select","supportIdChangeHandler","target","value","trim","signIdChangeHandler","supportTypeChangeHandler","Number","supportStatusChangeHandler","mphChangeHandler","signStatusChangeHandler","subblockKeyChangeHandler","clearAttribHandler","ready","extentChangeHandler","drawButtonClickHandler","setMapClickMode","DRAW_MODE","createRef","hidden","customExtent","showOk","sel","item","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","index","key","backgroundColor","fontWeight","_codedValuesSpeedLimit","_codedValuesSupportStatus","_codedValuesSupportType0","_codedValuesSignStatus","graphic","queryCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './SuperQuery.css'\r\nimport ModalWrapper from './Modals/ModalWrapper';\r\nimport {layerURLs} from '../../utils/JSAPI';\r\nimport Downshift from 'downshift';\r\nimport {SupportType, SignType, addOptionsToSelect} from '../../SignworksJSON';\r\nimport {mapModes} from \"../../redux/reducers/graphic\"\r\nimport {runInThisContext} from 'vm';\r\n\r\n//import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\r\n\r\nexport default class SuperQuery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedMutt: \"\",\r\n            selectedSupportId: \"\",\r\n            selectedSignId: \"\",\r\n            selectedSupportType: 0,\r\n            selectedSupportStatus: 1,\r\n            selectedSignStatus: 1,\r\n            selectedMph: \"\",\r\n            selectedSubblockKey: \"\",\r\n            selected: false,\r\n            ready: true,\r\n            hidden: false,\r\n            tab1select: true,\r\n            tab2select: false,\r\n            tab3select: false,\r\n            selectedExtent: 1,\r\n            customExtent: null\r\n        }\r\n        //  this.items = this.getOptions();\r\n        this.items = this.formattedMuttArray();\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n    }\r\n\r\n    items = [];\r\n\r\n    inputProps = {\r\n        size: 40,\r\n        autoFocus: true\r\n    };\r\n\r\n    menuProps = {\r\n        style: {\r\n            listStyle: 'none'\r\n        }\r\n    };\r\n\r\n    supportTypes = new SupportType();\r\n    signTypes = new SignType();\r\n\r\n    formattedMuttArray = () => {\r\n\r\n        let mutt = [];\r\n        for (let i = 0; i < this.props.map.muttArray.length; i++) {\r\n            let leMutt = {};\r\n            leMutt.name = this\r\n                .props\r\n                .map\r\n                .muttArray[i]\r\n                .code\r\n                .toUpperCase() + \":\" + this\r\n                .props\r\n                .map\r\n                .muttArray[i]\r\n                .name\r\n                .toUpperCase();\r\n            leMutt.id = this.props.map.muttArray[i].id;\r\n            mutt.push(leMutt);\r\n\r\n        }\r\n        return mutt;\r\n    }\r\n\r\n    mutcdLookUpSelectHandler = (desc) => {\r\n\r\n        let option = desc\r\n            .name\r\n            .split(':')\r\n        this.setState({selectedMutt: option[0], selected: true})\r\n        this\r\n            .myRef\r\n            .current\r\n            .focus();\r\n\r\n    }\r\n\r\n    cancelClickHandler = () => {\r\n\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }\r\n\r\n    whereConcatHandler = () => {\r\n        let complex = false;\r\n        let where = \"\";\r\n        if (this.state.selectedMutt) {\r\n            where = \"SIGNCODE='\" + this.state.selectedMutt + \"'\";\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSupportId) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SUPPORTID='\" + this.state.selectedSupportId + \"'\";\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSignId) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SIGNID='\" + this.state.selectedSignId + \"'\";\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSupportType > 0) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SUPPORTTYPE=\" + this.state.selectedSupportType;\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSupportStatus > -1) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SUPPORTSTATUS=\" + this.state.selectedSupportStatus;\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSignStatus > -1) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SIGNSTATUS=\" + this.state.selectedSignStatus;\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedMph > 0) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SIGNNUMBER='\" + this.state.selectedMph + \"'\";\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSubblockKey) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SUBBLOCKKEY='\" + this.state.selectedSubblockKey + \"'\";\r\n            complex = true;\r\n        }\r\n\r\n        return where;\r\n    }\r\n\r\n    searchClickHandler = (evt) => {\r\n        let where = this.whereConcatHandler();\r\n\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n\r\n\r\n        let extent = null;\r\n        if (this.state.selectedExtent === 1) {\r\n            extent = this.props.map.extent;\r\n        } else if (this.state.selectedExtent === 2) {\r\n            extent = null;\r\n        } else if (this.state.selectedExtent === 3) {\r\n            extent = {}\r\n        } else {\r\n            alert('you have no extent selected, somehow')\r\n        }\r\n        const layer = layerURLs(this.props).superquery;\r\n\r\n        this\r\n            .props\r\n            .querySuperQuery(where, extent, layer)\r\n\r\n    }\r\n\r\n    tabSelectHandler = (tab) => {\r\n        if (tab == 1) {\r\n            this.setState({tab1select: true, tab2select: false, tab3select: false})\r\n\r\n        } else if (tab == 2) {\r\n            this.setState({tab1select: false, tab2select: true, tab3select: false})\r\n        } else {\r\n            this.setState({tab1select: false, tab2select: false, tab3select: true})\r\n        }\r\n\r\n    }\r\n\r\n    supportIdChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedSupportId: evt\r\n                .target\r\n                .value\r\n                .trim()\r\n        })\r\n    }\r\n\r\n    signIdChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedSignId: evt\r\n                .target\r\n                .value\r\n                .trim()\r\n        });\r\n    }\r\n\r\n    supportTypeChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedSupportType: Number(evt.target.value)\r\n        })\r\n    }\r\n\r\n    supportStatusChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedSupportStatus: Number(evt.target.value)\r\n        })\r\n    }\r\n\r\n    mphChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedMph: Number(evt.target.value)\r\n        })\r\n    }\r\n\r\n    signStatusChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedSignStatus: Number(evt.target.value)\r\n        })\r\n    }\r\n\r\n    subblockKeyChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedSubblockKey: evt\r\n                .target\r\n                .value\r\n                .trim()\r\n        })\r\n    }\r\n\r\n    clearAttribHandler = () => {\r\n        this.setState({\r\n            selectedSupportId: \"\",\r\n            selectedSignId: \"\",\r\n            selectedSupportType: 0,\r\n            selectedSupportStatus: 1,\r\n            selectedSignStatus: 1,\r\n            selectedMph: \"\",\r\n            selectedSubblockKey: \"\",\r\n            selected: false,\r\n            ready: true\r\n        })\r\n    }\r\n\r\n    extentChangeHandler = (evt) => {\r\n        this.setState({\r\n            selectedExtent: Number(evt.target.value)\r\n        })\r\n    }\r\n\r\n    drawButtonClickHandler = (evt) => {\r\n\r\n        this\r\n            .props\r\n            .setMapClickMode(mapModes.DRAW_MODE, 'default')\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <ModalWrapper\r\n                {...this.props}\r\n                title=\"Query\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.showOk}>\r\n\r\n                <div className=\"SuperQuery\">\r\n                    <div\r\n                        className=\"SuperQueryCancel\"\r\n                        title=\"Close Window\"\r\n                        onClick={this.cancelClickHandler}>X</div>\r\n                    <div className=\"queryTabRow\">\r\n                        <div\r\n                            className={this.state.tab1select\r\n                            ? \"queryTabSelect\"\r\n                            : \"queryTab\"}\r\n                            onClick={() => this.tabSelectHandler(1)}>MUTCD</div>\r\n                        <div\r\n                            className={this.state.tab2select\r\n                            ? \"queryTabSelect\"\r\n                            : \"queryTab\"}\r\n                            onClick={() => this.tabSelectHandler(2)}>ATTRIBUTES</div>\r\n                        <div\r\n                            className={this.state.tab3select\r\n                            ? \"queryTabSelect\"\r\n                            : \"queryTab\"}\r\n                            onClick={() => this.tabSelectHandler(3)}>EXTENT</div>\r\n                    </div>\r\n                    <div\r\n                        className={this.state.tab1select\r\n                        ? \"queryTabContentSelected\"\r\n                        : \"queryTabContent\"}>\r\n\r\n                        <p>Type a partial MUTCD and select from results</p>\r\n                        <Downshift\r\n                            onChange=\r\n                            {(sel) => this.mutcdLookUpSelectHandler(sel)}\r\n                            itemToString={item => (item\r\n                            ? item.name\r\n                            : '')}>\r\n                            {({\r\n                                getInputProps,\r\n                                getItemProps,\r\n                                getMenuProps,\r\n                                isOpen,\r\n                                inputValue,\r\n                                highlightedIndex,\r\n                                selectedItem\r\n                            }) => (\r\n                                <div>\r\n\r\n                                    <input {...getInputProps(this.inputProps)}/>\r\n                                    <ul {...getMenuProps(this.menuProps)}>\r\n\r\n                                        {isOpen\r\n                                            ? this\r\n                                                .items\r\n                                                .filter(item => !inputValue || item.name.includes(inputValue.toUpperCase()))\r\n                                                .map((item, index) => (\r\n                                                    <li\r\n                                                        {...getItemProps({ key: item.id, index, item, style: { backgroundColor: highlightedIndex === index ? 'lightgray' : 'white', fontWeight: selectedItem === item ? 'bold' : 'normal', } })}>\r\n                                                        {item.name}\r\n                                                    </li>\r\n                                                ))\r\n                                            : null}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </Downshift>\r\n\r\n                    </div>\r\n\r\n                    <div\r\n                        className={this.state.tab2select\r\n                        ? \"queryTabContentSelected\"\r\n                        : \"queryTabContent\"}>\r\n                        <div>\r\n                            <label>MUTCD:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled\r\n                                value={this.state.selectedMutt}\r\n                                className=\"selectedMUTCD\"></input>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>MPH:</label>\r\n                            <select\r\n                                className=\"selectedMPH\"\r\n                                value={this.state.selectedMph}\r\n                                onChange={this.mphChangeHandler}>{addOptionsToSelect(this.signTypes._codedValuesSpeedLimit)}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label>SUBBLOCK KEY:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"selectedSubblockKey\"\r\n                                value={this.state.selectedSubblockKey}\r\n                                onChange={this.subblockKeyChangeHandler}></input>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div>\r\n                            <label>SUPPORT STATUS:</label>\r\n                            <select\r\n                                className=\"selectedSupportStatus\"\r\n                                value={this.state.selectedSupportStatus}\r\n                                onChange={this.supportStatusChangeHandler}>{addOptionsToSelect(this.supportTypes._codedValuesSupportStatus)}</select>\r\n                        </div>\r\n                        <div>\r\n                            <label>SUPPORT TYPE:</label>\r\n                            <select\r\n                                className=\"selectedSupportType\"\r\n                                value={this.state.selectedSupportType}\r\n                                onChange={this.supportTypeChangeHandler}>\r\n                                {addOptionsToSelect(this.supportTypes._codedValuesSupportType0)}</select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>SUPPORT ID:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"selectedSupportId\"\r\n                                value={this.state.selectedSupportId}\r\n                                onChange={this.supportIdChangeHandler}></input>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div>\r\n                            <label>SIGN STATUS:</label>\r\n                            <select\r\n                                className=\"selectedSignStatus\"\r\n                                value={this.state.selectedSignStatus}\r\n                                onChange={this.signStatusChangeHandler}>\r\n                                {addOptionsToSelect(this.signTypes._codedValuesSignStatus)}</select>\r\n                        </div>\r\n                        <div>\r\n                            <label>SIGN ID:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"selectedSignId\"\r\n                                value={this.state.selectedSignId}\r\n                                onChange={this.signIdChangeHandler}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={this.state.tab3select\r\n                        ? \"queryTabContentSelected\"\r\n                        : \"queryTabContent\"}>\r\n                        <div className=\"queryRadioDiv\">\r\n                            <input\r\n                                type='radio'\r\n                                name=\"extent\"\r\n                                value=\"1\"\r\n                                defaultChecked\r\n                                className=\"queryRadioButton\"\r\n                                onChange={this.extentChangeHandler}></input>\r\n                            Map Extent - Will search the general area shown on the map.\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"queryRadioDiv\">\r\n                            <input\r\n                                type='radio'\r\n                                name=\"extent\"\r\n                                value=\"2\"\r\n                                className=\"queryRadioButton\"\r\n                                onChange={this.extentChangeHandler}></input>\r\n                            City Extent - Will search the entire area of the District. Primarily for use\r\n                            with IDs, using this option for a MUTCD may result in queries that are too big\r\n                            to be useful.\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"queryRadioDiv\">\r\n                            <input\r\n                                type='radio'\r\n                                name=\"extent\"\r\n                                value=\"3\"\r\n                                className=\"queryRadioButton\"\r\n                                onChange={this.extentChangeHandler}></input>\r\n                            Custom Extent - Use the Draw Tool to make a search extent.\r\n                            <button className=\"drawButton\" onClick={this.drawButtonClickHandler}></button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"bottomDiv\">\r\n                        <div >\r\n                            {this.props.graphic.queryCount}\r\n                            &nbsp; features found</div>\r\n                        <p>\r\n                            The Extent for the query will be the extent of the displayed map</p>\r\n                        <button onClick={this.clearAttribHandler} disabled={!this.state.tab2select}>CLEAR</button>\r\n                        < button ref={this.myRef} onClick={this.searchClickHandler} disabled={this.selected}>\r\n                            SEARCH</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}