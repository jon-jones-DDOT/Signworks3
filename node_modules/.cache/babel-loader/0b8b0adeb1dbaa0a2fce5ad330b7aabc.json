{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(query),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchMAR);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { getLocation2 } from '../../utils/JSAPI'; // WORKER //\n\nfunction query(action) {\n  var queryResult, features;\n  return _regeneratorRuntime.wrap(function query$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getLocation2, [action.payload.where, \"address\"]);\n\n        case 3:\n          queryResult = _context.sent;\n          features = queryResult.returnDataset.Table1;\n          console.log('queryResult', features);\n          _context.next = 8;\n          return put({\n            type: graphicTypes.SET_MAR_RESULTS_RG,\n            payload: {\n              marFeatures: features,\n              marCount: features.length\n            }\n          });\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/query, ', _context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n} // WATCHER //\n\n\nexport function watchMAR() {\n  return _regeneratorRuntime.wrap(function watchMAR$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.QUERY_MAR_S, query);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_getMARresult.js"],"names":["query","watchMAR","call","put","takeLatest","types","graphicTypes","getLocation2","action","payload","where","queryResult","features","returnDataset","Table1","console","log","type","SET_MAR_RESULTS_RG","marFeatures","marCount","length","QUERY_MAR_S"],"mappings":";;;;yBAQWA,K;;;yBAyBOC,Q;;AAjClB,SAAQC,IAAR,EAAcC,GAAd,EAAkBC,UAAlB,QAAmC,oBAAnC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AACA,SAAQC,YAAR,QAA2B,mBAA3B,C,CAIA;;AAEA,SAAWP,KAAX,CAAiBQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKwB,iBAAMN,IAAI,CAACK,YAAD,EAAc,CAACC,MAAM,CAACC,OAAP,CAAeC,KAAhB,EAAuB,SAAvB,CAAd,CAAV;;AALxB;AAKUC,UAAAA,WALV;AAMUC,UAAAA,QANV,GAMqBD,WAAW,CAACE,aAAZ,CAA0BC,MAN/C;AAOIC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,QAA3B;AAPJ;AASO,iBAAMT,GAAG,CAAC;AACTc,YAAAA,IAAI,EAAEX,YAAY,CAACY,kBADV;AAETT,YAAAA,OAAO,EAAE;AACLU,cAAAA,WAAW,EAACP,QADP;AAELQ,cAAAA,QAAQ,EAAER,QAAQ,CAACS;AAFd;AAFA,WAAD,CAAT;;AATP;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBQN,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AApBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAwBA;;;AACA,OAAO,SAAWf,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAACgB,WAAd,EAA2BtB,KAA3B,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put,takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {getLocation2} from '../../utils/JSAPI'\r\n\r\n\r\n\r\n// WORKER //\r\n\r\nfunction * query(action) {\r\n    try{\r\n     \r\n     \r\n\r\n    const queryResult = yield call(getLocation2,[action.payload.where, \"address\"]);\r\n    const features = queryResult.returnDataset.Table1;\r\n    console.log('queryResult', features)\r\n       \r\n       yield put({\r\n        type: graphicTypes.SET_MAR_RESULTS_RG,\r\n        payload: {\r\n            marFeatures:features,\r\n            marCount: features.length\r\n        }\r\n    });\r\n        \r\n    }\r\n    \r\n    catch (e) {\r\n        console.log('SAGA ERROR: graphic/query, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchMAR() {\r\n   \r\n    yield takeLatest(graphicTypes.QUERY_MAR_S, query);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}