{"ast":null,"code":"var React = require('react');\n\nvar classNames = require('classnames');\n\nvar createReactClass = require('create-react-class');\n\nvar PropTypes = require('prop-types');\n/**\n * Encapsulates the rendering of an option that has been \"selected\" in a\n * TypeaheadTokenizer\n */\n\n\nvar Token = createReactClass({\n  displayName: 'Token',\n  propTypes: {\n    className: PropTypes.string,\n    name: PropTypes.string,\n    children: PropTypes.string,\n    object: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onRemove: PropTypes.func,\n    value: PropTypes.string\n  },\n  render: function render() {\n    var className = classNames([\"typeahead-token\", this.props.className]);\n    return React.createElement('div', {\n      className: className\n    }, this._renderHiddenInput(), this.props.children, this._renderCloseButton());\n  },\n  _renderHiddenInput: function _renderHiddenInput() {\n    // If no name was set, don't create a hidden input\n    if (!this.props.name) {\n      return null;\n    }\n\n    return React.createElement('input', {\n      type: 'hidden',\n      name: this.props.name + '[]',\n      value: this.props.value || this.props.object\n    });\n  },\n  _renderCloseButton: function _renderCloseButton() {\n    if (!this.props.onRemove) {\n      return \"\";\n    }\n\n    return React.createElement('a', {\n      className: this.props.className || \"typeahead-token-close\",\n      href: '#',\n      onClick: function (event) {\n        this.props.onRemove(this.props.object);\n        event.preventDefault();\n      }.bind(this)\n    }, '\\xD7');\n  }\n});\nmodule.exports = Token;","map":null,"metadata":{},"sourceType":"script"}