{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\App.js\";\n// Copyright 2019 Esri Licensed under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\n// or agreed to in writing, software distributed under the License is\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied. See the License for the specific language\n// governing permissions and limitations under the License.​ React\nimport React, { Component } from 'react'; // Redux\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { actions as authActions } from '../redux/reducers/auth';\nimport { actions as configActions } from '../redux/reducers/config'; // Components\n\nimport AuthManager from './esri/auth/AuthManager';\nimport LoadScreen from './LoadScreen';\nimport Main from './Main';\nimport Beforeunload from 'react-beforeunload';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // When the component mounts call to get the config file\n      this.props.fetchConfig();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Check that the config was initially loaded and don't run this process again\n      if (this.props.config && this.props.config.loaded !== prevProps.config.loaded) {\n        // Attach the AuthManager to the window, it doesn't need to be rendered\n        window.authManager = new AuthManager(this.props.config.appId, this.props.config.portalUrl, this.props.config.jsapiUrl, this.props.config.jsapiV4, this.props.config.loginWithPopup);\n        window.authManager.startup().then(this.props.checkAuth);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // We'll use these to determine what state the app is in\n      var configLoaded = this.props.config.loaded;\n      var authTried = this.props.auth.loaded; // We don't need to authenticate if there is no portalUrl\n\n      var isAuthenticated = this.props.auth.user && this.props.auth.user.username || !this.props.config.portalUrl; // App is initializing\n\n      if (!authTried || !isAuthenticated || !configLoaded) {\n        return React.createElement(LoadScreen, {\n          isLoaded: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      } // App is initialized and user is authenticated if needed\n\n\n      return React.createElement(Beforeunload, {\n        onBeforeunload: alert('bye'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    config: state.config\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, configActions, authActions), dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\App.js"],"names":["React","Component","bindActionCreators","connect","actions","authActions","configActions","AuthManager","LoadScreen","Main","Beforeunload","App","props","fetchConfig","prevProps","config","loaded","window","authManager","appId","portalUrl","jsapiUrl","jsapiV4","loginWithPopup","startup","then","checkAuth","configLoaded","authTried","auth","isAuthenticated","user","username","alert","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,wBAArC;AACA,SAAQD,OAAO,IAAIE,aAAnB,QAAuC,0BAAvC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;IAEMC,G;;;;;;;;;;;;;wCAEkB;AAChB;AACA,WACKC,KADL,CAEKC,WAFL;AAIH;;;uCAEkBC,S,EAAW;AAC1B;AACA,UAAI,KAAKF,KAAL,CAAWG,MAAX,IAAqB,KAAKH,KAAL,CAAWG,MAAX,CAAkBC,MAAlB,KAA6BF,SAAS,CAACC,MAAV,CAAiBC,MAAvE,EAA+E;AAC3E;AACAC,QAAAA,MAAM,CAACC,WAAP,GAAqB,IAAIX,WAAJ,CAAgB,KAAKK,KAAL,CAAWG,MAAX,CAAkBI,KAAlC,EAAyC,KAAKP,KAAL,CAAWG,MAAX,CAAkBK,SAA3D,EAAsE,KAAKR,KAAL,CAAWG,MAAX,CAAkBM,QAAxF,EAAkG,KAAKT,KAAL,CAAWG,MAAX,CAAkBO,OAApH,EAA6H,KAAKV,KAAL,CAAWG,MAAX,CAAkBQ,cAA/I,CAArB;AACAN,QAAAA,MAAM,CACDC,WADL,CAEKM,OAFL,GAGKC,IAHL,CAGU,KAAKb,KAAL,CAAWc,SAHrB;AAIH;AACJ;;;6BAEQ;AAEL;AACA,UAAMC,YAAY,GAAG,KAAKf,KAAL,CAAWG,MAAX,CAAkBC,MAAvC;AACA,UAAMY,SAAS,GAAG,KAAKhB,KAAL,CAAWiB,IAAX,CAAgBb,MAAlC,CAJK,CAKL;;AACA,UAAMc,eAAe,GAAI,KAAKlB,KAAL,CAAWiB,IAAX,CAAgBE,IAAhB,IAAwB,KAAKnB,KAAL,CAAWiB,IAAX,CAAgBE,IAAhB,CAAqBC,QAA9C,IAA2D,CAAC,KAAKpB,KAAL,CAAWG,MAAX,CAAkBK,SAAtG,CANK,CAQL;;AACA,UAAI,CAACQ,SAAD,IAAc,CAACE,eAAf,IAAkC,CAACH,YAAvC,EAAqD;AACjD,eAAQ,oBAAC,UAAD;AAAY,UAAA,QAAQ,EAAE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,OAXI,CAaL;;;AACA,aACI,oBAAC,YAAD;AAAc,QAAA,cAAc,EAAEM,KAAK,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAOH;;;;EA3CahC,S;;AA8ClB,IAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAACN,IAAAA,IAAI,EAAEM,KAAK,CAACN,IAAb;AAAmBd,IAAAA,MAAM,EAAEoB,KAAK,CAACpB;AAAjC,GAAL;AAAA,CAA7B;;AAEA,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,QAAV,EAAoB;AAC3C,SAAOnC,kBAAkB,mBAClBI,aADkB,EAElBD,WAFkB,GAGtBgC,QAHsB,CAAzB;AAIH,CALD;;AAOA,eAAelC,OAAO,CAAC+B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,GAA7C,CAAf","sourcesContent":["// Copyright 2019 Esri Licensed under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\r\n// or agreed to in writing, software distributed under the License is\r\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied. See the License for the specific language\r\n// governing permissions and limitations under the License.​ React\r\nimport React, {Component} from 'react';\r\n\r\n// Redux\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {actions as authActions} from '../redux/reducers/auth';\r\nimport {actions as configActions} from '../redux/reducers/config';\r\n\r\n// Components\r\nimport AuthManager from './esri/auth/AuthManager';\r\nimport LoadScreen from './LoadScreen';\r\nimport Main from './Main';\r\nimport Beforeunload from 'react-beforeunload';\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        // When the component mounts call to get the config file\r\n        this\r\n            .props\r\n            .fetchConfig();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Check that the config was initially loaded and don't run this process again\r\n        if (this.props.config && this.props.config.loaded !== prevProps.config.loaded) {\r\n            // Attach the AuthManager to the window, it doesn't need to be rendered\r\n            window.authManager = new AuthManager(this.props.config.appId, this.props.config.portalUrl, this.props.config.jsapiUrl, this.props.config.jsapiV4, this.props.config.loginWithPopup);\r\n            window\r\n                .authManager\r\n                .startup()\r\n                .then(this.props.checkAuth);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // We'll use these to determine what state the app is in\r\n        const configLoaded = this.props.config.loaded;\r\n        const authTried = this.props.auth.loaded;\r\n        // We don't need to authenticate if there is no portalUrl\r\n        const isAuthenticated = (this.props.auth.user && this.props.auth.user.username) || !this.props.config.portalUrl;\r\n\r\n        // App is initializing\r\n        if (!authTried || !isAuthenticated || !configLoaded) {\r\n            return (<LoadScreen isLoaded={false}/>)\r\n        }\r\n\r\n        // App is initialized and user is authenticated if needed\r\n        return (\r\n            <Beforeunload onBeforeunload={alert('bye')}>\r\n                <Main/>\r\n\r\n            </Beforeunload>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({auth: state.auth, config: state.config})\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n    return bindActionCreators({\r\n        ...configActions,\r\n        ...authActions\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n"]},"metadata":{},"sourceType":"module"}