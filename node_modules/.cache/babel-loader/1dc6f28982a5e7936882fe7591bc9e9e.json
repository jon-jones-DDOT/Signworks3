{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(openStreetSmart),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchStreetSmart);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { projectGeometry, getSupportByExtent, pointToExtentSaga } from '../../utils/JSAPI';\nimport { arcgisToGeoJSON } from '@esri/arcgis-to-geojson-utils'; // WORKER //\n\nfunction openStreetSmart(action) {\n  var projectResult, geoms, localExtent, features, ssOverlayFeatures;\n  return _regeneratorRuntime.wrap(function openStreetSmart$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(projectGeometry, [[action.payload.ssFeature.geometry], action.payload.layers.geometryService, action.payload.inSR, action.payload.outSR]);\n\n        case 3:\n          projectResult = _context.sent;\n          geoms = projectResult;\n          _context.next = 7;\n          return call(pointToExtentSaga, [action.payload.viewWidth, action.payload.viewExtentWidth, action.payload.view_spatRef, action.payload.coords[0], 400 //tolerance in pixels\n          ]);\n\n        case 7:\n          localExtent = _context.sent;\n          console.log('localExtent', localExtentt); //get neighboring points from the selected support\n\n          _context.next = 11;\n          return call(getSupportByExtent, [localExtent, action.payload.layers.supports, 2248]);\n\n        case 11:\n          features = _context.sent;\n          ssOverlayFeatures = features.data.features;\n          console.log('ssOverlayFeatures', ssOverlayFeatures);\n          _context.next = 16;\n          return put({\n            type: graphicTypes.SHOW_STREETSMART_VIEWER,\n            payload: {\n              leftVisible: true,\n              ssEdit: false,\n              ssView: true,\n              ssInputGeom: geoms,\n              ssOverlayFeatures: ssOverlayFeatures\n            }\n          });\n\n        case 16:\n          _context.next = 21;\n          break;\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/openStreetSmart, ', _context.t0);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 18]]);\n} // WATCHER //\n\n\nexport function watchStreetSmart() {\n  return _regeneratorRuntime.wrap(function watchStreetSmart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_openStreetSmart.js"],"names":["openStreetSmart","watchStreetSmart","call","put","takeLatest","types","graphicTypes","projectGeometry","getSupportByExtent","pointToExtentSaga","arcgisToGeoJSON","action","payload","ssFeature","geometry","layers","geometryService","inSR","outSR","projectResult","geoms","viewWidth","viewExtentWidth","view_spatRef","coords","localExtent","console","log","localExtentt","supports","features","ssOverlayFeatures","data","type","SHOW_STREETSMART_VIEWER","leftVisible","ssEdit","ssView","ssInputGeom","START_STREETSMART_VIEWER"],"mappings":";;;;yBASWA,e;;;yBA+COC,gB;;AAxDlB,SAAQC,IAAR,EAAcC,GAAd,EAAkBC,UAAlB,QAAmC,oBAAnC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AACA,SAAQC,eAAR,EAAwBC,kBAAxB,EAA2CC,iBAA3C,QAAmE,mBAAnE;AACA,SAAQC,eAAR,QAA8B,+BAA9B,C,CAIA;;AAEA,SAAWV,eAAX,CAA2BW,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI+B,iBAAMT,IAAI,CAACK,eAAD,EAAkB,CAAC,CAACI,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyBC,QAA1B,CAAD,EACnDH,MAAM,CAACC,OAAP,CAAeG,MAAf,CAAsBC,eAD6B,EACZL,MAAM,CAACC,OAAP,CAAeK,IADH,EACSN,MAAM,CAACC,OAAP,CAAeM,KADxB,CAAlB,CAAV;;AAJ/B;AAIaC,UAAAA,aAJb;AAOaC,UAAAA,KAPb,GAOqBD,aAPrB;AAAA;AASoB,iBAAMjB,IAAI,CAACO,iBAAD,EAAmB,CAAEE,MAAM,CAACC,OAAP,CAAeS,SAAjB,EACjDV,MAAM,CAACC,OAAP,CAAeU,eADkC,EAEjDX,MAAM,CAACC,OAAP,CAAeW,YAFkC,EAGjDZ,MAAM,CAACC,OAAP,CAAeY,MAAf,CAAsB,CAAtB,CAHiD,EAIjD,GAJiD,CAI5C;AAJ4C,WAAnB,CAAV;;AATpB;AASMC,UAAAA,WATN;AAgBAC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,YAA3B,EAhBA,CAiBO;;AAjBP;AAkBsB,iBAAM1B,IAAI,CAACM,kBAAD,EAAqB,CAACiB,WAAD,EAAcd,MAAM,CAACC,OAAP,CAAeG,MAAf,CAAsBc,QAApC,EAA6C,IAA7C,CAArB,CAAV;;AAlBtB;AAkBWC,UAAAA,QAlBX;AAmBWC,UAAAA,iBAnBX,GAmB+BD,QAAQ,CAACE,IAAT,CAAcF,QAnB7C;AAqBAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCI,iBAAjC;AArBA;AA2BO,iBAAM5B,GAAG,CAAC;AACT8B,YAAAA,IAAI,EAAE3B,YAAY,CAAC4B,uBADV;AAETtB,YAAAA,OAAO,EAAE;AACLuB,cAAAA,WAAW,EAAE,IADR;AAELC,cAAAA,MAAM,EAAE,KAFH;AAGLC,cAAAA,MAAM,EAAE,IAHH;AAILC,cAAAA,WAAW,EAAClB,KAJP;AAKLW,cAAAA,iBAAiB,EAAjBA;AALK;AAFA,WAAD,CAAT;;AA3BP;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0CQL,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;AA1CR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA8CA;;;AACA,OAAO,SAAW1B,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAACiC,wBAAd,EAAwCvC,eAAxC,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put,takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {projectGeometry,getSupportByExtent,pointToExtentSaga} from '../../utils/JSAPI'\r\nimport {arcgisToGeoJSON} from '@esri/arcgis-to-geojson-utils'\r\n\r\n\r\n\r\n// WORKER //\r\n\r\nfunction * openStreetSmart(action) {\r\n    try{\r\n     \r\n \r\n       const projectResult =   yield call(projectGeometry, [[action.payload.ssFeature.geometry],\r\n        action.payload.layers.geometryService, action.payload.inSR, action.payload.outSR]);\r\n       \r\n       const geoms = projectResult;\r\n     \r\nconst localExtent = yield call(pointToExtentSaga,[ action.payload.viewWidth,\r\naction.payload.viewExtentWidth,\r\naction.payload.view_spatRef,\r\naction.payload.coords[0],\r\n400  //tolerance in pixels\r\n])\r\n\r\nconsole.log('localExtent', localExtentt)\r\n       //get neighboring points from the selected support\r\n     const features = yield call(getSupportByExtent, [localExtent, action.payload.layers.supports,2248]);\r\n     const ssOverlayFeatures = features.data.features;\r\n    \r\nconsole.log('ssOverlayFeatures', ssOverlayFeatures)\r\n\r\n\r\n\r\n\r\n\r\n       yield put({\r\n        type: graphicTypes.SHOW_STREETSMART_VIEWER,\r\n        payload: {\r\n            leftVisible: true,\r\n            ssEdit: false,\r\n            ssView: true,\r\n            ssInputGeom:geoms,\r\n            ssOverlayFeatures\r\n        }\r\n    });\r\n\r\n        \r\n    }\r\n    \r\n    catch (e) {\r\n        console.log('SAGA ERROR: graphic/openStreetSmart, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchStreetSmart() {\r\n   \r\n    yield takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}