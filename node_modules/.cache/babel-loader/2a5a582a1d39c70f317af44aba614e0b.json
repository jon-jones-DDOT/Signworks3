{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\StreetSmart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actions as mapActions } from '../../redux/reducers/map';\nimport { actions as graphicActions } from '../../redux/reducers/graphic';\nimport { createFeatureSet } from '../../utils/JSAPI';\nimport './StreetSmart.css';\nvar containerID = \"StreetSmart-container\";\n\nvar StreetSmart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StreetSmart, _Component);\n\n  function StreetSmart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreetSmart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreetSmart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.PointsSLD = ' <?xml version=\"1.0\"  encoding=\"ISO-8859-1\"?><StyledLayerDescriptor  version=\"1.' + '0.0\"             xsi:schemaLocation=\"http://www.opengis.net/sld  StyledLayerDesc' + 'riptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net' + '/ogc\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/20' + '01/XMLSchema-instance\"><NamedLayer><Name>Simple  point  with  stroke</Name><User' + 'Style><Title>GeoServer  SLD  Cook  Book:  Simple  point  with  stroke</Title><Fe' + 'atureTypeStyle><Rule><PointSymbolizer><Graphic><Mark><WellKnownName>circle</Well' + 'KnownName><Fill><CssParameter  name=\"fill\">#FF0000</CssParameter></Fill><Stroke>' + '<CssParameter  name=\"stroke\">#000000</CssParameter><CssParameter  name=\"stroke-w' + 'idth\">2</CssParameter></Stroke></Mark><Size>6</Size></Graphic></PointSymbolizer>' + '</Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';\n    _this.selectSLD = '<?xml version=\"1.0\"  encoding=\"ISO-8859-1\"?><StyledLayerDescriptor  version=\"1.0' + '.0\"             xsi:schemaLocation=\"http://www.opengis.net/sld  StyledLayerDescr' + 'iptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/' + 'ogc\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/200' + '1/XMLSchema-instance\"><NamedLayer><Name>Simple  point  with  stroke</Name><UserS' + 'tyle><Title>GeoServer  SLD  Cook  Book:  Simple  point  with  stroke</Title><Fea' + 'tureTypeStyle><Rule><PointSymbolizer><Graphic><Mark><WellKnownName>circle</WellK' + 'nownName><Fill><CssParameter  name=\"fill\">#00000000</CssParameter><CssParameter ' + 'name=\"fill-opacity\">0.2</CssParameter></Fill><Stroke><CssParameter  name=\"stroke' + '\">#E633FF</CssParameter><CssParameter  name=\"stroke-width\">2</CssParameter></Str' + 'oke></Mark><Size>12</Size></Graphic></PointSymbolizer></Rule></FeatureTypeStyle>' + '</UserStyle></NamedLayer></StyledLayerDescriptor>';\n    _this.geoJSONselectPoint = null;\n\n    _this.ssCancel = function () {\n      window.StreetSmartApi.destroy({\n        targetElement: document.getElementById(containerID)\n      });\n\n      _this.props.closeStreetSmartViewer();\n    };\n\n    _this.setSelectOverlay = function () {\n      createFeatureSet([_this.props.graphic.ssFeature]).then(function (resp) {\n        console.log('resp :', resp);\n        _this.geoJSONselectPoint = window.ArcgisToGeojsonUtils.arcgisToGeoJSON(resp);\n        console.log('geoJSONselectPoint :', _this.geoJSONselectPoint);\n\n        _this.startup(containerID);\n      });\n    };\n\n    _this.setOverlays = function () {};\n\n    _this.startup = function (divId) {\n      console.log('this.props.graphic :', _this.props.graphic);\n      var x = _this.props.graphic.ssInputGeom[0].x;\n      var y = _this.props.graphic.ssInputGeom[0].y;\n      var gjPoints = null;\n      var options = [{\n        name: \"Nearby Supports\",\n        geojson: gjPoints,\n        sldXMLtext: _this.PointsSLD\n      }, {\n        name: \"Selected Support\",\n        geojson: _this.geoJSONselectPoint,\n        sldXMLtext: _this.selectSLD\n      }];\n      window.StreetSmartApi.init({\n        username: \"signworks\",\n        password: \"SIGNWORKS\",\n        apiKey: \"CnkxOTY52fExizg9C_EVanMh2j0RK3gxuzURif89eLsZu3ghqTAt6LEdKng56fo1\",\n        targetElement: document.getElementById(containerID),\n        srs: \"EPSG:2248\",\n        locale: 'en-us',\n        configurationUrl: 'https://atlas.cyclomedia.com/configuration',\n        addressSettings: {\n          locale: \"en\",\n          database: \"Nokia\"\n        }\n      }).then(function () {\n        var viewerType = window.StreetSmartApi.ViewerType.PANORAMA;\n        window.StreetSmartApi.open(x + \",\" + y, {\n          viewerType: viewerType,\n          srs: 'EPSG:2248'\n        }).then(function (result) {\n          if (result) {\n            for (var i = 0; i < result.length; i++) {\n              if (result[i].getType() === window.StreetSmartApi.ViewerType.PANORAMA) {\n                window.panoramaViewer = result[i];\n              } //\n              // window.panoramaViewer.on(window.StreetSmartApi.Events.panoramaViewer.VIEW_CHA\n              // N GE, changeView);\n              // window.panoramaViewer.on(window.StreetSmartApi.Events.panoramaViewer.VIEW_LOA\n              // D _END, loadViewEnd);\n\n              /*       for (let o in options) {\r\n                      console.log('get to here?', options);\r\n                  window.StreetSmartApi.addOverlay(options[o])\r\n              }\r\n              */\n\n\n              console.log('options[1]', options);\n              window.StreetSmartApi.addOverlay(options[1]);\n            }\n          }\n        }.bind(this)).catch(function (reason) {\n          alert('Failed to create component(s) through API: ' + reason);\n        });\n      }, function (err) {\n        alert('Api Init Failed!' + err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StreetSmart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setSelectOverlay();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // Tell React to never update this component, that's up to us\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"StreetSmart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ssCancel\",\n        onClick: this.ssCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        ref: \"ssDiv\",\n        className: \"ssPane\",\n        id: containerID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreetSmart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    map: state.map,\n    graphic: state.graphic,\n    config: state.config\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, mapActions, graphicActions), dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreetSmart);","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\StreetSmart.js"],"names":["React","Component","connect","bindActionCreators","actions","mapActions","graphicActions","createFeatureSet","containerID","StreetSmart","PointsSLD","selectSLD","geoJSONselectPoint","ssCancel","window","StreetSmartApi","destroy","targetElement","document","getElementById","props","closeStreetSmartViewer","setSelectOverlay","graphic","ssFeature","then","resp","console","log","ArcgisToGeojsonUtils","arcgisToGeoJSON","startup","setOverlays","divId","x","ssInputGeom","y","gjPoints","options","name","geojson","sldXMLtext","init","username","password","apiKey","srs","locale","configurationUrl","addressSettings","database","viewerType","ViewerType","PANORAMA","open","result","i","length","getType","panoramaViewer","addOverlay","bind","catch","reason","alert","err","nextProps","nextState","mapStateToProps","state","map","config","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {actions as mapActions} from '../../redux/reducers/map';\r\nimport {actions as graphicActions} from '../../redux/reducers/graphic'\r\nimport {createFeatureSet} from '../../utils/JSAPI'\r\nimport './StreetSmart.css'\r\n\r\nconst containerID = \"StreetSmart-container\";\r\n\r\nclass StreetSmart extends Component {\r\n\r\n    PointsSLD = ' <?xml version=\"1.0\"  encoding=\"ISO-8859-1\"?><StyledLayerDescriptor  version=\"1.' +\r\n            '0.0\"             xsi:schemaLocation=\"http://www.opengis.net/sld  StyledLayerDesc' +\r\n            'riptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net' +\r\n            '/ogc\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/20' +\r\n            '01/XMLSchema-instance\"><NamedLayer><Name>Simple  point  with  stroke</Name><User' +\r\n            'Style><Title>GeoServer  SLD  Cook  Book:  Simple  point  with  stroke</Title><Fe' +\r\n            'atureTypeStyle><Rule><PointSymbolizer><Graphic><Mark><WellKnownName>circle</Well' +\r\n            'KnownName><Fill><CssParameter  name=\"fill\">#FF0000</CssParameter></Fill><Stroke>' +\r\n            '<CssParameter  name=\"stroke\">#000000</CssParameter><CssParameter  name=\"stroke-w' +\r\n            'idth\">2</CssParameter></Stroke></Mark><Size>6</Size></Graphic></PointSymbolizer>' +\r\n            '</Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';\r\n    selectSLD = '<?xml version=\"1.0\"  encoding=\"ISO-8859-1\"?><StyledLayerDescriptor  version=\"1.0' +\r\n            '.0\"             xsi:schemaLocation=\"http://www.opengis.net/sld  StyledLayerDescr' +\r\n            'iptor.xsd\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/' +\r\n            'ogc\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/200' +\r\n            '1/XMLSchema-instance\"><NamedLayer><Name>Simple  point  with  stroke</Name><UserS' +\r\n            'tyle><Title>GeoServer  SLD  Cook  Book:  Simple  point  with  stroke</Title><Fea' +\r\n            'tureTypeStyle><Rule><PointSymbolizer><Graphic><Mark><WellKnownName>circle</WellK' +\r\n            'nownName><Fill><CssParameter  name=\"fill\">#00000000</CssParameter><CssParameter ' +\r\n            'name=\"fill-opacity\">0.2</CssParameter></Fill><Stroke><CssParameter  name=\"stroke' +\r\n            '\">#E633FF</CssParameter><CssParameter  name=\"stroke-width\">2</CssParameter></Str' +\r\n            'oke></Mark><Size>12</Size></Graphic></PointSymbolizer></Rule></FeatureTypeStyle>' +\r\n            '</UserStyle></NamedLayer></StyledLayerDescriptor>';\r\n\r\n    geoJSONselectPoint = null;\r\n\r\n    componentDidMount() {\r\n        this.setSelectOverlay();\r\n       \r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // Tell React to never update this component, that's up to us\r\n        return false;\r\n    }\r\n    ssCancel = () => {\r\n        window\r\n            .StreetSmartApi\r\n            .destroy({\r\n                targetElement: document.getElementById(containerID)\r\n            });\r\n\r\n        this\r\n            .props\r\n            .closeStreetSmartViewer();\r\n\r\n    }\r\n    setSelectOverlay = () => {\r\n        createFeatureSet([this.props.graphic.ssFeature]).then(resp => {\r\n            console.log('resp :', resp);\r\n            this.geoJSONselectPoint = window\r\n                .ArcgisToGeojsonUtils\r\n                .arcgisToGeoJSON(resp);\r\n            console.log('geoJSONselectPoint :', this.geoJSONselectPoint);\r\n            this.startup(containerID);\r\n        })\r\n\r\n    }\r\n\r\n    setOverlays = () => {}\r\n\r\n    startup = (divId) => {\r\n        console.log('this.props.graphic :', this.props.graphic);\r\n        const x = this.props.graphic.ssInputGeom[0].x;\r\n        const y = this.props.graphic.ssInputGeom[0].y;\r\n        \r\n        let gjPoints = null;\r\n        \r\n\r\n        const options = [\r\n            {\r\n                name: \"Nearby Supports\",\r\n                geojson: gjPoints,\r\n                sldXMLtext: this.PointsSLD\r\n            }, {\r\n                name: \"Selected Support\",\r\n                geojson: this.geoJSONselectPoint,\r\n                sldXMLtext: this.selectSLD\r\n            }\r\n        ]\r\n\r\n        window\r\n            .StreetSmartApi\r\n            .init({\r\n                username: \"signworks\",\r\n                password: \"SIGNWORKS\",\r\n                apiKey: \"CnkxOTY52fExizg9C_EVanMh2j0RK3gxuzURif89eLsZu3ghqTAt6LEdKng56fo1\",\r\n                targetElement: document.getElementById(containerID),\r\n                srs: \"EPSG:2248\",\r\n                locale: 'en-us',\r\n                configurationUrl: 'https://atlas.cyclomedia.com/configuration',\r\n                addressSettings: {\r\n                    locale: \"en\",\r\n                    database: \"Nokia\"\r\n                }\r\n            })\r\n            .then(function () {\r\n                var viewerType = window.StreetSmartApi.ViewerType.PANORAMA\r\n\r\n                window\r\n                    .StreetSmartApi\r\n                    .open(x + \",\" + y, {\r\n                        viewerType: viewerType,\r\n                        srs: 'EPSG:2248'\r\n                    })\r\n                    .then(function (result) {\r\n                        if (result) {\r\n\r\n                            for (let i = 0; i < result.length; i++) {\r\n                                if (result[i].getType() === window.StreetSmartApi.ViewerType.PANORAMA) {\r\n\r\n                                    window.panoramaViewer = result[i];\r\n                                }\r\n\r\n                                //\r\n                                // window.panoramaViewer.on(window.StreetSmartApi.Events.panoramaViewer.VIEW_CHA\r\n                                // N GE, changeView);\r\n                                // window.panoramaViewer.on(window.StreetSmartApi.Events.panoramaViewer.VIEW_LOA\r\n                                // D _END, loadViewEnd);\r\n                                /*       for (let o in options) {\r\n                                        console.log('get to here?', options);\r\n                                    window.StreetSmartApi.addOverlay(options[o])\r\n                                }\r\n*/\r\n                                console.log('options[1]', options)\r\n                                window\r\n                                    .StreetSmartApi\r\n                                    .addOverlay(options[1])\r\n\r\n                            }\r\n\r\n                        }\r\n                    }.bind(this))\r\n                    .catch(function (reason) {\r\n                        alert('Failed to create component(s) through API: ' + reason)\r\n                    });\r\n            }, function (err) {\r\n                alert('Api Init Failed!' + err);\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"StreetSmart\">\r\n                <div className=\"ssCancel\" onClick={this.ssCancel}>X</div>\r\n                <div ref=\"ssDiv\" className=\"ssPane\" id={containerID}></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({map: state.map, graphic: state.graphic, config: state.config});\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n    return bindActionCreators({\r\n        ...mapActions,\r\n        ...graphicActions\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StreetSmart);\r\n"]},"metadata":{},"sourceType":"module"}