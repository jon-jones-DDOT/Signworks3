{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nmodule.exports = React.createClass({\n  displayName: 'Input',\n  propTypes: process.env.NODE_ENV === 'production' ? {} : {\n    value: React.PropTypes.string,\n    onChange: React.PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      value: '',\n      onChange: function onChange() {}\n    };\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    var _this = this,\n        dir = _this.props.dir;\n\n    if (dir === null || dir === undefined) {\n      // When setting an attribute to null/undefined,\n      // React instead sets the attribute to an empty string.\n      // This is not desired because of a possible bug in Chrome.\n      // If the page is RTL, and the input's `dir` attribute is set\n      // to an empty string, Chrome assumes LTR, which isn't what we want.\n      React.findDOMNode(_this).removeAttribute('dir');\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    return React.createElement(\"input\", React.__spread({}, _this.props, {\n      onChange: _this.handleChange\n    }));\n  },\n  handleChange: function handleChange(event) {\n    var props = this.props; // There are several React bugs in IE,\n    // where the `input`'s `onChange` event is\n    // fired even when the value didn't change.\n    // https://github.com/facebook/react/issues/2185\n    // https://github.com/facebook/react/issues/3377\n\n    if (event.target.value !== props.value) {\n      props.onChange(event);\n    }\n  },\n  blur: function blur() {\n    React.findDOMNode(this).blur();\n  },\n  isCursorAtEnd: function isCursorAtEnd() {\n    var _this = this,\n        inputDOMNode = React.findDOMNode(_this),\n        valueLength = _this.props.value.length;\n\n    return inputDOMNode.selectionStart === valueLength && inputDOMNode.selectionEnd === valueLength;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}