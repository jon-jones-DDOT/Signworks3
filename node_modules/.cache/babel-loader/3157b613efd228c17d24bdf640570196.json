{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(setSelectSupport),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLayers),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(setSignOrder),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignOrder);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { getSupportByExtent, getRelatedSigns, saveSignOrder } from '../../utils/JSAPI'; // WORKER //\n\nfunction setSelectSupport(action) {\n  var features, support, signs, _support, signsREsp, _signs;\n\n  return _regeneratorRuntime.wrap(function setSelectSupport$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getSupportByExtent, [action.payload.geom, action.payload.layer]);\n\n        case 3:\n          features = _context.sent;\n          console.log('fired');\n\n          if (!(features.features.length === 0)) {\n            _context.next = 12;\n            break;\n          }\n\n          support = {\n            selSupport: null\n          };\n          signs = {\n            signs: []\n          };\n          _context.next = 10;\n          return put({\n            type: mapTypes.SET_SELECTED_SUPPORT,\n            payload: {\n              support: support,\n              signs: signs\n            }\n          });\n\n        case 10:\n          _context.next = 19;\n          break;\n\n        case 12:\n          _support = {\n            selSupport: features.features[0]\n          };\n          _context.next = 15;\n          return call(getRelatedSigns, [_support.selSupport.attributes, 'https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' + 'er/1/query']);\n\n        case 15:\n          signsREsp = _context.sent;\n          _signs = {\n            signs: signsREsp.data.features\n          }; // Put config in store\n\n          _context.next = 19;\n          return put({\n            type: mapTypes.SET_SELECTED_SUPPORT,\n            payload: {\n              support: _support,\n              signs: _signs\n            }\n          });\n\n        case 19:\n          _context.next = 24;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: map/setSelectedSupport, ', _context.t0);\n\n        case 24:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 21]]);\n} // WATCHER //\n\n\nexport function watchLayers() {\n  return _regeneratorRuntime.wrap(function watchLayers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.MAP_CLICKED, setSelectSupport);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n} // WORKER //\n\nfunction setSignOrder(action) {\n  var resp, features, support, signsREsp, signs;\n  return _regeneratorRuntime.wrap(function setSignOrder$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(saveSignOrder, [action.payload.features, action.payload.supportId]);\n\n        case 3:\n          resp = _context3.sent;\n          _context3.next = 6;\n          return call(setSelectSupport, [action.payload.geom, action.payload.layer]);\n\n        case 6:\n          features = _context3.sent;\n          support = {\n            selSupport: features.features[0]\n          };\n          _context3.next = 10;\n          return call(getRelatedSigns, [support, 'https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' + 'er/1/query']);\n\n        case 10:\n          signsREsp = _context3.sent;\n          signs = {\n            signs: signsREsp.data.features\n          }; // Put config in store\n\n          _context3.next = 14;\n          return put({\n            type: mapTypes.SET_SELECTED_SUPPORT,\n            payload: {\n              support: support,\n              signs: signs\n            }\n          });\n\n        case 14:\n          _context3.next = 19;\n          break;\n\n        case 16:\n          _context3.prev = 16;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('SAGA ERROR: map/setSignOrder, ', _context3.t0);\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this, [[0, 16]]);\n} // WATCHER //\n\n\nexport function watchSignOrder() {\n  return _regeneratorRuntime.wrap(function watchSignOrder$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(mapTypes.SIGN_ORDER_CHANGED, setSignOrder);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_map.js"],"names":["setSelectSupport","watchLayers","setSignOrder","watchSignOrder","call","put","takeLatest","types","mapTypes","getSupportByExtent","getRelatedSigns","saveSignOrder","action","payload","geom","layer","features","console","log","length","support","selSupport","signs","type","SET_SELECTED_SUPPORT","attributes","signsREsp","data","MAP_CLICKED","supportId","resp","SIGN_ORDER_CHANGED"],"mappings":"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","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {types as mapTypes} from '../reducers/map';\r\nimport {getSupportByExtent, getRelatedSigns, saveSignOrder} from '../../utils/JSAPI';\r\n\r\n// WORKER //\r\n\r\nfunction * setSelectSupport(action) {\r\n\r\n    try {\r\n\r\n        // call API to fetch config\r\n        const features = yield call(getSupportByExtent, [action.payload.geom, action.payload.layer]);\r\n        console.log('fired')\r\n        if (features.features.length === 0) {\r\n            const support = {\r\n                selSupport: null\r\n            };\r\n            const signs = {\r\n                signs: []\r\n            };\r\n            yield put({\r\n                type: mapTypes.SET_SELECTED_SUPPORT,\r\n                payload: {\r\n                    support,\r\n                    signs\r\n                }\r\n            });\r\n        } else {\r\n            const support = {\r\n                selSupport: features.features[0]\r\n            };\r\n            const signsREsp = yield call(getRelatedSigns, [\r\n                support.selSupport.attributes, 'https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' +\r\n                        'er/1/query'\r\n            ])\r\n            const signs = {\r\n                signs: signsREsp.data.features\r\n            };\r\n\r\n            // Put config in store\r\n            yield put({\r\n                type: mapTypes.SET_SELECTED_SUPPORT,\r\n                payload: {\r\n                    support,\r\n                    signs\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: map/setSelectedSupport, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchLayers() {\r\n    yield takeLatest(mapTypes.MAP_CLICKED, setSelectSupport);\r\n}\r\n\r\n// WORKER //\r\n\r\nfunction * setSignOrder(action) {\r\n\r\n    try {\r\n\r\n        // call API to fetch config\r\n\r\n        const resp = yield call(saveSignOrder, [action.payload.features, action.payload.supportId]);\r\n        const features = yield call(setSelectSupport, [action.payload.geom, action.payload.layer]);\r\n        const support = {\r\n            selSupport: features.features[0]\r\n        };\r\n        const signsREsp = yield call(getRelatedSigns, [\r\n            support, 'https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' +\r\n                    'er/1/query'\r\n        ])\r\n        const signs = {\r\n            signs: signsREsp.data.features\r\n        };\r\n\r\n        // Put config in store\r\n        yield put({\r\n            type: mapTypes.SET_SELECTED_SUPPORT,\r\n            payload: {\r\n                support,\r\n                signs\r\n            }\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: map/setSignOrder, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchSignOrder() {\r\n\r\n    yield takeLatest(mapTypes.SIGN_ORDER_CHANGED, setSignOrder);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}