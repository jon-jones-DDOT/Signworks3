{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { leftKeys } from '../../SignworksJSON';\nexport var types = {\n  SET_SUPPORT_MARKER_RG: \"SET_SUPPORT_MARKER_RG\",\n  QUERY_SUPERQUERY_S: \"QUERY_SUPERQUERY_S\",\n  SET_QUERY_RESULTS_RG: \"SET_QUERY_RESULTS_RG\",\n  SET_QUERY_RESULTS_EXTENT_RG: \"SET_QUERY_RESULTS_EXTENT_RG\",\n  SET_QUERY_CUSTOM_EXTENT_RG: \"SET_QUERY_CUSTOM_EXTENT_RG\",\n  REMOVE_QUERY_RESULTS_RG: \"REMOVE_QUERY_RESULTS_RG\",\n  REMOVE_QUERY_GRAPHICS_RG: 'REMOVE_QUERY_GRAPHICS_RG',\n  QUERY_MAR_S: \"QUERY_MAR_S\",\n  SET_MAR_RESULTS_RG: \"SET_MAR_RESULTS_RG\",\n  ZOOM_TO_SELECTED_POINT_RG: \"ZOOM_TO_SELECTED_POINT_RG\",\n  SHOW_STREETSMART_VIEWER_RG: 'SHOW_STREETSMART_VIEWER_RG',\n  START_STREETSMART_VIEWER_S: \"START_STREETSMART_VIEWER_S\",\n  CLOSE_STREETSMART_VIEWER_RG: \"CLOSE_STREETSMART_VIEWER_RG\",\n  SHOW_GOOGLE_STREET_VIEWER_RG: \"SHOW_GOOGLE_STREET_VIEWER_RG\",\n  START_GOOGLE_STREET_VIEWER_S: \"START_GOOGLE_STREET_VIEWER_S\",\n  CLOSE_GOOGLE_STREET_VIEWER_RG: \"CLOSE_GOOGLE_STREET_VIEWER_RG\",\n  GET_NEW_CONE_S: \"GET_NEW_CONE\",\n  SET_NEW_CONE_RG: \"SET_NEW_CONE\",\n  SET_POINT_BUFFER_RG: \"SET_POINT_BUFFER_RG\",\n  SET_MAP_CLICK_MODE_RG: \"SET_MAP_CLICK_MODE_RG\",\n  NEED_SUPPORT_REFRESH_RG: \"NEED_SUPPORT_REFRESH_RG\"\n};\nexport var mapModes = {\n  SELECT_SUPPORT_MODE: 'SELECT_SUPPORT_MODE',\n  ADD_SUPPORT_MODE: 'ADD_SUPPORT_MODE',\n  DRAW_MODE: \"DRAW_MODE\" // REDUCERS //\n\n};\nexport var initialState = {\n  selSupportGeom: null,\n  queryFeatures: [],\n  queryCount: -1,\n  queryCustExt: null,\n  queryResultsExt: null,\n  marResults: null,\n  showQuery: false,\n  leftVisible: false,\n  editMode: null,\n  ssInputGeom: null,\n  ssgeoJSONselPoint: null,\n  viewWidth: null,\n  viewExtentWidth: null,\n  view_spatRef: null,\n  cursor: 'default',\n  mapClickMode: mapModes.SELECT_SUPPORT_MODE,\n  needSupRefresh: false,\n  coneGraphic: null,\n  conePointGraphic: null,\n  leftMode: null,\n  leftKey: 0,\n  initialBearing: null,\n  zoomPoint: null,\n  retired: 0\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_SUPPORT_MARKER_RG:\n      action.payload.selSupportGeom.type = \"point\";\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_QUERY_RESULTS_RG:\n      return _objectSpread({}, state, action.payload, {\n        showQuery: true\n      });\n\n    case types.REMOVE_QUERY_RESULTS_RG:\n      return _objectSpread({}, state, {\n        queryFeatures: [],\n        marResults: null\n      });\n\n    case types.REMOVE_QUERY_GRAPHICS_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_POINT_BUFFER_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SHOW_STREETSMART_VIEWER_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SHOW_GOOGLE_STREET_VIEWER_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.CLOSE_STREETSMART_VIEWER_RG:\n      return _objectSpread({}, state, action.payload, {\n        leftVisible: false,\n        editMode: false,\n        leftMode: null,\n        mapClickMode: mapModes.SELECT_SUPPORT_MODE,\n        cursor: 'default'\n      });\n\n    case types.SET_MAP_CLICK_MODE_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.NEED_SUPPORT_REFRESH_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_NEW_CONE_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_MAR_RESULTS_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.ZOOM_TO_SELECTED_POINT_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_QUERY_CUSTOM_EXTENT_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_QUERY_RESULTS_EXTENT_RG:\n      return _objectSpread({}, state, action.payload);\n\n    default:\n      return state;\n  }\n}); // ACTIONS //\n\nexport var actions = {\n  setSupportMarker: function setSupportMarker(selSupportGeom) {\n    return {\n      type: types.SET_SUPPORT_MARKER_RG,\n      payload: {\n        selSupportGeom: selSupportGeom\n      }\n    };\n  },\n  removeQueryResults: function removeQueryResults() {\n    return {\n      type: types.REMOVE_QUERY_RESULTS_RG,\n      payload: {}\n    };\n  },\n  closeStreetSmartViewer: function closeStreetSmartViewer() {\n    return {\n      type: types.CLOSE_STREETSMART_VIEWER_RG,\n      payload: {\n        ssOverlay: null,\n        ssgeoJSONselPoint: null,\n        leftKey: leftKeys.NO_LEFT_PANE\n      }\n    };\n  },\n  setPointBuffer: function setPointBuffer(viewWidth, viewExtentWidth, view_spatRef) {\n    return {\n      type: types.SET_POINT_BUFFER_RG,\n      payload: {\n        viewWidth: viewWidth,\n        viewExtentWidth: viewExtentWidth,\n        view_spatRef: view_spatRef\n      }\n    };\n  },\n  setQueryCustomExtent: function setQueryCustomExtent(queryCustExt) {\n    return {\n      type: types.SET_QUERY_CUSTOM_EXTENT_RG,\n      payload: {\n        queryCustExt: queryCustExt\n      }\n    };\n  },\n  removeQueryGraphics: function removeQueryGraphics() {\n    return {\n      type: types.REMOVE_QUERY_GRAPHICS_RG,\n      payload: {\n        showQuery: false,\n        queryCount: -1\n      }\n    };\n  },\n  querySuperQuery: function querySuperQuery(where, extent, layer) {\n    return {\n      type: types.QUERY_SUPERQUERY_S,\n      payload: {\n        where: where,\n        extent: extent,\n        layer: layer\n      }\n    };\n  },\n  queryMAR: function queryMAR(where) {\n    return {\n      type: types.QUERY_MAR_S,\n      payload: {\n        where: where\n      }\n    };\n  },\n  setMapClickMode: function setMapClickMode(mode, cursor) {\n    return {\n      type: types.SET_MAP_CLICK_MODE_RG,\n      payload: {\n        mapClickMode: mode,\n        cursor: cursor\n      }\n    };\n  },\n  needSupportRefresh: function needSupportRefresh(needSupRefresh) {\n    return {\n      type: types.NEED_SUPPORT_REFRESH_RG,\n      payload: {\n        needSupRefresh: needSupRefresh\n      }\n    };\n  },\n  getNewCone: function getNewCone(point, pitch, yaw, hFov, layers, source) {\n    return {\n      type: types.GET_NEW_CONE_S,\n      payload: {\n        point: point,\n        pitch: pitch,\n        yaw: yaw,\n        hFov: hFov,\n        layers: layers,\n        source: source\n      }\n    };\n  },\n  startStreetSmartViewer: function startStreetSmartViewer(sel, layers, inSR, outSR, viewWidth, viewExtentWidth, view_spatRef, editMode, leftKey, retired) {\n    return {\n      type: types.START_STREETSMART_VIEWER_S,\n      payload: {\n        sel: sel,\n        layers: layers,\n        inSR: inSR,\n        outSR: outSR,\n        viewWidth: viewWidth,\n        viewExtentWidth: viewExtentWidth,\n        view_spatRef: view_spatRef,\n        editMode: editMode,\n        leftKey: leftKey,\n        retired: retired\n      }\n    };\n  },\n  startGoogleStreetViewer: function startGoogleStreetViewer(sel, layers, leftKey) {\n    return {\n      type: types.START_GOOGLE_STREET_VIEWER_S,\n      payload: {\n        sel: sel,\n        layers: layers,\n        leftKey: leftKey\n      }\n    };\n  },\n  zoomToSelectedPoint: function zoomToSelectedPoint(point) {\n    return {\n      type: types.ZOOM_TO_SELECTED_POINT_RG,\n      payload: {\n        zoomPoint: point\n      }\n    };\n  }\n};","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\reducers\\graphic.js"],"names":["leftKeys","types","SET_SUPPORT_MARKER_RG","QUERY_SUPERQUERY_S","SET_QUERY_RESULTS_RG","SET_QUERY_RESULTS_EXTENT_RG","SET_QUERY_CUSTOM_EXTENT_RG","REMOVE_QUERY_RESULTS_RG","REMOVE_QUERY_GRAPHICS_RG","QUERY_MAR_S","SET_MAR_RESULTS_RG","ZOOM_TO_SELECTED_POINT_RG","SHOW_STREETSMART_VIEWER_RG","START_STREETSMART_VIEWER_S","CLOSE_STREETSMART_VIEWER_RG","SHOW_GOOGLE_STREET_VIEWER_RG","START_GOOGLE_STREET_VIEWER_S","CLOSE_GOOGLE_STREET_VIEWER_RG","GET_NEW_CONE_S","SET_NEW_CONE_RG","SET_POINT_BUFFER_RG","SET_MAP_CLICK_MODE_RG","NEED_SUPPORT_REFRESH_RG","mapModes","SELECT_SUPPORT_MODE","ADD_SUPPORT_MODE","DRAW_MODE","initialState","selSupportGeom","queryFeatures","queryCount","queryCustExt","queryResultsExt","marResults","showQuery","leftVisible","editMode","ssInputGeom","ssgeoJSONselPoint","viewWidth","viewExtentWidth","view_spatRef","cursor","mapClickMode","needSupRefresh","coneGraphic","conePointGraphic","leftMode","leftKey","initialBearing","zoomPoint","retired","state","action","type","payload","actions","setSupportMarker","removeQueryResults","closeStreetSmartViewer","ssOverlay","NO_LEFT_PANE","setPointBuffer","setQueryCustomExtent","removeQueryGraphics","querySuperQuery","where","extent","layer","queryMAR","setMapClickMode","mode","needSupportRefresh","getNewCone","point","pitch","yaw","hFov","layers","source","startStreetSmartViewer","sel","inSR","outSR","startGoogleStreetViewer","zoomToSelectedPoint"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,qBAAvB;AAEA,OAAO,IAAMC,KAAK,GAAG;AACjBC,EAAAA,qBAAqB,EAAE,uBADN;AAEjBC,EAAAA,kBAAkB,EAAE,oBAFH;AAGjBC,EAAAA,oBAAoB,EAAE,sBAHL;AAIjBC,EAAAA,2BAA2B,EAAC,6BAJX;AAKjBC,EAAAA,0BAA0B,EAAE,4BALX;AAMjBC,EAAAA,uBAAuB,EAAE,yBANR;AAOjBC,EAAAA,wBAAwB,EAAE,0BAPT;AAQjBC,EAAAA,WAAW,EAAE,aARI;AASjBC,EAAAA,kBAAkB,EAAE,oBATH;AAUjBC,EAAAA,yBAAyB,EAAE,2BAVV;AAWjBC,EAAAA,0BAA0B,EAAE,4BAXX;AAYjBC,EAAAA,0BAA0B,EAAE,4BAZX;AAajBC,EAAAA,2BAA2B,EAAE,6BAbZ;AAcjBC,EAAAA,4BAA4B,EAAE,8BAdb;AAejBC,EAAAA,4BAA4B,EAAE,8BAfb;AAgBjBC,EAAAA,6BAA6B,EAAE,+BAhBd;AAiBjBC,EAAAA,cAAc,EAAE,cAjBC;AAkBjBC,EAAAA,eAAe,EAAE,cAlBA;AAmBjBC,EAAAA,mBAAmB,EAAE,qBAnBJ;AAoBjBC,EAAAA,qBAAqB,EAAE,uBApBN;AAqBjBC,EAAAA,uBAAuB,EAAE;AArBR,CAAd;AAwBP,OAAO,IAAMC,QAAQ,GAAG;AACpBC,EAAAA,mBAAmB,EAAE,qBADD;AAEpBC,EAAAA,gBAAgB,EAAE,kBAFE;AAGpBC,EAAAA,SAAS,EAAE,WAHS,CAMxB;;AANwB,CAAjB;AAOP,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,cAAc,EAAE,IADQ;AAExBC,EAAAA,aAAa,EAAE,EAFS;AAGxBC,EAAAA,UAAU,EAAE,CAAC,CAHW;AAIxBC,EAAAA,YAAY,EAAE,IAJU;AAKxBC,EAAAA,eAAe,EAAC,IALQ;AAMxBC,EAAAA,UAAU,EAAE,IANY;AAOxBC,EAAAA,SAAS,EAAE,KAPa;AAQxBC,EAAAA,WAAW,EAAE,KARW;AASxBC,EAAAA,QAAQ,EAAE,IATc;AAUxBC,EAAAA,WAAW,EAAE,IAVW;AAWxBC,EAAAA,iBAAiB,EAAE,IAXK;AAYxBC,EAAAA,SAAS,EAAE,IAZa;AAaxBC,EAAAA,eAAe,EAAE,IAbO;AAcxBC,EAAAA,YAAY,EAAE,IAdU;AAexBC,EAAAA,MAAM,EAAE,SAfgB;AAgBxBC,EAAAA,YAAY,EAAEpB,QAAQ,CAACC,mBAhBC;AAiBxBoB,EAAAA,cAAc,EAAE,KAjBQ;AAkBxBC,EAAAA,WAAW,EAAE,IAlBW;AAmBxBC,EAAAA,gBAAgB,EAAE,IAnBM;AAoBxBC,EAAAA,QAAQ,EAAE,IApBc;AAqBxBC,EAAAA,OAAO,EAAE,CArBe;AAsBxBC,EAAAA,cAAc,EAAE,IAtBQ;AAuBxBC,EAAAA,SAAS,EAAE,IAvBa;AAwBxBC,EAAAA,OAAO,EAAE;AAxBe,CAArB;AA2BP,gBAAc,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBzB,YAAyB;AAAA,MAAX0B,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrD,KAAK,CAACC,qBAAX;AACImD,MAAAA,MAAM,CAACE,OAAP,CAAe3B,cAAf,CAA8B0B,IAA9B,GAAqC,OAArC;AACA,+BACOF,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACG,oBAAX;AACI,+BACOgD,KADP,EAEOC,MAAM,CAACE,OAFd;AAGIrB,QAAAA,SAAS,EAAE;AAHf;;AAKJ,SAAKjC,KAAK,CAACM,uBAAX;AACI,+BACO6C,KADP;AAEIvB,QAAAA,aAAa,EAAE,EAFnB;AAGII,QAAAA,UAAU,EAAE;AAHhB;;AAMJ,SAAKhC,KAAK,CAACO,wBAAX;AACI,+BACO4C,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACmB,mBAAX;AACI,+BACOgC,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACW,0BAAX;AACI,+BACOwC,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACc,4BAAX;AACI,+BACOqC,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACa,2BAAX;AACI,+BACOsC,KADP,EAEOC,MAAM,CAACE,OAFd;AAGIpB,QAAAA,WAAW,EAAE,KAHjB;AAIIC,QAAAA,QAAQ,EAAE,KAJd;AAKIW,QAAAA,QAAQ,EAAE,IALd;AAMIJ,QAAAA,YAAY,EAAEpB,QAAQ,CAACC,mBAN3B;AAOIkB,QAAAA,MAAM,EAAE;AAPZ;;AAUJ,SAAKzC,KAAK,CAACoB,qBAAX;AACI,+BACO+B,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACqB,uBAAX;AACI,+BACO8B,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACkB,eAAX;AACI,+BACOiC,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACS,kBAAX;AACI,+BACO0C,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACU,yBAAX;AACI,+BACOyC,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIJ,SAAKtD,KAAK,CAACK,0BAAX;AACI,+BACO8C,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIA,SAAKtD,KAAK,CAACI,2BAAX;AACI,+BACO+C,KADP,EAEOC,MAAM,CAACE,OAFd;;AAIR;AACI,aAAOH,KAAP;AAvFR;AAyFH,CA1FD,E,CA4FA;;AACA,OAAO,IAAMI,OAAO,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,0BAAC7B,cAAD;AAAA,WAAqB;AAAC0B,MAAAA,IAAI,EAAErD,KAAK,CAACC,qBAAb;AAAoCqD,MAAAA,OAAO,EAAE;AAC5E3B,QAAAA,cAAc,EAAdA;AAD4E;AAA7C,KAArB;AAAA,GADC;AAInB8B,EAAAA,kBAAkB,EAAE;AAAA,WAAO;AAACJ,MAAAA,IAAI,EAAErD,KAAK,CAACM,uBAAb;AAAsCgD,MAAAA,OAAO,EAAE;AAA/C,KAAP;AAAA,GAJD;AAMnBI,EAAAA,sBAAsB,EAAE;AAAA,WAAO;AAC3BL,MAAAA,IAAI,EAAErD,KAAK,CAACa,2BADe;AAE3ByC,MAAAA,OAAO,EAAE;AACLK,QAAAA,SAAS,EAAE,IADN;AAELtB,QAAAA,iBAAiB,EAAE,IAFd;AAGLU,QAAAA,OAAO,EAAEhD,QAAQ,CAAC6D;AAHb;AAFkB,KAAP;AAAA,GANL;AAgBnBC,EAAAA,cAAc,EAAE,wBAACvB,SAAD,EAAYC,eAAZ,EAA6BC,YAA7B;AAAA,WAA+C;AAC3Da,MAAAA,IAAI,EAAErD,KAAK,CAACmB,mBAD+C;AAE3DmC,MAAAA,OAAO,EAAE;AACLhB,QAAAA,SAAS,EAATA,SADK;AAELC,QAAAA,eAAe,EAAfA,eAFK;AAGLC,QAAAA,YAAY,EAAZA;AAHK;AAFkD,KAA/C;AAAA,GAhBG;AAwBnBsB,EAAAA,oBAAoB,EAAE,8BAAChC,YAAD;AAAA,WAAmB;AACrCuB,MAAAA,IAAI,EAAErD,KAAK,CAACK,0BADyB;AAErCiD,MAAAA,OAAO,EAAE;AACLxB,QAAAA,YAAY,EAAZA;AADK;AAF4B,KAAnB;AAAA,GAxBH;AA+BnBiC,EAAAA,mBAAmB,EAAE;AAAA,WAAO;AACxBV,MAAAA,IAAI,EAAErD,KAAK,CAACO,wBADY;AAExB+C,MAAAA,OAAO,EAAE;AACLrB,QAAAA,SAAS,EAAE,KADN;AAGLJ,QAAAA,UAAU,EAAE,CAAC;AAHR;AAFe,KAAP;AAAA,GA/BF;AAuCnBmC,EAAAA,eAAe,EAAE,yBAACC,KAAD,EAAQC,MAAR,EAAgBC,KAAhB;AAAA,WAA2B;AAExCd,MAAAA,IAAI,EAAErD,KAAK,CAACE,kBAF4B;AAGxCoD,MAAAA,OAAO,EAAE;AACLW,QAAAA,KAAK,EAALA,KADK;AAELC,QAAAA,MAAM,EAANA,MAFK;AAGLC,QAAAA,KAAK,EAALA;AAHK;AAH+B,KAA3B;AAAA,GAvCE;AAgDnBC,EAAAA,QAAQ,EAAE,kBAACH,KAAD;AAAA,WAAY;AAACZ,MAAAA,IAAI,EAAErD,KAAK,CAACQ,WAAb;AAA0B8C,MAAAA,OAAO,EAAE;AACjDW,QAAAA,KAAK,EAALA;AADiD;AAAnC,KAAZ;AAAA,GAhDS;AAoDnBI,EAAAA,eAAe,EAAE,yBAACC,IAAD,EAAO7B,MAAP;AAAA,WAAmB;AAChCY,MAAAA,IAAI,EAAErD,KAAK,CAACoB,qBADoB;AAEhCkC,MAAAA,OAAO,EAAE;AACLZ,QAAAA,YAAY,EAAE4B,IADT;AAEL7B,QAAAA,MAAM,EAANA;AAFK;AAFuB,KAAnB;AAAA,GApDE;AA2DnB8B,EAAAA,kBAAkB,EAAE,4BAAC5B,cAAD;AAAA,WAAqB;AAACU,MAAAA,IAAI,EAAErD,KAAK,CAACqB,uBAAb;AAAsCiC,MAAAA,OAAO,EAAE;AAChFX,QAAAA,cAAc,EAAdA;AADgF;AAA/C,KAArB;AAAA,GA3DD;AA8DnB6B,EAAAA,UAAU,EAAE,oBAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,MAAlC;AAAA,WAA8C;AACtDzB,MAAAA,IAAI,EAAErD,KAAK,CAACiB,cAD0C;AAEtDqC,MAAAA,OAAO,EAAE;AACLmB,QAAAA,KAAK,EAALA,KADK;AAELC,QAAAA,KAAK,EAALA,KAFK;AAGLC,QAAAA,GAAG,EAAHA,GAHK;AAILC,QAAAA,IAAI,EAAJA,IAJK;AAKLC,QAAAA,MAAM,EAANA,MALK;AAMLC,QAAAA,MAAM,EAANA;AANK;AAF6C,KAA9C;AAAA,GA9DO;AAyEnBC,EAAAA,sBAAsB,EAAE,gCAACC,GAAD,EAAMH,MAAN,EAAcI,IAAd,EAAoBC,KAApB,EAA2B5C,SAA3B,EAAsCC,eAAtC,EAAuDC,YAAvD,EAAqEL,QAArE,EAA+EY,OAA/E,EAAwFG,OAAxF;AAAA,WAAqG;AACzHG,MAAAA,IAAI,EAAErD,KAAK,CAACY,0BAD6G;AAEzH0C,MAAAA,OAAO,EAAE;AACL0B,QAAAA,GAAG,EAAHA,GADK;AAELH,QAAAA,MAAM,EAANA,MAFK;AAGLI,QAAAA,IAAI,EAAJA,IAHK;AAILC,QAAAA,KAAK,EAALA,KAJK;AAKL5C,QAAAA,SAAS,EAATA,SALK;AAMLC,QAAAA,eAAe,EAAfA,eANK;AAOLC,QAAAA,YAAY,EAAZA,YAPK;AAQLL,QAAAA,QAAQ,EAARA,QARK;AASLY,QAAAA,OAAO,EAAPA,OATK;AAULG,QAAAA,OAAO,EAAPA;AAVK;AAFgH,KAArG;AAAA,GAzEL;AAwFnBiC,EAAAA,uBAAuB,EAAE,iCAACH,GAAD,EAAMH,MAAN,EAAc9B,OAAd;AAAA,WAA2B;AAChDM,MAAAA,IAAI,EAAErD,KAAK,CAACe,4BADoC;AAEhDuC,MAAAA,OAAO,EAAE;AACL0B,QAAAA,GAAG,EAAHA,GADK;AAELH,QAAAA,MAAM,EAANA,MAFK;AAGL9B,QAAAA,OAAO,EAAPA;AAHK;AAFuC,KAA3B;AAAA,GAxFN;AAgGnBqC,EAAAA,mBAAmB,EAAE,6BAACX,KAAD;AAAA,WAAY;AAC7BpB,MAAAA,IAAI,EAAErD,KAAK,CAACU,yBADiB;AAE7B4C,MAAAA,OAAO,EAAE;AACLL,QAAAA,SAAS,EAAEwB;AADN;AAFoB,KAAZ;AAAA;AAhGF,CAAhB","sourcesContent":["import {leftKeys} from '../../SignworksJSON'\r\n\r\nexport const types = {\r\n    SET_SUPPORT_MARKER_RG: \"SET_SUPPORT_MARKER_RG\",\r\n    QUERY_SUPERQUERY_S: \"QUERY_SUPERQUERY_S\",\r\n    SET_QUERY_RESULTS_RG: \"SET_QUERY_RESULTS_RG\",\r\n    SET_QUERY_RESULTS_EXTENT_RG:\"SET_QUERY_RESULTS_EXTENT_RG\",\r\n    SET_QUERY_CUSTOM_EXTENT_RG: \"SET_QUERY_CUSTOM_EXTENT_RG\",\r\n    REMOVE_QUERY_RESULTS_RG: \"REMOVE_QUERY_RESULTS_RG\",\r\n    REMOVE_QUERY_GRAPHICS_RG: 'REMOVE_QUERY_GRAPHICS_RG',\r\n    QUERY_MAR_S: \"QUERY_MAR_S\",\r\n    SET_MAR_RESULTS_RG: \"SET_MAR_RESULTS_RG\",\r\n    ZOOM_TO_SELECTED_POINT_RG: \"ZOOM_TO_SELECTED_POINT_RG\",\r\n    SHOW_STREETSMART_VIEWER_RG: 'SHOW_STREETSMART_VIEWER_RG',\r\n    START_STREETSMART_VIEWER_S: \"START_STREETSMART_VIEWER_S\",\r\n    CLOSE_STREETSMART_VIEWER_RG: \"CLOSE_STREETSMART_VIEWER_RG\",\r\n    SHOW_GOOGLE_STREET_VIEWER_RG: \"SHOW_GOOGLE_STREET_VIEWER_RG\",\r\n    START_GOOGLE_STREET_VIEWER_S: \"START_GOOGLE_STREET_VIEWER_S\",\r\n    CLOSE_GOOGLE_STREET_VIEWER_RG: \"CLOSE_GOOGLE_STREET_VIEWER_RG\",\r\n    GET_NEW_CONE_S: \"GET_NEW_CONE\",\r\n    SET_NEW_CONE_RG: \"SET_NEW_CONE\",\r\n    SET_POINT_BUFFER_RG: \"SET_POINT_BUFFER_RG\",\r\n    SET_MAP_CLICK_MODE_RG: \"SET_MAP_CLICK_MODE_RG\",\r\n    NEED_SUPPORT_REFRESH_RG: \"NEED_SUPPORT_REFRESH_RG\"\r\n};\r\n\r\nexport const mapModes = {\r\n    SELECT_SUPPORT_MODE: 'SELECT_SUPPORT_MODE',\r\n    ADD_SUPPORT_MODE: 'ADD_SUPPORT_MODE',\r\n    DRAW_MODE: \"DRAW_MODE\"\r\n}\r\n\r\n// REDUCERS //\r\nexport const initialState = {\r\n    selSupportGeom: null,\r\n    queryFeatures: [],\r\n    queryCount: -1,\r\n    queryCustExt: null,\r\n    queryResultsExt:null,\r\n    marResults: null,\r\n    showQuery: false,\r\n    leftVisible: false,\r\n    editMode: null,\r\n    ssInputGeom: null,\r\n    ssgeoJSONselPoint: null,\r\n    viewWidth: null,\r\n    viewExtentWidth: null,\r\n    view_spatRef: null,\r\n    cursor: 'default',\r\n    mapClickMode: mapModes.SELECT_SUPPORT_MODE,\r\n    needSupRefresh: false,\r\n    coneGraphic: null,\r\n    conePointGraphic: null,\r\n    leftMode: null,\r\n    leftKey: 0,\r\n    initialBearing: null,\r\n    zoomPoint: null,\r\n    retired: 0\r\n}\r\n\r\nexport default(state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_SUPPORT_MARKER_RG:\r\n            action.payload.selSupportGeom.type = \"point\";\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_QUERY_RESULTS_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                showQuery: true\r\n            }\r\n        case types.REMOVE_QUERY_RESULTS_RG:\r\n            return {\r\n                ...state,\r\n                queryFeatures: [],\r\n                marResults: null\r\n\r\n            }\r\n        case types.REMOVE_QUERY_GRAPHICS_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_POINT_BUFFER_RG:\r\n            return ({\r\n                ...state,\r\n                ...action.payload\r\n            })\r\n        case types.SHOW_STREETSMART_VIEWER_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SHOW_GOOGLE_STREET_VIEWER_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.CLOSE_STREETSMART_VIEWER_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                leftVisible: false,\r\n                editMode: false,\r\n                leftMode: null,\r\n                mapClickMode: mapModes.SELECT_SUPPORT_MODE,\r\n                cursor: 'default'\r\n            }\r\n\r\n        case types.SET_MAP_CLICK_MODE_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.NEED_SUPPORT_REFRESH_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_NEW_CONE_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_MAR_RESULTS_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.ZOOM_TO_SELECTED_POINT_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_QUERY_CUSTOM_EXTENT_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n            case types.SET_QUERY_RESULTS_EXTENT_RG:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// ACTIONS //\r\nexport const actions = {\r\n    setSupportMarker: (selSupportGeom) => ({type: types.SET_SUPPORT_MARKER_RG, payload: {\r\n            selSupportGeom\r\n        }}),\r\n    removeQueryResults: () => ({type: types.REMOVE_QUERY_RESULTS_RG, payload: {}}),\r\n\r\n    closeStreetSmartViewer: () => ({\r\n        type: types.CLOSE_STREETSMART_VIEWER_RG,\r\n        payload: {\r\n            ssOverlay: null,\r\n            ssgeoJSONselPoint: null,\r\n            leftKey: leftKeys.NO_LEFT_PANE\r\n\r\n        }\r\n    }),\r\n\r\n    setPointBuffer: (viewWidth, viewExtentWidth, view_spatRef) => ({\r\n        type: types.SET_POINT_BUFFER_RG,\r\n        payload: {\r\n            viewWidth,\r\n            viewExtentWidth,\r\n            view_spatRef\r\n        }\r\n    }),\r\n    setQueryCustomExtent: (queryCustExt) => ({\r\n        type: types.SET_QUERY_CUSTOM_EXTENT_RG,\r\n        payload: {\r\n            queryCustExt\r\n        }\r\n    }),\r\n\r\n    removeQueryGraphics: () => ({\r\n        type: types.REMOVE_QUERY_GRAPHICS_RG,\r\n        payload: {\r\n            showQuery: false,\r\n           \r\n            queryCount: -1\r\n        }\r\n    }),\r\n    querySuperQuery: (where, extent, layer) => ({\r\n\r\n        type: types.QUERY_SUPERQUERY_S,\r\n        payload: {\r\n            where,\r\n            extent,\r\n            layer\r\n        }\r\n    }),\r\n    queryMAR: (where) => ({type: types.QUERY_MAR_S, payload: {\r\n            where\r\n        }}),\r\n\r\n    setMapClickMode: (mode, cursor) => ({\r\n        type: types.SET_MAP_CLICK_MODE_RG,\r\n        payload: {\r\n            mapClickMode: mode,\r\n            cursor\r\n        }\r\n    }),\r\n    needSupportRefresh: (needSupRefresh) => ({type: types.NEED_SUPPORT_REFRESH_RG, payload: {\r\n            needSupRefresh\r\n        }}),\r\n    getNewCone: (point, pitch, yaw, hFov, layers, source) => ({\r\n        type: types.GET_NEW_CONE_S,\r\n        payload: {\r\n            point,\r\n            pitch,\r\n            yaw,\r\n            hFov,\r\n            layers,\r\n            source\r\n        }\r\n    }),\r\n    startStreetSmartViewer: (sel, layers, inSR, outSR, viewWidth, viewExtentWidth, view_spatRef, editMode, leftKey, retired) => ({\r\n        type: types.START_STREETSMART_VIEWER_S,\r\n        payload: {\r\n            sel,\r\n            layers,\r\n            inSR,\r\n            outSR,\r\n            viewWidth,\r\n            viewExtentWidth,\r\n            view_spatRef,\r\n            editMode,\r\n            leftKey,\r\n            retired\r\n        }\r\n    }),\r\n    startGoogleStreetViewer: (sel, layers, leftKey) => ({\r\n        type: types.START_GOOGLE_STREET_VIEWER_S,\r\n        payload: {\r\n            sel,\r\n            layers,\r\n            leftKey\r\n        }\r\n    }),\r\n    zoomToSelectedPoint: (point) => ({\r\n        type: types.ZOOM_TO_SELECTED_POINT_RG,\r\n        payload: {\r\n            zoomPoint: point\r\n        }\r\n    })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}