{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nexport var SupportBaseType = function SupportBaseType() {\n  var _this = this;\n\n  _classCallCheck(this, SupportBaseType);\n\n  this.name = function (index) {\n    try {\n      console.log('codedvalue', _codedValue);\n\n      for (var i = 0; i < _this._codedValue.length; i++) {\n        if (_this._codedValue[i].code == index) {\n          return _this._codedValue[i].name;\n        }\n      }\n\n      return \"nothing\";\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  this._codedValue = [{\n    \"name\": \"T-Base\",\n    \"code\": 1\n  }, {\n    \"name\": \"Wood\",\n    \"code\": 2\n  }, {\n    \"name\": \"Metal\",\n    \"code\": 3\n  }, {\n    \"name\": \"Surface Mount\",\n    \"code\": 4\n  }, {\n    \"name\": \"Other\",\n    \"code\": 5\n  }, {\n    \"name\": \"None\",\n    \"code\": 6\n  }];\n};","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\SignworksJSON.js"],"names":["SupportBaseType","name","index","console","log","_codedValue","i","length","code","err","alert","message"],"mappings":";AAEA,WAAaA,eAAb;AAAA;;AAAA;;AAAA,OACIC,IADJ,GACY,UAACC,KAAD,EAAU;AAEd,QAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA0BC,WAA1B;;AACQ,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAACD,WAAL,CAAiBE,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAE9C,YAAI,KAAI,CAACD,WAAL,CAAiBC,CAAjB,EAAoBE,IAApB,IAA4BN,KAAhC,EAAuC;AACnC,iBAAO,KAAI,CAACG,WAAL,CAAiBC,CAAjB,EAAoBL,IAA3B;AACH;AACJ;;AAED,aAAO,SAAP;AACH,KAVD,CAUE,OAAOQ,GAAP,EAAY;AACVC,MAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACH;AACJ,GAhBL;;AAAA,OAkBEN,WAlBF,GAkBe,CACX;AACC,YAAQ,QADT;AAEC,YAAQ;AAFT,GADW,EAKX;AACC,YAAQ,MADT;AAEC,YAAQ;AAFT,GALW,EASX;AACC,YAAQ,OADT;AAEC,YAAQ;AAFT,GATW,EAaX;AACC,YAAQ,eADT;AAEC,YAAQ;AAFT,GAbW,EAiBX;AACC,YAAQ,OADT;AAEC,YAAQ;AAFT,GAjBW,EAqBX;AACC,YAAQ,MADT;AAEC,YAAQ;AAFT,GArBW,CAlBf;AAAA","sourcesContent":["\r\n\r\nexport class SupportBaseType  {\r\n    name =  (index) =>{\r\n\r\n        try {\r\n    console.log( 'codedvalue',_codedValue)\r\n            for (var i = 0; i < this._codedValue.length; i++) {\r\n    \r\n                if (this._codedValue[i].code == index) {\r\n                    return this._codedValue[i].name;\r\n                }\r\n            }\r\n    \r\n            return \"nothing\";\r\n        } catch (err) {\r\n            alert(err.message);\r\n        }\r\n    }\r\n\r\n  _codedValue= [\r\n    {\r\n     \"name\": \"T-Base\",\r\n     \"code\": 1\r\n    },\r\n    {\r\n     \"name\": \"Wood\",\r\n     \"code\": 2\r\n    },\r\n    {\r\n     \"name\": \"Metal\",\r\n     \"code\": 3\r\n    },\r\n    {\r\n     \"name\": \"Surface Mount\",\r\n     \"code\": 4\r\n    },\r\n    {\r\n     \"name\": \"Other\",\r\n     \"code\": 5\r\n    },\r\n    {\r\n     \"name\": \"None\",\r\n     \"code\": 6\r\n    }\r\n   ]\r\n\r\n} "]},"metadata":{},"sourceType":"module"}