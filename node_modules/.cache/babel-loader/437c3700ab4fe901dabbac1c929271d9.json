{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\SuperQuery.js\";\nimport React, { Component } from 'react';\nimport './SuperQuery.css';\nimport ModalWrapper from './Modals/ModalWrapper';\nimport { layerURLs } from '../../utils/JSAPI';\nimport Downshift from 'downshift';\nimport { SupportType, addOptionsToSelect } from '../../SignworksJSON'; //import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\n\nvar SuperQuery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuperQuery, _Component);\n\n  function SuperQuery(props) {\n    var _this;\n\n    _classCallCheck(this, SuperQuery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SuperQuery).call(this, props));\n    _this.items = [];\n    _this.inputProps = {\n      size: 40,\n      autoFocus: true\n    };\n    _this.menuProps = {\n      style: {\n        listStyle: 'none'\n      }\n    };\n\n    _this.formattedMuttArray = function () {\n      var mutt = [];\n\n      for (var i = 0; i < _this.props.map.muttArray.length; i++) {\n        var leMutt = {};\n        leMutt.name = _this.props.map.muttArray[i].code.toUpperCase() + \":\" + _this.props.map.muttArray[i].name.toUpperCase();\n        leMutt.id = _this.props.map.muttArray[i].id;\n        mutt.push(leMutt);\n      }\n\n      return mutt;\n    };\n\n    _this.mutcdLookUpSelectHandler = function (desc) {\n      var option = desc.name.split(':');\n\n      _this.setState({\n        selectedMutt: option[0],\n        selected: true\n      });\n\n      _this.myRef.current.focus();\n    };\n\n    _this.cancelClickHandler = function () {\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.whereConcatHandler = function () {\n      var complex = false;\n      var where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND \";\n\n      if (_this.state.selectedMutt) {\n        where = \"SIGNCODE='\" + _this.state.selectedMutt + \"'\";\n        complex = true;\n      }\n\n      if (_this.state.selectedSupportId) {\n        where += (complex ? ' AND ' : \"\") + \" SUPPORTID='\" + _this.state.selectedSupportId + \"'\";\n        complex = true;\n      }\n\n      if (_this.state.selectedSignId) {\n        where += (complex ? ' AND ' : \"\") + \" SIGNID='\" + _this.state.selectedSignId + \"'\";\n        complex = true;\n      }\n\n      return where;\n    };\n\n    _this.searchClickHandler = function (evt) {\n      var where = _this.whereConcatHandler();\n\n      _this.props.removeQueryGraphics();\n\n      console.log('where', where);\n      var extent = _this.props.map.extent;\n      var layer = layerURLs(_this.props).superquery;\n\n      _this.props.querySuperQuery(where, extent, layer);\n    };\n\n    _this.tabSelectHandler = function (tab) {\n      if (tab == 1) {\n        _this.setState({\n          tab1select: true,\n          tab2select: false,\n          tab3select: false\n        });\n      } else if (tab == 2) {\n        _this.setState({\n          tab1select: false,\n          tab2select: true,\n          tab3select: false\n        });\n      } else {\n        _this.setState({\n          tab1select: false,\n          tab2select: false,\n          tab3select: true\n        });\n      }\n    };\n\n    _this.supportIdChangeHandler = function (evt) {\n      _this.setState({\n        selectedSupportId: evt.target.value.trim()\n      });\n    };\n\n    _this.signIdChangeHandler = function (evt) {\n      _this.setState({\n        selectedSignId: evt.target.value.trim()\n      });\n    };\n\n    _this.supportTypeChangeHandler = function (evt) {\n      _this.setState({\n        selectedSupportType: Number(evt.target.value)\n      });\n    };\n\n    _this.myRef = React.createRef();\n    _this.state = {\n      selectedMutt: \"\",\n      selectedSupportId: \"\",\n      selectedSignId: \"\",\n      selectedSupportType: 0,\n      selected: false,\n      ready: true,\n      tab1select: true,\n      tab2select: false,\n      tab3select: false //  this.items = this.getOptions();\n\n    };\n    _this.items = _this.formattedMuttArray();\n\n    _this.props.removeQueryGraphics();\n\n    return _this;\n  }\n\n  _createClass(SuperQuery, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"Query\",\n        width: 400,\n        showOk: this.props.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SuperQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SuperQueryCancel\",\n        title: \"Close Window\",\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        className: \"queryTabRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.state.tab1select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"MUTCD\"), React.createElement(\"div\", {\n        className: this.state.tab2select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"ATTRIBUTES\"), React.createElement(\"div\", {\n        className: this.state.tab3select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"EXTENT\")), React.createElement(\"div\", {\n        className: this.state.tab1select ? \"queryTabContentSelected\" : \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Type a partial MUTCD and select from results\"), React.createElement(Downshift, {\n        onChange: function onChange(sel) {\n          return _this2.mutcdLookUpSelectHandler(sel);\n        },\n        itemToString: function itemToString(item) {\n          return item ? item.name : '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            getMenuProps = _ref.getMenuProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex,\n            selectedItem = _ref.selectedItem;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({}, getInputProps(_this2.inputProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        })), React.createElement(\"ul\", Object.assign({}, getMenuProps(_this2.menuProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }), isOpen ? _this2.items.filter(function (item) {\n          return !inputValue || item.name.includes(inputValue.toUpperCase());\n        }).map(function (item, index) {\n          return React.createElement(\"li\", Object.assign({}, getItemProps({\n            key: item.id,\n            index: index,\n            item: item,\n            style: {\n              backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n              fontWeight: selectedItem === item ? 'bold' : 'normal'\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }), item.name);\n        }) : null));\n      })), React.createElement(\"div\", {\n        className: this.state.tab2select ? \"queryTabContentSelected\" : \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"SUPPORT TYPE\"), React.createElement(\"select\", {\n        value: this.state.selectedSupportType,\n        onChange: this.supportTypeChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, addOptionsToSelect(this.supportTypes._codedValuesSupportType))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"MUTCD:\"), React.createElement(\"input\", {\n        type: \"text\",\n        disabled: true,\n        value: this.state.selectedMutt,\n        className: \"selectedMUTCD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"SUPPORT ID\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"selectedSupportId\",\n        value: this.state.selectedObjId,\n        onChange: this.supportIdChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"SIGN ID\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"selectedSignId\",\n        value: this.state.selectedSignId,\n        onChange: this.signIdChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: this.state.tab3select ? \"queryTabContentSelected\" : \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"I'm the third panel\"), React.createElement(\"div\", {\n        className: \"bottomDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, this.props.graphic.queryCount, \"\\xA0 features found\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"The Extent for the query will be the extent of the displayed map\"), React.createElement(\"button\", {\n        ref: this.myRef,\n        onClick: this.searchClickHandler,\n        disabled: this.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"SEARCH\"))));\n    }\n  }]);\n\n  return SuperQuery;\n}(Component);\n\nexport { SuperQuery as default };","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\SuperQuery.js"],"names":["React","Component","ModalWrapper","layerURLs","Downshift","SupportType","addOptionsToSelect","SuperQuery","props","items","inputProps","size","autoFocus","menuProps","style","listStyle","formattedMuttArray","mutt","i","map","muttArray","length","leMutt","name","code","toUpperCase","id","push","mutcdLookUpSelectHandler","desc","option","split","setState","selectedMutt","selected","myRef","current","focus","cancelClickHandler","modalClicked","whereConcatHandler","complex","where","state","selectedSupportId","selectedSignId","searchClickHandler","evt","removeQueryGraphics","console","log","extent","layer","superquery","querySuperQuery","tabSelectHandler","tab","tab1select","tab2select","tab3select","supportIdChangeHandler","target","value","trim","signIdChangeHandler","supportTypeChangeHandler","selectedSupportType","Number","createRef","ready","showOk","sel","item","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","index","key","backgroundColor","fontWeight","supportTypes","_codedValuesSupportType","selectedObjId","graphic","queryCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './SuperQuery.css'\r\nimport ModalWrapper from './Modals/ModalWrapper';\r\nimport {layerURLs} from '../../utils/JSAPI';\r\nimport Downshift from 'downshift';\r\nimport {SupportType, addOptionsToSelect} from '../../SignworksJSON';\r\n\r\n//import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\r\n\r\nexport default class SuperQuery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedMutt: \"\",\r\n            selectedSupportId: \"\",\r\n            selectedSignId : \"\",\r\n            selectedSupportType:0,\r\n            selected: false,\r\n            ready: true,\r\n            tab1select: true,\r\n            tab2select: false,\r\n            tab3select: false\r\n        }\r\n        //  this.items = this.getOptions();\r\n        this.items = this.formattedMuttArray();\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n    }\r\n\r\n    items = [];\r\n\r\n    inputProps = {\r\n        size: 40,\r\n        autoFocus: true\r\n    };\r\n\r\n    menuProps = {\r\n        style: {\r\n            listStyle: 'none'\r\n        }\r\n    };\r\n\r\n    formattedMuttArray = () => {\r\n\r\n        let mutt = [];\r\n        for (let i = 0; i < this.props.map.muttArray.length; i++) {\r\n            let leMutt = {};\r\n            leMutt.name = this\r\n                .props\r\n                .map\r\n                .muttArray[i]\r\n                .code\r\n                .toUpperCase() + \":\" + this\r\n                .props\r\n                .map\r\n                .muttArray[i]\r\n                .name\r\n                .toUpperCase();\r\n            leMutt.id = this.props.map.muttArray[i].id;\r\n            mutt.push(leMutt);\r\n\r\n        }\r\n        return mutt;\r\n    }\r\n\r\n    mutcdLookUpSelectHandler = (desc) => {\r\n\r\n        let option = desc\r\n            .name\r\n            .split(':')\r\n        this.setState({selectedMutt: option[0], selected: true})\r\n        this\r\n            .myRef\r\n            .current\r\n            .focus();\r\n\r\n    }\r\n\r\n    cancelClickHandler = () => {\r\n\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }\r\n\r\n    whereConcatHandler = () => {\r\n        let complex = false;\r\n        let where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND \";\r\n        if (this.state.selectedMutt) {\r\n            where = \"SIGNCODE='\" + this.state.selectedMutt + \"'\";\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSupportId) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SUPPORTID='\" + this.state.selectedSupportId + \"'\";\r\n            complex = true;\r\n        }\r\n        if (this.state.selectedSignId) {\r\n            where += (complex\r\n                ? ' AND '\r\n                : \"\") + \" SIGNID='\" + this.state.selectedSignId + \"'\";\r\n            complex = true;\r\n        }\r\n        return where;\r\n    }\r\n\r\n    searchClickHandler = (evt) => {\r\n        let where = this.whereConcatHandler();\r\n\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n\r\n        console.log('where', where)\r\n        const extent = this.props.map.extent;\r\n        const layer = layerURLs(this.props).superquery;\r\n\r\n        this\r\n            .props\r\n            .querySuperQuery(where, extent, layer)\r\n\r\n    }\r\n\r\n    tabSelectHandler = (tab) => {\r\n        if (tab == 1) {\r\n            this.setState({tab1select: true, tab2select: false, tab3select: false})\r\n\r\n        } else if (tab == 2) {\r\n            this.setState({tab1select: false, tab2select: true, tab3select: false})\r\n        } else {\r\n            this.setState({tab1select: false, tab2select: false, tab3select: true})\r\n        }\r\n\r\n    }\r\n\r\n    supportIdChangeHandler = (evt) => {\r\n        this.setState({selectedSupportId: evt.target.value.trim()})\r\n    }\r\n\r\n    signIdChangeHandler = (evt) =>{\r\n        this.setState({selectedSignId:evt.target.value.trim()});\r\n    }\r\n\r\n    supportTypeChangeHandler = (evt) =>{\r\n this.setState({\r\n            selectedSupportType: Number(evt.target.value)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ModalWrapper\r\n                {...this.props}\r\n                title=\"Query\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.showOk}>\r\n\r\n                <div className=\"SuperQuery\">\r\n                    <div\r\n                        className=\"SuperQueryCancel\"\r\n                        title=\"Close Window\"\r\n                        onClick={this.cancelClickHandler}>X</div>\r\n                    <div className=\"queryTabRow\">\r\n                        <div\r\n                            className={this.state.tab1select\r\n                            ? \"queryTabSelect\"\r\n                            : \"queryTab\"}\r\n                            onClick={() => this.tabSelectHandler(1)}>MUTCD</div>\r\n                        <div\r\n                            className={this.state.tab2select\r\n                            ? \"queryTabSelect\"\r\n                            : \"queryTab\"}\r\n                            onClick={() => this.tabSelectHandler(2)}>ATTRIBUTES</div>\r\n                        <div\r\n                            className={this.state.tab3select\r\n                            ? \"queryTabSelect\"\r\n                            : \"queryTab\"}\r\n                            onClick={() => this.tabSelectHandler(3)}>EXTENT</div>\r\n                    </div>\r\n                    <div\r\n                        className={this.state.tab1select\r\n                        ? \"queryTabContentSelected\"\r\n                        : \"queryTabContent\"}>\r\n\r\n                        <p>Type a partial MUTCD and select from results</p>\r\n                        <Downshift\r\n                            onChange=\r\n                            {(sel) => this.mutcdLookUpSelectHandler(sel)}\r\n                            itemToString={item => (item\r\n                            ? item.name\r\n                            : '')}>\r\n                            {({\r\n                                getInputProps,\r\n                                getItemProps,\r\n                                getMenuProps,\r\n                                isOpen,\r\n                                inputValue,\r\n                                highlightedIndex,\r\n                                selectedItem\r\n                            }) => (\r\n                                <div>\r\n\r\n                                    <input {...getInputProps(this.inputProps)}/>\r\n                                    <ul {...getMenuProps(this.menuProps)}>\r\n\r\n                                        {isOpen\r\n                                            ? this\r\n                                                .items\r\n                                                .filter(item => !inputValue || item.name.includes(inputValue.toUpperCase()))\r\n                                                .map((item, index) => (\r\n                                                    <li\r\n                                                        {...getItemProps({ key: item.id, index, item, style: { backgroundColor: highlightedIndex === index ? 'lightgray' : 'white', fontWeight: selectedItem === item ? 'bold' : 'normal', } })}>\r\n                                                        {item.name}\r\n                                                    </li>\r\n                                                ))\r\n                                            : null}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </Downshift>\r\n\r\n                    </div>\r\n                   \r\n                    <div\r\n                        className={this.state.tab2select\r\n                        ? \"queryTabContentSelected\"\r\n                        : \"queryTabContent\"}>\r\n                             <div>\r\n                        <label>SUPPORT TYPE</label>\r\n                        <select value={this.state.selectedSupportType} onChange={this.supportTypeChangeHandler}>\r\n                    {addOptionsToSelect(this.supportTypes._codedValuesSupportType)}</select>\r\n                        </div>\r\n                        <div>\r\n                            <label>MUTCD:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled\r\n                                value={this.state.selectedMutt}\r\n                                className=\"selectedMUTCD\"></input>\r\n                        </div>\r\n                        <div>\r\n                            <label>SUPPORT ID</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className = \"selectedSupportId\"\r\n                                value={this.state.selectedObjId}\r\n                                onChange={this.supportIdChangeHandler}></input>\r\n                        </div>\r\n                        <div>\r\n                            <label>SIGN ID</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className = \"selectedSignId\"\r\n                                value={this.state.selectedSignId}\r\n                                onChange={this.signIdChangeHandler}></input>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={this.state.tab3select\r\n                        ? \"queryTabContentSelected\"\r\n                        : \"queryTabContent\"}>I'm the third panel</div>\r\n                    <div className=\"bottomDiv\">\r\n                        <div >\r\n                            {this.props.graphic.queryCount}\r\n                            &nbsp; features found</div>\r\n                        <p>\r\n                            The Extent for the query will be the extent of the displayed map</p>\r\n                        < button ref={this.myRef} onClick={this.searchClickHandler} disabled={this.selected}>\r\n                            SEARCH</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}