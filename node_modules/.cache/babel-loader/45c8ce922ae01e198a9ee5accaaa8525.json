{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchConfig),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFetchConfig);\n\n// Copyright 2019 Esri\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//     http://www.apache.org/licenses/LICENSE-2.0\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.​\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { getAppConfig } from '../../services/api';\nimport { types as configTypes } from '../reducers/config'; // WORKER //\n\nfunction fetchConfig(action) {\n  var config;\n  return _regeneratorRuntime.wrap(function fetchConfig$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAppConfig);\n\n        case 3:\n          config = _context.sent;\n          console.log('config ', config); // Put config in store\n\n          _context.next = 7;\n          return put({\n            type: configTypes.SET_CONFIG,\n            payload: config\n          });\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: config/fetchConfig, ', _context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 9]]);\n} // WATCHER //\n\n\nexport function watchFetchConfig() {\n  return _regeneratorRuntime.wrap(function watchFetchConfig$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(configTypes.CONFIG_FETCH, fetchConfig);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_config.js"],"names":["fetchConfig","watchFetchConfig","call","put","takeLatest","getAppConfig","types","configTypes","action","config","console","log","type","SET_CONFIG","payload","CONFIG_FETCH"],"mappings":";;;;yBAgBUA,W;;;yBAiBOC,gB;;AAjCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,KAAK,IAAIC,WAAlB,QAAqC,oBAArC,C,CAEA;;AACA,SAAUP,WAAV,CAAuBQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGuB,iBAAMN,IAAI,CAACG,YAAD,CAAV;;AAHvB;AAGcI,UAAAA,MAHd;AAIQC,UAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAwBF,MAAxB,EAJR,CAKQ;;AALR;AAMQ,iBAAMN,GAAG,CAAC;AACNS,YAAAA,IAAI,EAAEL,WAAW,CAACM,UADZ;AAENC,YAAAA,OAAO,EAAEL;AAFH,WAAD,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYQC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAgBA;;;AACA,OAAO,SAAUV,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMG,UAAU,CAACG,WAAW,CAACQ,YAAb,EAA2Bf,WAA3B,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// Copyright 2019 Esri\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.​\r\n\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { getAppConfig } from '../../services/api';\r\nimport { types as configTypes } from '../reducers/config';\r\n\r\n// WORKER //\r\nfunction* fetchConfig (action) {\r\n    try {\r\n        // call API to fetch config\r\n        const config = yield call(getAppConfig);\r\n        console.log( 'config ', config)\r\n        // Put config in store\r\n        yield put({\r\n            type: configTypes.SET_CONFIG,\r\n            payload: config\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: config/fetchConfig, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function* watchFetchConfig() {\r\n    yield takeLatest(configTypes.CONFIG_FETCH, fetchConfig);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}