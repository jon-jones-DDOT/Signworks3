{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n// Copyright 2019 Esri Licensed under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\n// or agreed to in writing, software distributed under the License is\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied. See the License for the specific language\n// governing permissions and limitations under the License.​ ACTION TYPES //\nexport var types = {\n  MAP_LOADED: \"MAP_LOADED\",\n  SET_FEATURES: \"SET_FEATURES\",\n  MAP_CLICKED: \"MAP_CLICKED\",\n  SET_SELECTED_SUPPORT: \"SET_SELECTED_SUPPORT\",\n  SIGN_ORDER_CHANGED: \"SIGN_ORDER_CHANGED\",\n  SET_SIGN_ORDER: \"SET_SIGN_ORDER\"\n}; // REDUCERS //\n\nexport var initialState = {\n  loaded: false,\n  support: null,\n  signs: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.MAP_LOADED:\n      return _objectSpread({}, state, {\n        loaded: true\n      });\n\n    case types.SET_SELECTED_SUPPORT:\n      return _objectSpread({}, state, action.payload);\n\n    default:\n      return state;\n  }\n}); // ACTIONS //\n\nexport var actions = {\n  mapLoaded: function mapLoaded() {\n    return {\n      type: types.MAP_LOADED,\n      payload: {}\n    };\n  },\n  mapClicked: function mapClicked(geom, layer) {\n    return {\n      type: types.MAP_CLICKED,\n      payload: {\n        geom: geom,\n        layer: layer\n      }\n    };\n  }\n};","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\reducers\\map.js"],"names":["types","MAP_LOADED","SET_FEATURES","MAP_CLICKED","SET_SELECTED_SUPPORT","SIGN_ORDER_CHANGED","SET_SIGN_ORDER","initialState","loaded","support","signs","state","action","type","payload","actions","mapLoaded","mapClicked","geom","layer"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,KAAK,GAAG;AACjBC,EAAAA,UAAU,EAAE,YADK;AAEjBC,EAAAA,YAAY,EAAE,cAFG;AAGjBC,EAAAA,WAAW,EAAE,aAHI;AAIjBC,EAAAA,oBAAoB,EAAE,sBAJL;AAKjBC,EAAAA,kBAAkB,EAAG,oBALJ;AAMjBC,EAAAA,cAAc,EAAC;AANE,CAAd,C,CAUP;;AACA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,KADgB;AAExBC,EAAAA,OAAO,EAAC,IAFgB;AAGxBC,EAAAA,KAAK,EAAC;AAHkB,CAArB;AAMP,gBAAc,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAE5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,KAAK,CAACC,UAAX;AACI,+BACOU,KADP;AAEIH,QAAAA,MAAM,EAAE;AAFZ;;AAKJ,SAAKR,KAAK,CAACI,oBAAX;AAEI,+BACOO,KADP,EAEOC,MAAM,CAACE,OAFd;;AAKJ;AACI,aAAOH,KAAP;AAfR;AAiBH,CAnBD,E,CAqBA;;AACA,OAAO,IAAMI,OAAO,GAAG;AACnBC,EAAAA,SAAS,EAAE;AAAA,WAAO;AAACH,MAAAA,IAAI,EAAEb,KAAK,CAACC,UAAb;AAAyBa,MAAAA,OAAO,EAAE;AAAlC,KAAP;AAAA,GADQ;AAEnBG,EAAAA,UAAU,EAAE,oBAACC,IAAD,EAAOC,KAAP;AAAA,WAAkB;AAC1BN,MAAAA,IAAI,EAAEb,KAAK,CAACG,WADc;AAE1BW,MAAAA,OAAO,EAAE;AACLI,QAAAA,IAAI,EAAEA,IADD;AAELC,QAAAA,KAAK,EAAEA;AAFF;AAFiB,KAAlB;AAAA;AAFO,CAAhB","sourcesContent":["// Copyright 2019 Esri Licensed under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\r\n// or agreed to in writing, software distributed under the License is\r\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied. See the License for the specific language\r\n// governing permissions and limitations under the License.​ ACTION TYPES //\r\nexport const types = {\r\n    MAP_LOADED: \"MAP_LOADED\",\r\n    SET_FEATURES: \"SET_FEATURES\",\r\n    MAP_CLICKED: \"MAP_CLICKED\",\r\n    SET_SELECTED_SUPPORT: \"SET_SELECTED_SUPPORT\",\r\n    SIGN_ORDER_CHANGED : \"SIGN_ORDER_CHANGED\",\r\n    SET_SIGN_ORDER:\"SET_SIGN_ORDER\"\r\n    \r\n};\r\n\r\n// REDUCERS //\r\nexport const initialState = {\r\n    loaded: false,\r\n    support:null,\r\n    signs:null\r\n};\r\n\r\nexport default(state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.MAP_LOADED:\r\n            return {\r\n                ...state,\r\n                loaded: true\r\n            };\r\n\r\n        case types.SET_SELECTED_SUPPORT:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// ACTIONS //\r\nexport const actions = {\r\n    mapLoaded: () => ({type: types.MAP_LOADED, payload: {}}),\r\n    mapClicked: (geom, layer) => ({\r\n        type: types.MAP_CLICKED,\r\n        payload: {\r\n            geom: geom,\r\n            layer: layer\r\n        }\r\n\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}