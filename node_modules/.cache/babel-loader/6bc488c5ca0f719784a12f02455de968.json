{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\SuperQuery.js\";\nimport React, { Component } from 'react';\nimport './SuperQuery.css';\nimport ModalWrapper from './Modals/ModalWrapper';\nimport { layerURLs } from '../../utils/JSAPI';\nimport Downshift from 'downshift'; //import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\n\nvar SuperQuery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuperQuery, _Component);\n\n  function SuperQuery(props) {\n    var _this;\n\n    _classCallCheck(this, SuperQuery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SuperQuery).call(this, props));\n    _this.items = [];\n    _this.inputProps = {\n      size: 40,\n      autoFocus: true\n    };\n    _this.menuProps = {\n      style: {\n        listStyle: 'none'\n      }\n    };\n\n    _this.formattedMuttArray = function () {\n      var mutt = [];\n\n      for (var i = 0; i < _this.props.map.muttArray.length; i++) {\n        var leMutt = {};\n        leMutt.name = _this.props.map.muttArray[i].code.toUpperCase() + \":\" + _this.props.map.muttArray[i].name.toUpperCase();\n        leMutt.id = _this.props.map.muttArray[i].id;\n        mutt.push(leMutt);\n      }\n\n      return mutt;\n    };\n\n    _this.mutcdLookUpSelectHandler = function (desc) {\n      var option = desc.name.split(':');\n\n      _this.setState({\n        selectedMutt: option[0],\n        selected: true\n      });\n\n      _this.myRef.current.focus();\n    };\n\n    _this.cancelClickHandler = function () {\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.searchClickHandler = function (evt) {\n      _this.props.removeQueryGraphics();\n\n      var where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND SIGNCODE='\" + _this.state.selectedMutt + \"'\";\n      var extent = _this.props.map.extent;\n      var layer = layerURLs(_this.props).superquery;\n      console.log('layer', layer);\n\n      _this.props.querySuperQuery(where, extent, layer);\n    };\n\n    _this.tabSelectHandler = function (tab) {\n      if (tab == 1) {\n        _this.state.tab1select = true;\n        _this.state.tab2select = false;\n        _this.state.tab3select = false;\n      } else if (tab == 2) {\n        console.log(2);\n        _this.state.tab1select = false;\n        _this.state.tab2select = true;\n        _this.state.tab3select = false;\n      } else {\n        console.log(3);\n        _this.state.tab1select = false;\n        _this.state.tab2select = false;\n        _this.state.tab3select = true;\n      }\n\n      console.log('this.state', _this.state);\n    };\n\n    _this.myRef = React.createRef();\n    _this.state = {\n      selectedMutt: null,\n      selected: false,\n      ready: true,\n      tab1select: true,\n      tab2select: false,\n      tab3select: false //  this.items = this.getOptions();\n\n    };\n    _this.items = _this.formattedMuttArray();\n\n    _this.props.removeQueryGraphics();\n\n    return _this;\n  }\n\n  _createClass(SuperQuery, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"Query\",\n        width: 400,\n        showOk: this.props.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SuperQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SuperQueryCancel\",\n        title: \"Close Window\",\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        className: \"queryTabRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: this.state.tab1select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"MUTCD\"), React.createElement(\"div\", {\n        className: this.state.tab2select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"ATTRIBUTES\"), React.createElement(\"div\", {\n        className: this.state.tab3select ? \"queryTabSelect\" : \"queryTab\",\n        onClick: function onClick() {\n          return _this2.tabSelectHandler(3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"EXTENT\")), React.createElement(\"div\", {\n        className: \"queryTabContentSelected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Type a partial MUTCD and select from results\"), React.createElement(Downshift, {\n        onChange: function onChange(sel) {\n          return _this2.mutcdLookUpSelectHandler(sel);\n        },\n        itemToString: function itemToString(item) {\n          return item ? item.name : '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            getMenuProps = _ref.getMenuProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex,\n            selectedItem = _ref.selectedItem;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({}, getInputProps(_this2.inputProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })), React.createElement(\"ul\", Object.assign({}, getMenuProps(_this2.menuProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }), isOpen ? _this2.items.filter(function (item) {\n          return !inputValue || item.name.includes(inputValue.toUpperCase());\n        }).map(function (item, index) {\n          return React.createElement(\"li\", Object.assign({}, getItemProps({\n            key: item.id,\n            index: index,\n            item: item,\n            style: {\n              backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n              fontWeight: selectedItem === item ? 'bold' : 'normal'\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }), item.name);\n        }) : null));\n      })), React.createElement(\"div\", {\n        className: \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bottomDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, this.props.graphic.queryCount, \"\\xA0 features found\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"The Extent for the query will be the extent of the displayed map\"), React.createElement(\"button\", {\n        ref: this.myRef,\n        onClick: this.searchClickHandler,\n        disabled: this.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"SEARCH\"))));\n    }\n  }]);\n\n  return SuperQuery;\n}(Component);\n\nexport { SuperQuery as default };","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\SuperQuery.js"],"names":["React","Component","ModalWrapper","layerURLs","Downshift","SuperQuery","props","items","inputProps","size","autoFocus","menuProps","style","listStyle","formattedMuttArray","mutt","i","map","muttArray","length","leMutt","name","code","toUpperCase","id","push","mutcdLookUpSelectHandler","desc","option","split","setState","selectedMutt","selected","myRef","current","focus","cancelClickHandler","modalClicked","searchClickHandler","evt","removeQueryGraphics","where","state","extent","layer","superquery","console","log","querySuperQuery","tabSelectHandler","tab","tab1select","tab2select","tab3select","createRef","ready","showOk","sel","item","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","index","key","backgroundColor","fontWeight","graphic","queryCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './SuperQuery.css'\r\nimport ModalWrapper from './Modals/ModalWrapper';\r\nimport {layerURLs} from '../../utils/JSAPI'\r\nimport Downshift from 'downshift'\r\n\r\n//import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\r\n\r\nexport default class SuperQuery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedMutt: null,\r\n            selected: false,\r\n            ready: true,\r\n            tab1select:true,\r\n            tab2select:false,\r\n            tab3select:false\r\n        }\r\n        //  this.items = this.getOptions();\r\n        this.items = this.formattedMuttArray();\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n    }\r\n\r\n    items = [];\r\n\r\n    inputProps = {\r\n        size: 40,\r\n        autoFocus: true\r\n    };\r\n\r\n    menuProps = {\r\n        style: {\r\n            listStyle: 'none'\r\n        }\r\n    };\r\n\r\n    formattedMuttArray = () => {\r\n\r\n        let mutt = [];\r\n        for (let i = 0; i < this.props.map.muttArray.length; i++) {\r\n            let leMutt = {};\r\n            leMutt.name = this\r\n                .props\r\n                .map\r\n                .muttArray[i]\r\n                .code\r\n                .toUpperCase() + \":\" + this\r\n                .props\r\n                .map\r\n                .muttArray[i]\r\n                .name\r\n                .toUpperCase();\r\n            leMutt.id = this.props.map.muttArray[i].id;\r\n            mutt.push(leMutt);\r\n\r\n        }\r\n        return mutt;\r\n    }\r\n\r\n    mutcdLookUpSelectHandler = (desc) => {\r\n\r\n        let option = desc\r\n            .name\r\n            .split(':')\r\n        this.setState({selectedMutt: option[0], selected: true})\r\n        this\r\n            .myRef\r\n            .current\r\n            .focus();\r\n\r\n    }\r\n\r\n    cancelClickHandler = () => {\r\n\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }  \r\n\r\n    searchClickHandler = (evt) => {\r\n\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n        const where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND SIGNCODE='\" + this.state.selectedMutt + \"'\";\r\n        const extent = this.props.map.extent;\r\n        const layer = layerURLs(this.props).superquery;\r\n        console.log('layer', layer)\r\n        this\r\n            .props\r\n            .querySuperQuery(where, extent, layer)\r\n\r\n    }\r\n\r\n    tabSelectHandler = (tab) => {\r\n        if(tab ==1){\r\n            this.state.tab1select = true;\r\n            this.state.tab2select = false;\r\n            this.state.tab3select = false;\r\n        }\r\n        else if(tab ==2){\r\n            console.log(2)\r\n            this.state.tab1select = false;\r\n            this.state.tab2select = true;\r\n            this.state.tab3select = false;\r\n        }\r\n        else{\r\n            console.log(3)\r\n            this.state.tab1select = false;\r\n            this.state.tab2select = false;\r\n            this.state.tab3select = true;\r\n        }\r\n        console.log('this.state', this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ModalWrapper\r\n                {...this.props}\r\n                title=\"Query\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.showOk}>\r\n\r\n                <div className=\"SuperQuery\">\r\n                    <div\r\n                        className=\"SuperQueryCancel\"\r\n                        title=\"Close Window\"\r\n                        onClick={this.cancelClickHandler}>X</div>\r\n                    <div className=\"queryTabRow\">\r\n                        <div className= {this.state.tab1select?\"queryTabSelect\":\"queryTab\"} onClick={() =>this.tabSelectHandler(1)}>MUTCD</div>\r\n                        <div className={this.state.tab2select?\"queryTabSelect\":\"queryTab\"}  onClick={() =>this.tabSelectHandler(2)}>ATTRIBUTES</div>\r\n                        <div className={this.state.tab3select?\"queryTabSelect\":\"queryTab\"}  onClick={() =>this.tabSelectHandler(3)}>EXTENT</div>\r\n                    </div>\r\n                    <div className=\"queryTabContentSelected\">\r\n\r\n                        <p>Type a partial MUTCD and select from results</p>\r\n                        <Downshift\r\n                            onChange=\r\n                            {(sel) => this.mutcdLookUpSelectHandler(sel)}\r\n                            itemToString={item => (item\r\n                            ? item.name\r\n                            : '')}>\r\n                            {({\r\n                                getInputProps,\r\n                                getItemProps,\r\n                                getMenuProps,\r\n                                isOpen,\r\n                                inputValue,\r\n                                highlightedIndex,\r\n                                selectedItem\r\n                            }) => (\r\n                                <div>\r\n\r\n                                    <input {...getInputProps(this.inputProps)}/>\r\n                                    <ul {...getMenuProps(this.menuProps)}>\r\n\r\n                                        {isOpen\r\n                                            ? this\r\n                                                .items\r\n                                                .filter(item => !inputValue || item.name.includes(inputValue.toUpperCase()))\r\n                                                .map((item, index) => (\r\n                                                    <li\r\n                                                        {...getItemProps({ key: item.id, index, item, style: { backgroundColor: highlightedIndex === index ? 'lightgray' : 'white', fontWeight: selectedItem === item ? 'bold' : 'normal', } })}>\r\n                                                        {item.name}\r\n                                                    </li>\r\n                                                ))\r\n                                            : null}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </Downshift>\r\n\r\n                    </div>\r\n                    <div className=\"queryTabContent\"></div>\r\n                    <div className=\"queryTabContent\"></div>\r\n                    <div className=\"bottomDiv\">\r\n                        <div >\r\n                            {this.props.graphic.queryCount}\r\n                            &nbsp; features found</div>\r\n                        <p>\r\n                            The Extent for the query will be the extent of the displayed map</p>\r\n                        < button ref={this.myRef} onClick={this.searchClickHandler} disabled={this.selected}>\r\n                            SEARCH</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}