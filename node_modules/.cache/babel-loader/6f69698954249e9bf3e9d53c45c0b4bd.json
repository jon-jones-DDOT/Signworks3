{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\SuperQuery.js\";\nimport React, { Component } from 'react';\nimport './SuperQuery.css';\nimport ModalWrapper from './Modals/ModalWrapper';\n\nvar Typeahead = require('react-typeahead').Typeahead; //import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\n\n\nvar SuperQuery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuperQuery, _Component);\n\n  function SuperQuery(props) {\n    var _this;\n\n    _classCallCheck(this, SuperQuery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SuperQuery).call(this, props));\n\n    _this.getOptions = function () {\n      var bob = [];\n\n      for (var i = 0; i < _this.props.map.muttArray.length; i++) {\n        bob.push(_this.props.map.muttArray[i].code + \": \" + _this.props.map.muttArray[i].name);\n      }\n\n      return bob;\n    };\n\n    _this.mutcdLookUpSelectHandler = function (desc) {\n      var option = desc.split(':');\n\n      _this.setState({\n        selectedMutt: option[0],\n        selected: true\n      });\n\n      _this.myRef.current.focus();\n    };\n\n    _this.cancelClickHandler = function () {\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.searchClickHandler = function (evt) {\n      // when this finally breaks , remember to check and see if they updated the\n      // table to 'SIGNCODE'\n      _this.props.removeQueryGraphics();\n\n      var where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND MUTCD='\" + _this.state.selectedMutt + \"'\";\n      var extent = _this.props.map.extent;\n      var layer = _this.props.config.featureURLs.superquery;\n\n      _this.props.querySuperQuery(where, extent, layer); // const features =\n      // queryLayers(where,extent,this.props.config.featureURLs.Superquery).next();\n\n    };\n\n    _this.myRef = React.createRef();\n    _this.state = {\n      selectedMutt: null,\n      selected: false,\n      ready: true,\n      results: _this.props.graphic.queryFeatures.length\n    };\n    return _this;\n  }\n\n  _createClass(SuperQuery, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.graphic.queryFeatures.length !== prevProps.graphic.queryFeatures.length) {\n        console.log('did update');\n        this.setState({\n          results: this.props.graphic.queryFeatures.length\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('this.props.graphic', this.props);\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"Query\",\n        width: 400,\n        showOk: this.props.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SuperQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SuperQueryCancel\",\n        title: \"Close Window\",\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Type a partial MUTCD and select from results\"), React.createElement(Typeahead, {\n        options: this.getOptions(),\n        maxVisible: 10,\n        onOptionSelected: this.mutcdLookUpSelectHandler,\n        placeholder: \"TYPE DESCRIPTION\",\n        inputProps: {\n          'size': 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.results, \"features found\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"The Extent for the query will be the current extent of the displayed map\"), React.createElement(\"button\", {\n        ref: this.myRef,\n        onClick: this.searchClickHandler,\n        disabled: this.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"SEARCH\")));\n    }\n  }]);\n\n  return SuperQuery;\n}(Component);\n\nexport { SuperQuery as default };","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\SuperQuery.js"],"names":["React","Component","ModalWrapper","Typeahead","require","SuperQuery","props","getOptions","bob","i","map","muttArray","length","push","code","name","mutcdLookUpSelectHandler","desc","option","split","setState","selectedMutt","selected","myRef","current","focus","cancelClickHandler","modalClicked","searchClickHandler","evt","removeQueryGraphics","where","state","extent","layer","config","featureURLs","superquery","querySuperQuery","createRef","ready","results","graphic","queryFeatures","prevProps","prevState","snapshot","console","log","showOk"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './SuperQuery.css'\r\nimport ModalWrapper from './Modals/ModalWrapper';\r\n\r\nlet Typeahead = require('react-typeahead').Typeahead;\r\n\r\n//import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\r\n\r\nexport default class SuperQuery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedMutt: null,\r\n            selected: false,\r\n            ready: true,\r\n            results: this.props.graphic.queryFeatures.length\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if( this.props.graphic.queryFeatures.length !== prevProps.graphic.queryFeatures.length){\r\n            console.log('did update');\r\n            this.setState({ results :this.props.graphic.queryFeatures.length})\r\n        }\r\n       \r\n    }\r\n\r\n    getOptions = () => {\r\n        let bob = [];\r\n        for (let i = 0; i < this.props.map.muttArray.length; i++) {\r\n            bob.push(this.props.map.muttArray[i].code + \": \" + this.props.map.muttArray[i].name)\r\n        }\r\n\r\n        return bob;\r\n\r\n    }\r\n\r\n    mutcdLookUpSelectHandler = (desc) => {\r\n\r\n        let option = desc.split(':')\r\n        this.setState({selectedMutt: option[0], selected: true})\r\n        this\r\n            .myRef\r\n            .current\r\n            .focus();\r\n\r\n    }\r\n\r\n    cancelClickHandler = () => {\r\n\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }\r\n\r\n    searchClickHandler = (evt) => {\r\n        // when this finally breaks , remember to check and see if they updated the\r\n        // table to 'SIGNCODE'\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n        const where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND MUTCD='\" + this.state.selectedMutt + \"'\";\r\n        const extent = this.props.map.extent;\r\n        const layer = this.props.config.featureURLs.superquery;\r\n\r\n        this\r\n            .props\r\n            .querySuperQuery(where, extent, layer)\r\n\r\n        // const features =\r\n        // queryLayers(where,extent,this.props.config.featureURLs.Superquery).next();\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log('this.props.graphic', this.props);\r\n        return (\r\n\r\n            <ModalWrapper\r\n                {...this.props}\r\n                title=\"Query\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.showOk}>\r\n\r\n                <div className=\"SuperQuery\">\r\n                    <div\r\n                        className=\"SuperQueryCancel\"\r\n                        title=\"Close Window\"\r\n                        onClick={this.cancelClickHandler}>X</div>\r\n                    <div>\r\n\r\n                        <p>Type a partial MUTCD and select from results</p>\r\n\r\n                        <Typeahead\r\n                            options={this.getOptions()}\r\n                            maxVisible={10}\r\n                            onOptionSelected={this.mutcdLookUpSelectHandler}\r\n                            placeholder=\"TYPE DESCRIPTION\"\r\n                            inputProps={{\r\n                            'size': 50\r\n                        }}/>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.results}\r\n                        features found</div>\r\n                    <p>\r\n                        The Extent for the query will be the current extent of the displayed map</p>\r\n                    < button ref={this.myRef} onClick={this.searchClickHandler} disabled={this.selected}>\r\n                        SEARCH</button>\r\n\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}