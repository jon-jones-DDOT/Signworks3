{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\esri\\\\map\\\\MapView.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// Copyright 2019 Esri Licensed under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\n// or agreed to in writing, software distributed under the License is\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied. See the License for the specific language\n// governing permissions and limitations under the License.â€‹ NOTE This is a\n// \"special\" react component that does not strictly play by React's rules.\n//\n// Conceptually, this component creates a \"portal\" in React by closing its\n// render method off from updates (by simply rendering a div and never accepting\n// re-renders) then reconnecting itself to the React lifecycle by listening for\n// any new props (using componentWillReceiveProps) React\nimport React, { Component } from 'react'; // Redux\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actions as mapActions } from '../../../redux/reducers/map';\nimport { actions as graphicActions } from '../../../redux/reducers/graphic';\nimport { mapModes } from '../../../redux/reducers/graphic'; // ESRI\n\nimport { loadModules } from 'esri-loader';\nimport { createView } from '../../../utils/esriHelper'; // Styled Components\n\nimport styled from 'styled-components';\nimport { pointToExtent } from '../../../utils/JSAPI';\nvar Container = styled.div(_templateObject()); // Variables\n\nvar containerID = \"map-view-container\";\n\nvar MapView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapView, _Component);\n\n  function MapView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.selPoint = null;\n    _this.markerLayer = null;\n    _this.queryMarkerLayer = null;\n    _this.symb = null;\n    _this.geom = null;\n\n    _this.startup = function (mapConfig, node) {\n      var isScene = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      createView(mapConfig, node, isScene).then(function (response) {\n        _this.init(response);\n\n        _this.setupWidgetsAndLayers();\n\n        _this.finishedLoading();\n      }, function (error) {\n        console.error(\"maperr\", error);\n        window.setTimeout(function () {\n          _this.startup(mapConfig, node);\n        }, 1000);\n      });\n    };\n\n    _this.finishedLoading = function () {\n      // Update app state only after map and widgets are loaded\n      _this.props.onMapLoaded(_this.view.extent);\n    };\n\n    _this.getSelectedSupport = function (expandedMapPoint) {\n      //this line takes the buffered point and sends it  to the map reducer which punts it to the _setSupport saga\n      // which queries and gets the support, signs, timebands, etc and writes them to the store, where they dictate the \n      //Rightbar display.  Once the store changes the action picks up in willReceiveProps\n      _this.props.onMapClicked(expandedMapPoint, _this.props.config.featureURLs);\n    };\n\n    _this.mapClickHandler = function (evt) {\n      alert('bnbo'); // in any map app that's more than a viewer, the map click event is gonna be complicated\n      // so much so that I wrote this a month ago and it is already getting away from me\n      //so we shall comment.  The click event is first captured here\n      // then evaluated against the store to decide what it is supposed to do\n\n      switch (_this.props.graphic.mapClickMode) {\n        //the click is supposed to select an existing support on the map\n        case mapModes.SELECT_SUPPORT:\n          //this line seems to control some code in willReceiveProps, but I think that code might be in the wrong place\n          // It is.  Must fix. (todo)\n          _this.setState({\n            mapClicked: true\n          }); //this redux call moves info about the view into the store so that an extent around the point can be calculated\n          // I don't think it changes, (todo) see about moving it to map load or something\n\n\n          _this.props.setPointBuffer(_this.view.width, _this.view.extent.width, _this.view.spatialReference); //this creates a small extent buffer around the mapPoint to aid in the select query\n          //its callback is getSelectedSupport, above    \n\n\n          pointToExtent(_this.view.width, _this.view.extent.width, _this.view.spatialReference, evt.mapPoint, 12, _this.getSelectedSupport);\n          break;\n\n        default:\n          return;\n      }\n    };\n\n    _this.mapMoveHandler = function (evt) {\n      _this.props.onMapChanged(_this.view.extent);\n    };\n\n    _this.init = function (response) {\n      _this.view = response.view;\n      _this.map = response.view.map;\n    };\n\n    _this.setupWidgetsAndLayers = function () {\n      loadModules(['esri/layers/FeatureLayer', \"esri/layers/GraphicsLayer\", 'esri/Graphic', \"esri/layers/TileLayer\", \"esri/Basemap\"]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 5),\n            FeatureLayer = _ref2[0],\n            GraphicsLayer = _ref2[1],\n            Graphic = _ref2[2],\n            TileLayer = _ref2[3],\n            Basemap = _ref2[4];\n\n        var layerUrl = \"https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/DC_Basemap_LightGray_W\" + \"ebMercator/MapServer\";\n        var baselayer = new TileLayer(layerUrl, null);\n        var baseMap = new Basemap({\n          baseLayers: [baselayer]\n        });\n        var featureLayer = new FeatureLayer({\n          url: _this.props.config.featureURLs.supports,\n          definitionExpression: \"SUPPORTSTATUS = 1\",\n          outFields: [\"*\"],\n          id: \"support\"\n        });\n        _this.queryMarkerLayer = new GraphicsLayer();\n        _this.markerLayer = new GraphicsLayer();\n        _this.map.basemap = baseMap;\n\n        _this.map.addMany([featureLayer, _this.queryMarkerLayer, _this.markerLayer]);\n\n        _this.view.on(\"click\", _this.mapClickHandler);\n\n        _this.view.on(\"pointer-up\", _this.mapMoveHandler);\n\n        _this.view.on('mouse-wheel', _this.mapMoveHandler);\n\n        _this.symb = {\n          type: \"simple-marker\",\n          // autocasts as new SimpleMarkerSymbol()\n          style: \"circle\",\n          color: [0, 255, 0, 0.0],\n          size: \"30px\",\n          // pixels\n          outline: {\n            // autocasts as new SimpleLineSymbol()\n            color: 'magenta',\n            width: 3 // points\n\n          }\n        };\n        _this.selPoint = new Graphic({\n          geometry: null,\n          symbol: _this.symb\n        }); //   this.markerLayer.add(this.selPoint)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MapView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startup(this.props.mapConfig, containerID, this.props.is3DScene);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // Tell React to never update this component, that's up to us\n      return false;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      //removes superQuery results from view based on store\n      if (nextProps.graphic.showQuery === false) {\n        this.queryMarkerLayer.removeAll();\n      } //if there are query features in the store, this block displays them in the view\n\n\n      if (nextProps.graphic.queryFeatures.length > 0) {\n        var graphics = _toConsumableArray(nextProps.graphic.queryFeatures); // add symbols\n\n\n        var querySymb = {\n          type: \"simple-marker\",\n          // autocasts as new SimpleMarkerSymbol()  NEVER TRUST AUTOCAST\n          style: \"circle\",\n          color: [0, 255, 0, 0.0],\n          size: \"30px\",\n          // pixels\n          outline: {\n            // autocasts as new SimpleLineSymbol()\n            color: 'blue',\n            width: 3 // points\n\n          }\n        }; //this just sets query results in the store to empty array\n\n        this.props.removeQueryResults(); // create graphics and add them to layer\n\n        loadModules([\"esri/Graphic\"]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 1),\n              Graphic = _ref4[0];\n\n          var gr = null;\n\n          for (var i = 0; i < graphics.length; i++) {\n            graphics[i].geometry.type = \"point\";\n            gr = new Graphic({\n              geometry: graphics[i].geometry,\n              symbol: querySymb\n            });\n\n            _this2.queryMarkerLayer.add(gr);\n          }\n        });\n      } //updates marker\n      // use nextProps or this.props for the map clicks?  if bugs come up , check this part\n\n\n      if (nextProps.graphic.mapClickMode === mapModes.SELECT_SUPPORT) {\n        this.selPoint.geometry = nextProps.graphic.selSupportGeom;\n        this.selPoint.symbol = this.symb;\n        this.markerLayer.removeAll();\n        this.markerLayer.add(this.selPoint);\n        this.view.zoom = 20;\n        this.view.center = this.selPoint.geometry;\n      } else if (this.propsd.graphic.mapClickMode === mapModes.ADD_SUPPORT) {\n        alert('OH YEAH BABYYYYYYYYY');\n      }\n\n      this.view.surface.style.cursor = nextProps.graphic.cursor;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        ref: \"mapDiv\",\n        id: containerID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    } // ESRI JSAPI\n\n  }]);\n\n  return MapView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    config: state.config,\n    map: state.map,\n    graphic: state.graphic\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, mapActions, graphicActions), dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapView);","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\esri\\map\\MapView.js"],"names":["React","Component","connect","bindActionCreators","actions","mapActions","graphicActions","mapModes","loadModules","createView","styled","pointToExtent","Container","div","containerID","MapView","selPoint","markerLayer","queryMarkerLayer","symb","geom","startup","mapConfig","node","isScene","then","response","init","setupWidgetsAndLayers","finishedLoading","error","console","window","setTimeout","props","onMapLoaded","view","extent","getSelectedSupport","expandedMapPoint","onMapClicked","config","featureURLs","mapClickHandler","evt","alert","graphic","mapClickMode","SELECT_SUPPORT","setState","mapClicked","setPointBuffer","width","spatialReference","mapPoint","mapMoveHandler","onMapChanged","map","FeatureLayer","GraphicsLayer","Graphic","TileLayer","Basemap","layerUrl","baselayer","baseMap","baseLayers","featureLayer","url","supports","definitionExpression","outFields","id","basemap","addMany","on","type","style","color","size","outline","geometry","symbol","is3DScene","nextProps","nextState","showQuery","removeAll","queryFeatures","length","graphics","querySymb","removeQueryResults","gr","i","add","selSupportGeom","zoom","center","propsd","ADD_SUPPORT","surface","cursor","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// Copyright 2019 Esri Licensed under the Apache License, Version 2.0 (the\r\n// \"License\"); you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law\r\n// or agreed to in writing, software distributed under the License is\r\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n// KIND, either express or implied. See the License for the specific language\r\n// governing permissions and limitations under the License.â€‹ NOTE This is a\r\n// \"special\" react component that does not strictly play by React's rules.\r\n//\r\n// Conceptually, this component creates a \"portal\" in React by closing its\r\n// render method off from updates (by simply rendering a div and never accepting\r\n// re-renders) then reconnecting itself to the React lifecycle by listening for\r\n// any new props (using componentWillReceiveProps) React\r\nimport React, {Component} from 'react';\r\n\r\n// Redux\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {actions as mapActions} from '../../../redux/reducers/map';\r\nimport {actions as graphicActions} from '../../../redux/reducers/graphic'\r\nimport {mapModes} from '../../../redux/reducers/graphic'\r\n// ESRI\r\nimport {loadModules} from 'esri-loader';\r\nimport {createView} from '../../../utils/esriHelper';\r\n\r\n// Styled Components\r\nimport styled from 'styled-components';\r\n\r\nimport {pointToExtent} from '../../../utils/JSAPI';\r\n\r\nconst Container = styled.div `\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\n// Variables\r\nconst containerID = \"map-view-container\";\r\n\r\nclass MapView extends Component {\r\n    selPoint = null;\r\n    markerLayer = null;\r\n    queryMarkerLayer = null;\r\n    symb = null;\r\n    geom = null;\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n\r\n        this.startup(this.props.mapConfig, containerID, this.props.is3DScene);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // Tell React to never update this component, that's up to us\r\n        return false;\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n//removes superQuery results from view based on store\r\n        if (nextProps.graphic.showQuery === false) {\r\n            this\r\n                .queryMarkerLayer\r\n                .removeAll();\r\n        }\r\n//if there are query features in the store, this block displays them in the view\r\n        if (nextProps.graphic.queryFeatures.length > 0) {\r\n            const graphics = [...nextProps.graphic.queryFeatures]\r\n            // add symbols\r\n            let querySymb = {\r\n                type: \"simple-marker\", // autocasts as new SimpleMarkerSymbol()  NEVER TRUST AUTOCAST\r\n                style: \"circle\",\r\n                color: [\r\n                    0, 255, 0, 0.0\r\n                ],\r\n                size: \"30px\", // pixels\r\n                outline: { // autocasts as new SimpleLineSymbol()\r\n                    color: 'blue',\r\n                    width: 3 // points\r\n                }\r\n            };\r\n\r\n            //this just sets query results in the store to empty array\r\n            this\r\n                .props\r\n                .removeQueryResults();\r\n            // create graphics and add them to layer\r\n            loadModules([\"esri/Graphic\"]).then(([Graphic]) => {\r\n                let gr = null;\r\n                for (let i = 0; i < graphics.length; i++) {\r\n                    graphics[i].geometry.type = \"point\"\r\n                    gr = new Graphic({geometry: graphics[i].geometry, symbol: querySymb})\r\n                    this\r\n                        .queryMarkerLayer\r\n                        .add(gr)\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n       //updates marker\r\n       // use nextProps or this.props for the map clicks?  if bugs come up , check this part\r\n       if (nextProps.graphic.mapClickMode === mapModes.SELECT_SUPPORT){\r\n\r\n         this.selPoint.geometry = nextProps.graphic.selSupportGeom;\r\n            this.selPoint.symbol = this.symb;\r\n            this.markerLayer.removeAll();\r\n            this\r\n                .markerLayer\r\n                .add(this.selPoint)\r\n\r\n            this.view.zoom = 20\r\n            this.view.center = this.selPoint.geometry\r\n       }\r\n       else if(this.propsd.graphic.mapClickMode === mapModes.ADD_SUPPORT){\r\n           alert('OH YEAH BABYYYYYYYYY')\r\n       }\r\n           \r\n       \r\n\r\n        this.view.surface.style.cursor = nextProps.graphic.cursor;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container ref=\"mapDiv\" id={containerID}></Container>\r\n        );\r\n    }\r\n\r\n    // ESRI JSAPI\r\n    startup = (mapConfig, node, isScene = false) => {\r\n        createView(mapConfig, node, isScene).then(response => {\r\n            this.init(response);\r\n\r\n            this.setupWidgetsAndLayers();\r\n            this.finishedLoading();\r\n\r\n        }, error => {\r\n            console.error(\"maperr\", error);\r\n            window.setTimeout(() => {\r\n                this.startup(mapConfig, node);\r\n            }, 1000);\r\n        })\r\n    }\r\n\r\n    finishedLoading = () => {\r\n        // Update app state only after map and widgets are loaded\r\n        this\r\n            .props\r\n            .onMapLoaded(this.view.extent);\r\n    }\r\n\r\n    getSelectedSupport = (expandedMapPoint) => {\r\n//this line takes the buffered point and sends it  to the map reducer which punts it to the _setSupport saga\r\n// which queries and gets the support, signs, timebands, etc and writes them to the store, where they dictate the \r\n//Rightbar display.  Once the store changes the action picks up in willReceiveProps\r\n\r\n\r\n        this\r\n            .props\r\n            .onMapClicked(expandedMapPoint, this.props.config.featureURLs);\r\n\r\n    }\r\n\r\n    mapClickHandler = (evt) => {\r\n        alert( 'bnbo')\r\n        // in any map app that's more than a viewer, the map click event is gonna be complicated\r\n        // so much so that I wrote this a month ago and it is already getting away from me\r\n        //so we shall comment.  The click event is first captured here\r\n        // then evaluated against the store to decide what it is supposed to do\r\n        switch (this.props.graphic.mapClickMode) {\r\n            //the click is supposed to select an existing support on the map\r\n            case mapModes.SELECT_SUPPORT:\r\n            //this line seems to control some code in willReceiveProps, but I think that code might be in the wrong place\r\n            // It is.  Must fix. (todo)\r\n                this.setState({mapClicked: true});\r\n                //this redux call moves info about the view into the store so that an extent around the point can be calculated\r\n                // I don't think it changes, (todo) see about moving it to map load or something\r\n                this\r\n                    .props\r\n                    .setPointBuffer(this.view.width, this.view.extent.width, this.view.spatialReference);\r\n                //this creates a small extent buffer around the mapPoint to aid in the select query\r\n                //its callback is getSelectedSupport, above    \r\n                pointToExtent(this.view.width, this.view.extent.width, this.view.spatialReference, evt.mapPoint, 12, this.getSelectedSupport);\r\n                break;\r\n            default:\r\n                return\r\n\r\n        }\r\n\r\n    }\r\n\r\n    mapMoveHandler = (evt) => {\r\n        this\r\n            .props\r\n            .onMapChanged(this.view.extent);\r\n    }\r\n\r\n    init = (response) => {\r\n        this.view = response.view\r\n        this.map = response.view.map;\r\n    }\r\n\r\n    setupWidgetsAndLayers = () => {\r\n        loadModules(['esri/layers/FeatureLayer', \"esri/layers/GraphicsLayer\", 'esri/Graphic', \"esri/layers/TileLayer\", \"esri/Basemap\"]).then(([FeatureLayer, GraphicsLayer, Graphic, TileLayer, Basemap]) => {\r\n            const layerUrl = \"https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/DC_Basemap_LightGray_W\" +\r\n                    \"ebMercator/MapServer\";\r\n            const baselayer = new TileLayer(layerUrl, null);\r\n            const baseMap = new Basemap({baseLayers: [baselayer]})\r\n\r\n            const featureLayer = new FeatureLayer({url: this.props.config.featureURLs.supports, definitionExpression: \"SUPPORTSTATUS = 1\", outFields: [\"*\"], id: \"support\"});\r\n            this.queryMarkerLayer = new GraphicsLayer();\r\n            this.markerLayer = new GraphicsLayer();\r\n\r\n            this.map.basemap = baseMap;\r\n            this\r\n                .map\r\n                .addMany([featureLayer, this.queryMarkerLayer, this.markerLayer]);\r\n            this\r\n                .view\r\n                .on(\"click\", this.mapClickHandler);\r\n\r\n            this\r\n                .view\r\n                .on(\"pointer-up\", this.mapMoveHandler);\r\n            this\r\n                .view\r\n                .on('mouse-wheel', this.mapMoveHandler)\r\n\r\n            this.symb = {\r\n                type: \"simple-marker\", // autocasts as new SimpleMarkerSymbol()\r\n                style: \"circle\",\r\n                color: [\r\n                    0, 255, 0, 0.0\r\n                ],\r\n                size: \"30px\", // pixels\r\n                outline: { // autocasts as new SimpleLineSymbol()\r\n                    color: 'magenta',\r\n                    width: 3 // points\r\n                }\r\n            };\r\n\r\n            this.selPoint = new Graphic({geometry: null, symbol: this.symb})\r\n\r\n            //   this.markerLayer.add(this.selPoint)\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({config: state.config, map: state.map, graphic: state.graphic});\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n    return bindActionCreators({\r\n        ...mapActions,\r\n        ...graphicActions\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapView);\r\n"]},"metadata":{},"sourceType":"module"}