{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(query),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchQuery);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { superQuery, superExtent } from '../../utils/JSAPI'; // WORKER //\n\nfunction query(action) {\n  var queryResult, extent, xmax, xmin, ymax, ymin, w1, h1, w2, h2, features;\n  return _regeneratorRuntime.wrap(function query$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(superQuery, [action.payload.where, action.payload.extent, action.payload.layer]);\n\n        case 3:\n          queryResult = _context.sent;\n          _context.next = 6;\n          return call(superExtent, [action.payload.where, action.payload.extent, action.payload.layer]);\n\n        case 6:\n          extent = _context.sent;\n          extent = extent.extent; // what mischief is this?  The query result for the extent is one zoom click smaller than it needs to be.  Thanks , ESRI.\n          // so here I bump the size of the extent up a bit to kick it up to the next LOD.\n\n          xmax = extent.xmax;\n          xmin = extent.xmin;\n          ymax = extent.ymax;\n          ymin = extent.ymin;\n          w1 = xmax - xmin;\n          h1 = ymax - ymin;\n          w2 = w1 * .1;\n          h2 = h1 * .1;\n          extent.xmax = extent.xmax + w2;\n          extent.xmin = extent.xmin - w2;\n          extent.ymax = extent.ymax + h2;\n          extent.ymin = extent.ymin - h2;\n          features = queryResult.features;\n          _context.next = 23;\n          return put({\n            type: graphicTypes.SET_QUERY_RESULTS_RG,\n            payload: {\n              queryFeatures: features,\n              queryCount: features.length,\n              queryResultsExt: extent\n            }\n          });\n\n        case 23:\n          _context.next = 28;\n          break;\n\n        case 25:\n          _context.prev = 25;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/query, ', _context.t0);\n\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 25]]);\n} // WATCHER //\n\n\nexport function watchQuery() {\n  return _regeneratorRuntime.wrap(function watchQuery$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.QUERY_SUPERQUERY_S, query);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_query.js"],"names":["query","watchQuery","call","put","takeLatest","types","graphicTypes","superQuery","superExtent","action","payload","where","extent","layer","queryResult","xmax","xmin","ymax","ymin","w1","h1","w2","h2","features","type","SET_QUERY_RESULTS_RG","queryFeatures","queryCount","length","queryResultsExt","console","log","QUERY_SUPERQUERY_S"],"mappings":";;;;yBAOWA,K;;;yBA+COC,U;;AAtDlB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AAEA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,mBAAtC,C,CAEA;;AAEA,SAAWR,KAAX,CAAiBS,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG4B,iBAAMP,IAAI,CAACK,UAAD,EAAa,CAACE,MAAM,CAACC,OAAP,CAAeC,KAAhB,EAAuBF,MAAM,CAACC,OAAP,CAAeE,MAAtC,EAA8CH,MAAM,CAACC,OAAP,CAAeG,KAA7D,CAAb,CAAV;;AAH5B;AAGcC,UAAAA,WAHd;AAAA;AAKqB,iBAAMZ,IAAI,CAACM,WAAD,EAAc,CAACC,MAAM,CAACC,OAAP,CAAeC,KAAhB,EAAuBF,MAAM,CAACC,OAAP,CAAeE,MAAtC,EAA8CH,MAAM,CAACC,OAAP,CAAeG,KAA7D,CAAd,CAAV;;AALrB;AAKYD,UAAAA,MALZ;AAMQA,UAAAA,MAAM,GAAGA,MAAM,CAACA,MAAhB,CANR,CAOA;AACA;;AACYG,UAAAA,IATZ,GASmBH,MAAM,CAACG,IAT1B;AAUYC,UAAAA,IAVZ,GAUmBJ,MAAM,CAACI,IAV1B;AAWYC,UAAAA,IAXZ,GAWmBL,MAAM,CAACK,IAX1B;AAYYC,UAAAA,IAZZ,GAYmBN,MAAM,CAACM,IAZ1B;AAcYC,UAAAA,EAdZ,GAciBJ,IAAI,GAAGC,IAdxB;AAeYI,UAAAA,EAfZ,GAeiBH,IAAI,GAAGC,IAfxB;AAgBYG,UAAAA,EAhBZ,GAgBiBF,EAAE,GAAG,EAhBtB;AAiBYG,UAAAA,EAjBZ,GAiBiBF,EAAE,GAAG,EAjBtB;AAmBQR,UAAAA,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAAP,GAAcM,EAA5B;AACAT,UAAAA,MAAM,CAACI,IAAP,GAAcJ,MAAM,CAACI,IAAP,GAAcK,EAA5B;AACAT,UAAAA,MAAM,CAACK,IAAP,GAAcL,MAAM,CAACK,IAAP,GAAcK,EAA5B;AACAV,UAAAA,MAAM,CAACM,IAAP,GAAcN,MAAM,CAACM,IAAP,GAAcI,EAA5B;AAEMC,UAAAA,QAxBd,GAwByBT,WAAW,CAACS,QAxBrC;AAAA;AA0BQ,iBAAMpB,GAAG,CAAC;AACNqB,YAAAA,IAAI,EAAElB,YAAY,CAACmB,oBADb;AAENf,YAAAA,OAAO,EAAE;AACLgB,cAAAA,aAAa,EAAEH,QADV;AAELI,cAAAA,UAAU,EAAEJ,QAAQ,CAACK,MAFhB;AAGLC,cAAAA,eAAe,EAAEjB;AAHZ;AAFH,WAAD,CAAT;;AA1BR;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0CQkB,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AA1CR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA8CA;;;AACA,OAAO,SAAW9B,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAAC0B,kBAAd,EAAkChC,KAAlC,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\n\r\nimport {superQuery, superExtent} from '../../utils/JSAPI'\r\n\r\n// WORKER //\r\n\r\nfunction * query(action) {\r\n    try {\r\n\r\n        const queryResult = yield call(superQuery, [action.payload.where, action.payload.extent, action.payload.layer]);\r\n\r\n        let extent = yield call(superExtent, [action.payload.where, action.payload.extent, action.payload.layer]);\r\n        extent = extent.extent;\r\n// what mischief is this?  The query result for the extent is one zoom click smaller than it needs to be.  Thanks , ESRI.\r\n// so here I bump the size of the extent up a bit to kick it up to the next LOD.\r\n        let xmax = extent.xmax;\r\n        let xmin = extent.xmin;\r\n        let ymax = extent.ymax;\r\n        let ymin = extent.ymin;\r\n\r\n        let w1 = xmax - xmin;\r\n        let h1 = ymax - ymin;\r\n        let w2 = w1 * .1;\r\n        let h2 = h1 * .1;\r\n\r\n        extent.xmax = extent.xmax + w2;\r\n        extent.xmin = extent.xmin - w2;\r\n        extent.ymax = extent.ymax + h2;\r\n        extent.ymin = extent.ymin - h2;\r\n\r\n        const features = queryResult.features;\r\n\r\n        yield put({\r\n            type: graphicTypes.SET_QUERY_RESULTS_RG,\r\n            payload: {\r\n                queryFeatures: features,\r\n                queryCount: features.length,\r\n                queryResultsExt: extent\r\n            }\r\n        });\r\n\r\n        /* yield put({\r\n        type:graphicTypes. SET_QUERY_RESULTS_EXTENT_RG,\r\n        payload:{ queryResultsExt: extent}\r\n\r\n        }); */\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: graphic/query, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchQuery() {\r\n\r\n    yield takeLatest(graphicTypes.QUERY_SUPERQUERY_S, query);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}