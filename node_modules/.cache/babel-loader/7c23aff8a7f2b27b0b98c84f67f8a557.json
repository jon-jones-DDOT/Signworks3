{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    desc = parent = getter = undefined;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n}\n\nfunction getScript(globalPath) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  var paths = globalPath.split('.');\n  var root = window;\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    var prop = root[path];\n\n    if (typeof prop === 'undefined') {\n      return null;\n    }\n\n    root = prop;\n  }\n\n  return root;\n}\n\nfunction getScriptLoader(dep, callback) {\n  var _this = this;\n\n  if (typeof document === 'undefined') {\n    return null;\n  }\n\n  var globalPath = dep.globalPath;\n  var url = dep.url;\n  var jsonp = dep.jsonp;\n  var scriptLoader = document.createElement('script');\n\n  if (jsonp) {\n    var _dep$callbackName = dep.callbackName;\n    var callbackName = _dep$callbackName === undefined ? '_async_' + globalPath.replace('.', '_') : _dep$callbackName;\n    url = '' + url + (url.indexOf('?') > -1 ? '&' : '?') + 'callback=' + callbackName;\n    window[callbackName] = callback;\n  } else {\n    scriptLoader.onload = callback;\n\n    scriptLoader.onreadystatechange = function () {\n      if (_this.readyState === 'loaded') {\n        window.setTimeout(scriptLoader.onload, 0);\n      }\n    };\n  }\n\n  scriptLoader.async = 1;\n  scriptLoader.src = url;\n  return scriptLoader;\n}\n\nvar asyncLoad = function asyncLoad(mapScriptsToProps) {\n  function getInitialState(props) {\n    var dependencies = mapScriptsToProps(props);\n    return Object.keys(dependencies).reduce(function (states, name) {\n      return _extends({}, states, _defineProperty({}, name, getScript(dependencies[name].globalPath)));\n    }, {});\n  }\n\n  return function (Component) {\n    var AsyncLoaded = function (_React$Component) {\n      _inherits(AsyncLoaded, _React$Component);\n\n      function AsyncLoaded() {\n        _classCallCheck(this, AsyncLoaded);\n\n        _get(Object.getPrototypeOf(AsyncLoaded.prototype), 'constructor', this).apply(this, arguments);\n\n        this.displayName = 'AsyncLoaded(' + getDisplayName(Component) + ')';\n        this.state = getInitialState(this.props);\n      }\n\n      _createClass(AsyncLoaded, [{\n        key: 'loadScripts',\n        value: function loadScripts(dependencies) {\n          var _this2 = this;\n\n          return Object.keys(dependencies).filter(function (name) {\n            return _this2.state[name] === null;\n          }).map(function (name) {\n            var dep = dependencies[name];\n            return getScriptLoader(dep, _this2.loadHandler.bind(_this2, name, dep.globalPath));\n          }).map(function (scriptLoader) {\n            if (typeof document !== 'undefined') {\n              document.body.appendChild(scriptLoader);\n            }\n          });\n        }\n      }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          this.loadScripts(mapScriptsToProps(this.props));\n        }\n        /**\n         * Support again in the next version\n         */\n        // componentWillReceiveProps (nextProps) {\n        //   this.setState(getInitialState(nextProps));\n        // }\n        //\n        // componentDidUpdate (nextProps) {\n        //   const dependencies = mapScriptsToProps(nextProps);\n        //\n        //   this.loadScripts(dependencies);\n        // }\n\n      }, {\n        key: 'loadHandler',\n        value: function loadHandler(name, globalPath) {\n          var script = getScript(globalPath);\n\n          if (script !== null) {\n            this.setState(_defineProperty({}, name, script));\n          }\n        }\n      }, {\n        key: 'injectScripts',\n        value: function injectScripts(component) {\n          return _react2['default'].cloneElement(_react2['default'].createElement(component, this.props), this.state);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          return this.injectScripts(Component);\n        }\n      }]);\n\n      return AsyncLoaded;\n    }(_react2['default'].Component);\n\n    return (0, _hoistNonReactStatics2['default'])(AsyncLoaded, Component);\n  };\n};\n\nexports['default'] = asyncLoad;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}