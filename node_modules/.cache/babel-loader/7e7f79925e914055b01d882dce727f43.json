{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\SuperQuery.js\";\nimport React, { Component } from 'react';\nimport './SuperQuery.css';\nimport ModalWrapper from './Modals/ModalWrapper';\nimport { layerURLs } from '../../utils/JSAPI';\nimport Downshift from 'downshift'; //import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\n\nvar SuperQuery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuperQuery, _Component);\n\n  function SuperQuery(props) {\n    var _this;\n\n    _classCallCheck(this, SuperQuery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SuperQuery).call(this, props));\n    _this.items = [{\n      value: 'apple'\n    }, {\n      value: 'pear'\n    }, {\n      value: 'orange'\n    }, {\n      value: 'grape'\n    }, {\n      value: 'banana'\n    }];\n\n    _this.getOptions = function () {\n      var bob = [];\n\n      for (var i = 0; i < _this.props.map.muttArray.length; i++) {\n        bob.push(_this.props.map.muttArray[i].code + \": \" + _this.props.map.muttArray[i].name);\n      }\n\n      return bob;\n    };\n\n    _this.mutcdLookUpSelectHandler = function (desc) {\n      var option = desc.split(':');\n\n      _this.setState({\n        selectedMutt: option[0],\n        selected: true\n      });\n\n      _this.myRef.current.focus();\n    };\n\n    _this.cancelClickHandler = function () {\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.searchClickHandler = function (evt) {\n      // when this finally breaks , remember to check and see if they updated the\n      // table to 'SIGNCODE'\n      _this.props.removeQueryGraphics();\n\n      var where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND MUTCD='\" + _this.state.selectedMutt + \"'\";\n      var extent = _this.props.map.extent;\n      var layer = layerURLs(_this.props).superquery;\n\n      _this.props.querySuperQuery(where, extent, layer);\n    };\n\n    _this.myRef = React.createRef();\n    _this.state = {\n      selectedMutt: null,\n      selected: false,\n      ready: true\n    };\n    return _this;\n  }\n\n  _createClass(SuperQuery, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"Query\",\n        width: 400,\n        showOk: this.props.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SuperQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SuperQueryCancel\",\n        title: \"Close Window\",\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Type a partial MUTCD and select from results\"), React.createElement(Downshift, {\n        onChange: function onChange(selection) {\n          return alert(selection ? \"You selected \".concat(selection.value) : 'Selection Cleared');\n        },\n        itemToString: function itemToString(item) {\n          return item ? item.value : '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            getLabelProps = _ref.getLabelProps,\n            getMenuProps = _ref.getMenuProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex,\n            selectedItem = _ref.selectedItem;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"label\", Object.assign({}, getLabelProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), \"Enter a fruit\"), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        })), React.createElement(\"ul\", Object.assign({}, getMenuProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), isOpen ? items.filter(function (item) {\n          return !inputValue || item.value.includes(inputValue);\n        }).map(function (item, index) {\n          return React.createElement(\"li\", Object.assign({}, getItemProps({\n            key: item.value,\n            index: index,\n            item: item,\n            style: {\n              backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n              fontWeight: selectedItem === item ? 'bold' : 'normal'\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), item.value);\n        }) : null));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.props.graphic.queryCount, \"\\xA0  features found\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"The Extent for the query will be the current extent of the displayed map\"), React.createElement(\"button\", {\n        ref: this.myRef,\n        onClick: this.searchClickHandler,\n        disabled: this.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"SEARCH\")));\n    }\n  }]);\n\n  return SuperQuery;\n}(Component);\n\nexport { SuperQuery as default };","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\SuperQuery.js"],"names":["React","Component","ModalWrapper","layerURLs","Downshift","SuperQuery","props","items","value","getOptions","bob","i","map","muttArray","length","push","code","name","mutcdLookUpSelectHandler","desc","option","split","setState","selectedMutt","selected","myRef","current","focus","cancelClickHandler","modalClicked","searchClickHandler","evt","removeQueryGraphics","where","state","extent","layer","superquery","querySuperQuery","createRef","ready","showOk","selection","alert","item","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","index","key","style","backgroundColor","fontWeight","graphic","queryCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './SuperQuery.css'\r\nimport ModalWrapper from './Modals/ModalWrapper';\r\nimport {layerURLs} from '../../utils/JSAPI'\r\nimport Downshift from 'downshift'\r\n\r\n//import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\r\n\r\n\r\nexport default class SuperQuery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n \r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedMutt: null,\r\n            selected: false,\r\n            ready: true\r\n        }\r\n\r\n    }\r\n\r\n     items = [\r\n        {value: 'apple'},\r\n        {value: 'pear'},\r\n        {value: 'orange'},\r\n        {value: 'grape'},\r\n        {value: 'banana'},\r\n      ]\r\n\r\n    getOptions = () => {\r\n        let bob = [];\r\n        for (let i = 0; i < this.props.map.muttArray.length; i++) {\r\n            bob.push(this.props.map.muttArray[i].code + \": \" + this.props.map.muttArray[i].name)\r\n        }\r\n\r\n        return bob;\r\n\r\n    }\r\n\r\n    mutcdLookUpSelectHandler = (desc) => {\r\n\r\n        let option = desc.split(':')\r\n        this.setState({selectedMutt: option[0], selected: true})\r\n        this\r\n            .myRef\r\n            .current\r\n            .focus();\r\n\r\n    }\r\n\r\n    cancelClickHandler = () => {\r\n\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }\r\n\r\n    searchClickHandler = (evt) => {\r\n        // when this finally breaks , remember to check and see if they updated the\r\n        // table to 'SIGNCODE'\r\n        this\r\n        .props\r\n        .removeQueryGraphics();\r\n        const where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND MUTCD='\" + this.state.selectedMutt + \"'\";\r\n        const extent = this.props.map.extent;\r\n        const layer = layerURLs(this.props).superquery;\r\n\r\n        this\r\n            .props\r\n            .querySuperQuery(where, extent, layer)\r\n\r\n    }\r\n\r\n    render() {\r\n       return (\r\n\r\n            <ModalWrapper\r\n                {...this.props}\r\n                title=\"Query\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.showOk}>\r\n\r\n                <div className=\"SuperQuery\">\r\n                    <div\r\n                        className=\"SuperQueryCancel\"\r\n                        title=\"Close Window\"\r\n                        onClick={this.cancelClickHandler}>X</div>\r\n                    <div>\r\n\r\n                        <p>Type a partial MUTCD and select from results</p>\r\n                        <Downshift\r\n    onChange={selection => alert(\r\n      selection ? `You selected ${selection.value}` : 'Selection Cleared'\r\n    )}\r\n    itemToString={item => (item ? item.value : '')}\r\n  >\r\n    {({\r\n      getInputProps,\r\n      getItemProps,\r\n      getLabelProps,\r\n      getMenuProps,\r\n      isOpen,\r\n      inputValue,\r\n      highlightedIndex,\r\n      selectedItem,\r\n    }) => (\r\n      <div>\r\n        <label {...getLabelProps()}>Enter a fruit</label>\r\n        <input {...getInputProps()} />\r\n        <ul {...getMenuProps()}>\r\n          {isOpen\r\n            ? items\r\n                .filter(item => !inputValue || item.value.includes(inputValue))\r\n                .map((item, index) => (\r\n                  <li\r\n                    {...getItemProps({\r\n                      key: item.value,\r\n                      index,\r\n                      item,\r\n                      style: {\r\n                        backgroundColor:\r\n                          highlightedIndex === index ? 'lightgray' : 'white',\r\n                        fontWeight: selectedItem === item ? 'bold' : 'normal',\r\n                      },\r\n                    })}\r\n                  >\r\n                    {item.value}\r\n                  </li>\r\n                ))\r\n            : null}\r\n        </ul>\r\n      </div>\r\n    )}\r\n  </Downshift>\r\n                       \r\n                    </div>\r\n                    <div>\r\n                        {this.props.graphic.queryCount}\r\n                        &nbsp;  features found</div>\r\n                    <p>\r\n                        The Extent for the query will be the current extent of the displayed map</p>\r\n                    < button ref={this.myRef} onClick={this.searchClickHandler} disabled={this.selected}>\r\n                        SEARCH</button>\r\n\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}