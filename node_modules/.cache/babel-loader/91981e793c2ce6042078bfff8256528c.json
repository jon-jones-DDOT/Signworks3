{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saveSelectSupport),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLayers);\n\nimport { call, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { getFullSignPost } from './reload';\nimport { saveSupport } from '../../utils/JSAPI'; // WORKER //\n\nfunction saveSelectSupport(action) {\n  return _regeneratorRuntime.wrap(function saveSelectSupport$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          action.payload.support.geometry.spatialReference = {\n            wkid: 4326\n          };\n          _context.next = 4;\n          return call(saveSupport, [action.payload.support, false, action.payload.layers.supports]);\n\n        case 4:\n          _context.next = 6;\n          return put({\n            type: graphicTypes.NEED_SUPPORT_REFRESH_RG,\n            payload: {\n              needSupRefresh: true\n            }\n          });\n\n        case 6:\n          _context.next = 8;\n          return getFullSignPost(action);\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: map/saveSelectedSupport, ', _context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n} // WATCHER //\n\n\nexport function watchLayers() {\n  return _regeneratorRuntime.wrap(function watchLayers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.SAVE_SUPPORT_S, saveSelectSupport);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_saveSupport.js"],"names":["saveSelectSupport","watchLayers","call","takeLatest","types","mapTypes","graphicTypes","getFullSignPost","saveSupport","action","payload","support","geometry","spatialReference","wkid","layers","supports","put","type","NEED_SUPPORT_REFRESH_RG","needSupRefresh","console","log","SAVE_SUPPORT_S"],"mappings":";;;;yBAQWA,iB;;;yBAoBOC,W;;AA5BlB,SAAQC,IAAR,EAAcC,UAAd,QAA+B,oBAA/B;AACA,SAAQC,KAAK,IAAIC,QAAjB,QAAgC,iBAAhC;AACA,SAAQD,KAAK,IAAIE,YAAjB,QAAoC,qBAApC;AACA,SAAQC,eAAR,QAA8B,UAA9B;AACA,SAAQC,WAAR,QAA0B,mBAA1B,C,CAEA;;AAEA,SAAWR,iBAAX,CAA6BS,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEMA,UAAAA,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuBC,QAAvB,CAAgCC,gBAAhC,GAAkD;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAlD;AAFN;AAGS,iBAAMZ,IAAI,CAACM,WAAD,EAAc,CAACC,MAAM,CAACC,OAAP,CAAeC,OAAhB,EAAyB,KAAzB,EAAgCF,MAAM,CAACC,OAAP,CAAeK,MAAf,CAAsBC,QAAtD,CAAd,CAAV;;AAHT;AAAA;AAIS,iBAAMC,GAAG,CAAC;AACPC,YAAAA,IAAI,EAAEZ,YAAY,CAACa,uBADZ;AAEPT,YAAAA,OAAO,EAAE;AACLU,cAAAA,cAAc,EAAE;AADX;AAFF,WAAD,CAAT;;AAJT;AAAA;AAWS,iBAAMb,eAAe,CAACE,MAAD,CAArB;;AAXT;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeQY,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;AAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAmBA;;;AACA,OAAO,SAAWrB,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAME,UAAU,CAACE,QAAQ,CAACkB,cAAV,EAA0BvB,iBAA1B,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, takeLatest} from 'redux-saga/effects';\r\nimport {types as mapTypes} from '../reducers/map';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {getFullSignPost} from './reload'\r\nimport {saveSupport} from '../../utils/JSAPI';\r\n\r\n// WORKER //\r\n\r\nfunction * saveSelectSupport(action) {\r\n    try{\r\n      action.payload.support.geometry.spatialReference ={ wkid: 4326};\r\n         yield call(saveSupport, [action.payload.support, false, action.payload.layers.supports]);\r\n         yield put({\r\n            type: graphicTypes.NEED_SUPPORT_REFRESH_RG,\r\n            payload: {\r\n                needSupRefresh: true\r\n            }\r\n        })\r\n\r\n         yield getFullSignPost(action);\r\n    }\r\n    \r\n    catch (e) {\r\n        console.log('SAGA ERROR: map/saveSelectedSupport, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchLayers() {\r\n   \r\n    yield takeLatest(mapTypes.SAVE_SUPPORT_S, saveSelectSupport);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}