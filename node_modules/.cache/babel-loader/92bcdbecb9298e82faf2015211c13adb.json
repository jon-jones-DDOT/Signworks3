{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\Signs\\\\SignEditor.js\";\nimport React, { Component } from 'react';\nimport { call } from 'redux-saga/effects';\nimport './SignEditor.css';\nimport ModalWrapper from '../Modals/ModalWrapper';\nimport { SignType, addOptionsToSelect } from '../../../SignworksJSON';\n\nvar Typeahead = require('react-typeahead').Typeahead;\n\nvar myRef = React.createRef();\n\nvar SignEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignEditor, _Component);\n\n  function SignEditor(props) {\n    var _this;\n\n    _classCallCheck(this, SignEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignEditor).call(this, props));\n\n    _this.saveClickHandler = function () {//gotta implement, this one saves the sign/timebands to the server\n    };\n\n    _this.cancelClickHandler = function () {\n      //this cancels the editor window\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.muttSelectorHandler = function () {\n      //just toggles between mutcd selector and sign editor\n      _this.setState({\n        muttActive: !_this.state.muttActive,\n        showInfo: false\n      });\n    };\n\n    _this.cancelMUTCDselectHandler = function () {\n      _this.muttSelectorHandler();\n    };\n\n    _this.mutcdLookUpSelectHandler = function (desc) {\n      var option = desc.split(':');\n\n      var chosenOne = _this.props.map.muttArray.find(function (element) {\n        return element.code === option[0];\n      }); //myRef.current.focus();\n\n\n      _this.setState({\n        showInfo: true,\n        selMUTCD: chosenOne\n      }); //this.muttSelectorHandler()\n\n    };\n\n    _this.cancelSelectionHandler = function (evt) {\n      _this.setState({\n        showInfo: false\n      });\n    };\n\n    _this.getOptions = function () {\n      var bob = [];\n\n      for (var i = 0; i < _this.props.map.muttArray.length; i++) {\n        bob.push(_this.props.map.muttArray[i].code + \": \" + _this.props.map.muttArray[i].name);\n      }\n\n      return bob;\n    };\n\n    _this.signTypes = new SignType();\n    _this.state = _objectSpread({}, _this.props.signs[_this.props.editSignIndex], {\n      muttActive: false,\n      muttSelected: false,\n      showInfo: false,\n      selMUTCD: null\n    });\n    return _this;\n  }\n\n  _createClass(SignEditor, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"Edit Support\",\n        width: 400,\n        showOk: this.props.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.muttActive ? \"SignEditorUnder\" : \"SignEditorOver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.feature.attributes.OBJECTID), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.MUTCD.name), React.createElement(\"button\", {\n        onClick: this.muttSelectorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"MUTT\"), React.createElement(\"button\", {\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(\"button\", {\n        onClick: this.saveClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"SAVE\")), React.createElement(\"div\", {\n        className: this.state.muttActive ? \"SignEditorOver\" : \"SignEditorUnder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"TypeAheadDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Typeahead, {\n        options: this.getOptions(),\n        maxVisible: 10,\n        onOptionSelected: this.mutcdLookUpSelectHandler,\n        placeholder: \"TYPE DESCRIPTION\",\n        disabled: this.state.showInfo,\n        inputProps: {\n          'size': 70\n        },\n        ref: myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"\\\"Enter Partial Description or MUTCD\\\"\"), React.createElement(\"button\", {\n        onClick: this.muttSelectorHandler,\n        disabled: this.state.showInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"SELECT\"), React.createElement(\"button\", {\n        disabled: this.state.showInfo,\n        onClick: this.cancelMUTCDselectHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(\"div\", {\n        className: this.state.showInfo ? \"MutcdInfoDiv\" : \"MutcdInfoDiv_hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.selMUTCD.isParking ? React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Parking Sign\") : null), React.createElement(\"button\", {\n        onClick: this.cancelSelectionHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"CANCEL\"))));\n    }\n  }]);\n\n  return SignEditor;\n}(Component);\n\nexport { SignEditor as default };","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\Signs\\SignEditor.js"],"names":["React","Component","call","ModalWrapper","SignType","addOptionsToSelect","Typeahead","require","myRef","createRef","SignEditor","props","saveClickHandler","cancelClickHandler","modalClicked","muttSelectorHandler","setState","muttActive","state","showInfo","cancelMUTCDselectHandler","mutcdLookUpSelectHandler","desc","option","split","chosenOne","map","muttArray","find","element","code","selMUTCD","cancelSelectionHandler","evt","getOptions","bob","i","length","push","name","signTypes","signs","editSignIndex","muttSelected","showOk","feature","attributes","OBJECTID","MUTCD","isParking"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {call} from 'redux-saga/effects';\r\nimport './SignEditor.css'\r\nimport ModalWrapper from '../Modals/ModalWrapper';\r\nimport {SignType, addOptionsToSelect} from '../../../SignworksJSON';\r\n\r\nlet Typeahead = require('react-typeahead').Typeahead;\r\n\r\nconst myRef = React.createRef();\r\nexport default class SignEditor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            ...this.props.signs[this.props.editSignIndex],\r\n            muttActive: false,\r\n            muttSelected: false,\r\n            showInfo: false,\r\n            selMUTCD: null\r\n\r\n        }\r\n\r\n    }\r\n\r\n    saveClickHandler = () => {\r\n        //gotta implement, this one saves the sign/timebands to the server\r\n\r\n    }\r\n\r\n    cancelClickHandler = () => {\r\n        //this cancels the editor window\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }\r\n\r\n    muttSelectorHandler = () => {\r\n        //just toggles between mutcd selector and sign editor\r\n\r\n        this.setState({\r\n            muttActive: !this.state.muttActive,\r\n            showInfo: false\r\n        })\r\n    }\r\n    cancelMUTCDselectHandler = () => {\r\n\r\n        this.muttSelectorHandler()\r\n    }\r\n    mutcdLookUpSelectHandler = (desc) => {\r\n\r\n        let option = desc.split(':')\r\n\r\n        let chosenOne = this\r\n            .props\r\n            .map\r\n            .muttArray\r\n            .find(function (element) {\r\n                return element.code === option[0]\r\n            })\r\n        //myRef.current.focus();\r\n        this.setState({showInfo: true, selMUTCD: chosenOne})\r\n        //this.muttSelectorHandler()\r\n    }\r\n\r\n    cancelSelectionHandler = (evt) => {\r\n        this.setState({showInfo: false})\r\n    }\r\n\r\n    getOptions = () => {\r\n        let bob = [];\r\n        for (let i = 0; i < this.props.map.muttArray.length; i++) {\r\n            bob.push(this.props.map.muttArray[i].code + \": \" + this.props.map.muttArray[i].name)\r\n        }\r\n\r\n        return bob;\r\n\r\n    }\r\n    /*\r\n    supportStatusChangeHandler = (evt) => {\r\n        this.setState({\r\n            \"SUPPORTSTATUS\": Number(evt.target.value)\r\n        })\r\n    }\r\n*/\r\n\r\n    signTypes = new SignType();\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <ModalWrapper\r\n                {...this.props}\r\n                title=\"Edit Support\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.showOk}>\r\n\r\n                <div\r\n                    className={this.state.muttActive\r\n                    ? \"SignEditorUnder\"\r\n                    : \"SignEditorOver\"}>\r\n\r\n                    <p>{this.state.feature.attributes.OBJECTID}</p>\r\n                    <p>{this.state.MUTCD.name}</p>\r\n                    <button onClick={this.muttSelectorHandler}>MUTT</button>\r\n\r\n                    <button onClick={this.cancelClickHandler}>CANCEL</button>\r\n                    <button onClick={this.saveClickHandler}>SAVE</button>\r\n\r\n                </div>\r\n                <div\r\n                    className={this.state.muttActive\r\n                    ? \"SignEditorOver\"\r\n                    : \"SignEditorUnder\"}>\r\n                    <div className=\"TypeAheadDiv\">\r\n                        <Typeahead\r\n                            options={this.getOptions()}\r\n                            maxVisible={10}\r\n                            onOptionSelected={this.mutcdLookUpSelectHandler}\r\n                            placeholder=\"TYPE DESCRIPTION\"\r\n                            disabled={this.state.showInfo}\r\n                            inputProps={{\r\n                            'size': 70\r\n                        }}\r\n                            ref={myRef}/>\r\n                    </div>\r\n\r\n                    <p>\r\n                        \"Enter Partial Description or MUTCD\"</p>\r\n                    <button onClick={this.muttSelectorHandler} disabled={this.state.showInfo}>SELECT</button>\r\n                    <button disabled={this.state.showInfo} onClick={this.cancelMUTCDselectHandler}>\r\n                        CANCEL</button>\r\n                    <div\r\n                        className={this.state.showInfo\r\n                        ? \"MutcdInfoDiv\"\r\n                        : \"MutcdInfoDiv_hidden\"}>\r\n                        <ul>\r\n                            {this.state.selMUTCD.isParking?<li>Parking Sign</li>:null}\r\n                        </ul>\r\n                        <button onClick={this.cancelSelectionHandler}>CANCEL</button>\r\n                    </div>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}