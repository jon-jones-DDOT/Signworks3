{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(setSignOrder),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignOrder);\n\nimport { call, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { getFullSignPost } from './reload';\nimport { saveSignOrder } from '../../utils/JSAPI'; // WORKER //\n\nfunction setSignOrder(action) {\n  return _regeneratorRuntime.wrap(function setSignOrder$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(saveSignOrder, [action.payload.features, action.payload.layers.signs]);\n\n        case 3:\n          _context.next = 5;\n          return getFullSignPost(action);\n\n        case 5:\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: map/setSignOrder, ', _context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n} // WATCHER //\n\n\nexport function watchSignOrder() {\n  return _regeneratorRuntime.wrap(function watchSignOrder$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.SIGN_ORDER_CHANGED, setSignOrder);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_setSignOrder.js"],"names":["setSignOrder","watchSignOrder","call","takeLatest","types","mapTypes","getFullSignPost","saveSignOrder","action","payload","features","layers","signs","console","log","SIGN_ORDER_CHANGED"],"mappings":";;;;yBAOWA,Y;;;yBAeOC,c;;AAtBlB,SAAQC,IAAR,EAAeC,UAAf,QAAgC,oBAAhC;AACA,SAAQC,KAAK,IAAIC,QAAjB,QAAgC,iBAAhC;AACA,SAAQC,eAAR,QAA8B,UAA9B;AACA,SAASC,aAAT,QAA6B,mBAA7B,C,CAEA;;AAEA,SAAWP,YAAX,CAAwBQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMN,IAAI,CAACK,aAAD,EAAgB,CAACC,MAAM,CAACC,OAAP,CAAeC,QAAhB,EAA0BF,MAAM,CAACC,OAAP,CAAeE,MAAf,CAAsBC,KAAhD,CAAhB,CAAV;;AANR;AAAA;AAOQ,iBAAMN,eAAe,CAACE,MAAD,CAArB;;AAPR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUQK,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAcA;;;AACA,OAAO,SAAWb,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAME,UAAU,CAACE,QAAQ,CAACU,kBAAV,EAA8Bf,YAA9B,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call,  takeLatest} from 'redux-saga/effects';\r\nimport {types as mapTypes} from '../reducers/map';\r\nimport {getFullSignPost} from './reload'\r\nimport { saveSignOrder} from '../../utils/JSAPI';\r\n\r\n// WORKER //\r\n\r\nfunction * setSignOrder(action) {\r\n\r\n    try {\r\n        \r\n        // call API to save signs with new SIGNORDER\r\n\r\n        yield call(saveSignOrder, [action.payload.features, action.payload.layers.signs]);\r\n        yield getFullSignPost(action);\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: map/setSignOrder, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchSignOrder() {\r\n\r\n    yield takeLatest(mapTypes.SIGN_ORDER_CHANGED, setSignOrder);\r\n}"]},"metadata":{},"sourceType":"module"}