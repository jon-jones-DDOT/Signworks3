{"ast":null,"code":"import { parkingtypesigns, mphSigns } from \"../../../SignworksJSON\"; //newCode is the mutcd.code that is being checked\n// signs -  an array of signs on the signpost each sign should have a\n// property called MUTCD that has the info from the sign catalog\n\nexport function MutcdDuplicate(newCode, signs) {\n  var isDupe = false;\n\n  for (var i = 0; i < signs.length; i++) {\n    if (signs[i].MUTCD.code === newCode) {\n      isDupe = true;\n    }\n  }\n\n  console.log('isDupe :', isDupe);\n  return isDupe;\n}\nexport function isSpeedLimit(mutt) {\n  var speedy = mphSigns.find(function (code) {\n    console.log('code :', code);\n    console.log('mutt :', mutt);\n\n    if (code === mutt) {\n      return mutt;\n    }\n  });\n  console.log('speedy :', speedy);\n  return \"disabled\";\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\Signs\\SignValidations.js"],"names":["parkingtypesigns","mphSigns","MutcdDuplicate","newCode","signs","isDupe","i","length","MUTCD","code","console","log","isSpeedLimit","mutt","speedy","find"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,QAA3B,QAA2C,wBAA3C,C,CAKA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,KAAjC,EAAwC;AAG3C,MAAIC,MAAM,GAAG,KAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,QAAIF,KAAK,CAACE,CAAD,CAAL,CAASE,KAAT,CAAeC,IAAf,KAAwBN,OAA5B,EAAqC;AACjCE,MAAAA,MAAM,GAAG,IAAT;AACH;AACJ;;AACJK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,MAAxB;AACA,SAAOA,MAAP;AACA;AAED,OAAO,SAASO,YAAT,CAAsBC,IAAtB,EAA2B;AAE9B,MAAMC,MAAM,GAAGb,QAAQ,CAACc,IAAT,CAAc,UAACN,IAAD,EAAQ;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAtB;;AACA,QAAIJ,IAAI,KAAKI,IAAb,EAAkB;AACd,aAAOA,IAAP;AACH;AACJ,GANc,CAAf;AAOAH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,MAAxB;AACA,SAAO,UAAP;AAEH","sourcesContent":["import { parkingtypesigns, mphSigns } from \"../../../SignworksJSON\";\r\n\r\n\r\n\r\n\r\n//newCode is the mutcd.code that is being checked\r\n// signs -  an array of signs on the signpost each sign should have a\r\n// property called MUTCD that has the info from the sign catalog\r\nexport function MutcdDuplicate(newCode, signs) {\r\n\r\n   \r\n    let isDupe = false;\r\n    for (let i = 0; i < signs.length; i++) {\r\n        if (signs[i].MUTCD.code === newCode) {\r\n            isDupe = true;\r\n        }\r\n    }\r\n console.log('isDupe :', isDupe);\r\n return isDupe\r\n}\r\n\r\nexport function isSpeedLimit(mutt){\r\n\r\n    const speedy = mphSigns.find((code)=>{\r\n        console.log('code :', code);\r\n        console.log('mutt :', mutt);\r\n        if( code === mutt){\r\n            return mutt;\r\n        }\r\n    })\r\n    console.log('speedy :', speedy);\r\n    return \"disabled\";\r\n\r\n}"]},"metadata":{},"sourceType":"module"}