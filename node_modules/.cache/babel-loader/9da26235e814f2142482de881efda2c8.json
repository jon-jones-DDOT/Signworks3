{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\esri\\\\map\\\\SceneViewExample.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// Copyright 2019 Esri\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//     http://www.apache.org/licenses/LICENSE-2.0\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.â€‹\n// NOTE\n// This is a \"special\" react component that does not strictly play by\n// React's rules.\n//\n// Conceptually, this component creates a \"portal\" in React by\n// closing its render method off from updates (by simply rendering a div and\n// never accepting re-renders) then reconnecting itself to the React lifecycle\n// by listening for any new props (using componentWillReceiveProps)\n// React\nimport React, { Component } from 'react'; // Redux\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actions as mapActions } from '../../../redux/reducers/map'; // ESRI\n\nimport { loadModules } from 'esri-loader';\nimport { createView } from '../../../utils/esriHelper'; // Styled Components\n\nimport styled from 'styled-components';\nvar Container = styled.div(_templateObject()); // Variables\n\nvar containerID = \"map-view-container\";\n\nvar SceneViewExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SceneViewExample, _Component);\n\n  function SceneViewExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SceneViewExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SceneViewExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.startup = function (mapConfig, node) {\n      var isScene = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      createView(mapConfig, node, isScene).then(function (response) {\n        _this.init(response);\n\n        _this.setupEventHandlers(_this.map);\n\n        _this.setupWidgetsAndLayers();\n\n        _this.finishedLoading();\n      }, function (error) {\n        console.error(\"maperr\", error);\n        window.setTimeout(function () {\n          _this.startup(mapConfig, node);\n        }, 1000);\n      });\n    };\n\n    _this.finishedLoading = function () {\n      // Update app state only after map and widgets are loaded\n      _this.props.onMapLoaded();\n    };\n\n    _this.init = function (response) {\n      _this.view = response.view;\n      _this.map = response.view.map;\n    };\n\n    _this.setupWidgetsAndLayers = function () {\n      loadModules(['esri/layers/FeatureLayer', 'esri/widgets/LayerList', 'esri/core/Collection']).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            FeatureLayer = _ref2[0],\n            LayerList = _ref2[1],\n            Collection = _ref2[2];\n\n        var featureLayer = new FeatureLayer({\n          outFields: [\"STATION_NAME\", \"COUNTRY\", \"TEMP\"],\n          portalItem: {\n            // autocasts as new PortalItem()\n            id: \"3a177da3f6524d61980fb41125b2349c\"\n          },\n          title: \"Temperature on Jan, 4, 2017\"\n        });\n\n        _this.map.add(featureLayer); // When the layer is loaded, query for the extent\n        // of all features in the layer that satisfy the\n        // definitionExpression. Then set the view's\n        // extent to the returned extent of all features.\n\n\n        featureLayer.when(function () {\n          zoomToLayer(featureLayer);\n        }); // definitionExpressions used by each action\n        // listed in the LayerList\n        // When an action is triggered, the definitionExpression\n        // is set on the layer and the view's extent updates\n        // to match the features visible in the layer\n\n        layerList.on(\"trigger-action\", function (event) {\n          var actionId = event.action.id;\n          var layer = event.item.layer;\n          zoomToLayer(layer);\n        }); // Appends a definitionExpression to a base expression\n        // the base expression only returns freatures in\n        // Canada, USA, and Mexico. It excludes some US territories\n        // located on the other side of the dateline\n        // Zooms to the extent of the layer as defined by\n        // its definitionExpression\n        // This method will work for all FeatureLayers, even\n        // those without a saved `fullExtent` on the service.\n\n        var zoomToLayer = function zoomToLayer(layer) {\n          return layer.queryExtent().then(function (response) {\n            _this.view.goTo(response.extent);\n          });\n        };\n      });\n    };\n\n    _this.setupEventHandlers = function (map) {\n      loadModules([], function () {//\n        // JSAPI Map Event Handlers go here!\n        //\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SceneViewExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startup(this.props.mapConfig, containerID, this.props.is3DScene);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // Tell React to never update this component, that's up to us\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        ref: \"mapDiv\",\n        id: containerID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    } // ESRI JSAPI\n\n  }]);\n\n  return SceneViewExample;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    config: state.config,\n    map: state.map\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, mapActions), dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SceneViewExample);","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\esri\\map\\SceneViewExample.js"],"names":["React","Component","connect","bindActionCreators","actions","mapActions","loadModules","createView","styled","Container","div","containerID","SceneViewExample","startup","mapConfig","node","isScene","then","response","init","setupEventHandlers","map","setupWidgetsAndLayers","finishedLoading","error","console","window","setTimeout","props","onMapLoaded","view","FeatureLayer","LayerList","Collection","featureLayer","outFields","portalItem","id","title","add","when","zoomToLayer","layerList","on","event","actionId","action","layer","item","queryExtent","goTo","extent","is3DScene","nextProps","nextState","mapStateToProps","state","config","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// Copyright 2019 Esri\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.â€‹\r\n\r\n// NOTE\r\n// This is a \"special\" react component that does not strictly play by\r\n// React's rules.\r\n//\r\n// Conceptually, this component creates a \"portal\" in React by\r\n// closing its render method off from updates (by simply rendering a div and\r\n// never accepting re-renders) then reconnecting itself to the React lifecycle\r\n// by listening for any new props (using componentWillReceiveProps)\r\n\r\n// React\r\nimport React, { Component } from 'react';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actions as mapActions } from '../../../redux/reducers/map';\r\n\r\n// ESRI\r\nimport { loadModules } from 'esri-loader';\r\nimport { createView } from '../../../utils/esriHelper';\r\n\r\n// Styled Components\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\n// Variables\r\nconst containerID = \"map-view-container\";\r\n\r\nclass SceneViewExample extends Component {\r\n\r\n  componentDidMount() {\r\n    this.startup(\r\n      this.props.mapConfig,\r\n      containerID,\r\n      this.props.is3DScene\r\n    );\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // Tell React to never update this component, that's up to us\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container ref=\"mapDiv\" id={containerID}></Container>\r\n    );\r\n  }\r\n\r\n  // ESRI JSAPI\r\n  startup = (mapConfig, node, isScene = false) => {\r\n    createView(mapConfig, node, isScene).then(\r\n      response => {\r\n        this.init(response);\r\n        this.setupEventHandlers(this.map);\r\n        this.setupWidgetsAndLayers();\r\n        this.finishedLoading();\r\n      },\r\n      error => {\r\n        console.error(\"maperr\", error);\r\n        window.setTimeout( () => {\r\n          this.startup(mapConfig, node);\r\n        }, 1000);\r\n      })\r\n  }\r\n\r\n  finishedLoading = () => {\r\n    // Update app state only after map and widgets are loaded\r\n    this.props.onMapLoaded();\r\n  }\r\n\r\n  init = (response) => {\r\n    this.view = response.view\r\n    this.map = response.view.map;\r\n  }\r\n\r\n  setupWidgetsAndLayers = () => {\r\n    loadModules([\r\n      'esri/layers/FeatureLayer',\r\n      'esri/widgets/LayerList',\r\n      'esri/core/Collection',\r\n    ])\r\n    .then( ([\r\n      FeatureLayer,\r\n      LayerList,\r\n      Collection,\r\n    ]) => {\r\n      const featureLayer = new FeatureLayer({\r\n        outFields: [\"STATION_NAME\", \"COUNTRY\", \"TEMP\"],\r\n        portalItem: { // autocasts as new PortalItem()\r\n          id: \"3a177da3f6524d61980fb41125b2349c\"\r\n        },\r\n        title: \"Temperature on Jan, 4, 2017\"\r\n      });\r\n      this.map.add(featureLayer);\r\n\r\n      // When the layer is loaded, query for the extent\r\n      // of all features in the layer that satisfy the\r\n      // definitionExpression. Then set the view's\r\n      // extent to the returned extent of all features.\r\n\r\n      featureLayer.when(function() {\r\n        \r\n        zoomToLayer(featureLayer);\r\n      });\r\n\r\n      \r\n\r\n      // definitionExpressions used by each action\r\n      // listed in the LayerList\r\n\r\n     \r\n\r\n      // When an action is triggered, the definitionExpression\r\n      // is set on the layer and the view's extent updates\r\n      // to match the features visible in the layer\r\n\r\n      layerList.on(\"trigger-action\", function(event) {\r\n\r\n        const actionId = event.action.id;\r\n        const layer = event.item.layer;\r\n\r\n       \r\n\r\n\r\n        zoomToLayer(layer);\r\n      });\r\n\r\n     \r\n\r\n      // Appends a definitionExpression to a base expression\r\n      // the base expression only returns freatures in\r\n      // Canada, USA, and Mexico. It excludes some US territories\r\n      // located on the other side of the dateline\r\n\r\n   \r\n\r\n      // Zooms to the extent of the layer as defined by\r\n      // its definitionExpression\r\n      // This method will work for all FeatureLayers, even\r\n      // those without a saved `fullExtent` on the service.\r\n\r\n      const zoomToLayer = (layer) => {\r\n        return layer.queryExtent()\r\n          .then((response) => {\r\n            this.view.goTo(response.extent);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  setupEventHandlers = (map) => {\r\n    loadModules([\r\n\r\n    ], (\r\n\r\n    ) => {\r\n\r\n      //\r\n      // JSAPI Map Event Handlers go here!\r\n      //\r\n\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  config: state.config,\r\n  map: state.map\r\n});\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n  return bindActionCreators({\r\n    ...mapActions\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SceneViewExample);\r\n"]},"metadata":{},"sourceType":"module"}