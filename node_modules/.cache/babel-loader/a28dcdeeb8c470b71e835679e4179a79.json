{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getCone),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchStreetSmart);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { projectGeometry, createTriangle } from '../../utils/JSAPI'; // WORKER //\n\nfunction getCone(action) {\n  var newPoint, projPoint, x, y, z, triangle;\n  return _regeneratorRuntime.wrap(function getCone$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n\n          if (!(action.payload.source === \"StreetSmart\")) {\n            _context.next = 11;\n            break;\n          }\n\n          x = action.payload.point[0];\n          y = action.payload.point[1];\n          z = action.payload.point[2];\n          newPoint = {\n            type: 'point',\n            x: x,\n            y: y,\n            z: z,\n            SpatialReference: {\n              wkid: 2248\n            }\n          };\n          _context.next = 8;\n          return call(projectGeometry, [[newPoint], action.payload.layers.geometryService, 2248, 4326]);\n\n        case 8:\n          projPoint = _context.sent;\n          _context.next = 12;\n          break;\n\n        case 11:\n          if (action.payload.source === \"Google\") {\n            projPoint = [action.payload.point];\n          }\n\n        case 12:\n          _context.next = 14;\n          return call(createTriangle, [projPoint, action.payload.pitch, action.payload.yaw, action.payload.hFov, action.payload.source]);\n\n        case 14:\n          triangle = _context.sent;\n          _context.next = 17;\n          return put({\n            type: graphicTypes.SET_NEW_CONE_RG,\n            payload: {\n              coneGraphic: triangle[0],\n              conePointGraphic: triangle[1]\n            }\n          });\n\n        case 17:\n          _context.next = 22;\n          break;\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/getNewCone, ', _context.t0);\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 19]]);\n} // WATCHER //\n\n\nexport function watchStreetSmart() {\n  return _regeneratorRuntime.wrap(function watchStreetSmart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.GET_NEW_CONE_S, getCone);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_getNewCone.js"],"names":["getCone","watchStreetSmart","call","put","takeLatest","types","graphicTypes","projectGeometry","createTriangle","action","payload","source","x","point","y","z","newPoint","type","SpatialReference","wkid","layers","geometryService","projPoint","pitch","yaw","hFov","triangle","SET_NEW_CONE_RG","coneGraphic","conePointGraphic","console","log","GET_NEW_CONE_S"],"mappings":";;;;yBAMWA,O;;;yBA4COC,gB;;AAlDlB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AACA,SAAQC,eAAR,EAAyBC,cAAzB,QAA8C,mBAA9C,C,CAEA;;AAEA,SAAWR,OAAX,CAAmBS,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAKYA,MAAM,CAACC,OAAP,CAAeC,MAAf,KAA0B,aALtC;AAAA;AAAA;AAAA;;AAMkBC,UAAAA,CANlB,GAMsBH,MAAM,CAACC,OAAP,CAAeG,KAAf,CAAqB,CAArB,CANtB;AAOkBC,UAAAA,CAPlB,GAOsBL,MAAM,CAACC,OAAP,CAAeG,KAAf,CAAqB,CAArB,CAPtB;AAQkBE,UAAAA,CARlB,GAQsBN,MAAM,CAACC,OAAP,CAAeG,KAAf,CAAqB,CAArB,CARtB;AASYG,UAAAA,QAAQ,GAAG;AACPC,YAAAA,IAAI,EAAE,OADC;AAEPL,YAAAA,CAAC,EAAEA,CAFI;AAGPE,YAAAA,CAAC,EAAEA,CAHI;AAIPC,YAAAA,CAAC,EAAEA,CAJI;AAKPG,YAAAA,gBAAgB,EAAE;AACdC,cAAAA,IAAI,EAAE;AADQ;AALX,WAAX;AATZ;AAkBwB,iBAAMjB,IAAI,CAACK,eAAD,EAAkB,CAAC,CAACS,QAAD,CAAD,EAAaP,MAAM,CAACC,OAAP,CAAeU,MAAf,CAAsBC,eAAnC,EAAoD,IAApD,EAA0D,IAA1D,CAAlB,CAAV;;AAlBxB;AAkBYC,UAAAA,SAlBZ;AAAA;AAAA;;AAAA;AAqBa,cAAGb,MAAM,CAACC,OAAP,CAAeC,MAAf,KAA0B,QAA7B,EAAsC;AAEvCW,YAAAA,SAAS,GAAE,CAAEb,MAAM,CAACC,OAAP,CAAeG,KAAjB,CAAX;AAEH;;AAzBT;AAAA;AA4ByB,iBAAMX,IAAI,CAACM,cAAD,EAAiB,CAACc,SAAD,EAAYb,MAAM,CAACC,OAAP,CAAea,KAA3B,EAAkCd,MAAM,CAACC,OAAP,CAAec,GAAjD,EAAsDf,MAAM,CAACC,OAAP,CAAee,IAArE,EAA0EhB,MAAM,CAACC,OAAP,CAAeC,MAAzF,CAAjB,CAAV;;AA5BzB;AA4Bce,UAAAA,QA5Bd;AAAA;AA8BQ,iBAAMvB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAEX,YAAY,CAACqB,eADb;AAENjB,YAAAA,OAAO,EAAE;AACLkB,cAAAA,WAAW,EAAEF,QAAQ,CAAC,CAAD,CADhB;AAELG,cAAAA,gBAAgB,EAAEH,QAAQ,CAAC,CAAD;AAFrB;AAFH,WAAD,CAAT;;AA9BR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuCQI,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAvCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA2CA;;;AACA,OAAO,SAAW9B,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAAC0B,cAAd,EAA8BhC,OAA9B,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {projectGeometry, createTriangle} from '../../utils/JSAPI'\r\n\r\n// WORKER //\r\n\r\nfunction * getCone(action) {\r\n    try {\r\n        let newPoint;\r\n        let projPoint;\r\n\r\n        if (action.payload.source === \"StreetSmart\") {\r\n            const x = action.payload.point[0];\r\n            const y = action.payload.point[1];\r\n            const z = action.payload.point[2];\r\n            newPoint = {\r\n                type: 'point',\r\n                x: x,\r\n                y: y,\r\n                z: z,\r\n                SpatialReference: {\r\n                    wkid: 2248\r\n                }\r\n            }\r\n            projPoint = yield call(projectGeometry, [[newPoint], action.payload.layers.geometryService, 2248, 4326]);\r\n       \r\n        }\r\n        else if(action.payload.source === \"Google\"){\r\n           \r\n            projPoint =[ action.payload.point];\r\n      \r\n        }\r\n\r\n \r\n        const triangle = yield call(createTriangle, [projPoint, action.payload.pitch, action.payload.yaw, action.payload.hFov,action.payload.source])\r\n\r\n        yield put({\r\n            type: graphicTypes.SET_NEW_CONE_RG,\r\n            payload: {\r\n                coneGraphic: triangle[0],\r\n                conePointGraphic: triangle[1]\r\n            }\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: graphic/getNewCone, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchStreetSmart() {\r\n\r\n    yield takeLatest(graphicTypes.GET_NEW_CONE_S, getCone);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}