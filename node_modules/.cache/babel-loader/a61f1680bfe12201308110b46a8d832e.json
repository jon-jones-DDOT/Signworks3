{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addNewSupport),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLayers);\n\nimport { call, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { getFullSignPost } from './reload';\nimport { saveSupport } from '../../utils/JSAPI'; // WORKER //\n\nfunction addNewSupport(action) {\n  var newSupport;\n  return _regeneratorRuntime.wrap(function addNewSupport$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            //build a new , blank support to save\n            newSupport = {};\n            newSupport.attributes = {\n              ANGLE: null,\n              BASETYPE: null,\n              COMMENTS: null,\n              CREATED_DATE: null,\n              CREATED_USER: null,\n              FROMDATE: null,\n              GLOBALID: null,\n              LAST_EDITED_DATE: null,\n              LAST_EDITED_USER: null,\n              LOCATION: null,\n              MEASURE: null,\n              MSENDDATE: null,\n              MSSTARTDATE: null,\n              MSUTILITYID: null,\n              NUMBEROFBASES: null,\n              OBJECTID: null,\n              ORIGIN_ID: null,\n              ROUTEID: null,\n              ROUTEID_ALT: null,\n              SEG_DIR: null,\n              SIDE: null,\n              STREETSEGID: null,\n              STREETSEGID_ALT: null,\n              SUBBASE: null,\n              SUPPORTHEIGHT: null,\n              SUPPORTSTATUS: 1,\n              SUPPORTTYPE: 14,\n              TODATE: null,\n              Z: null\n            };\n\n            newSupport.setAttributes = function (a) {\n              this.attributes = a;\n              return this;\n            };\n\n            newSupport.geometry = {\n              type: \"point\",\n              // autocasts as new Point()\n              x: action.payload.support.features[0].geometry.coordinates[0],\n              y: action.payload.support.features[0].geometry.coordinates[1],\n              z: action.payload.support.features[0].geometry.coordinates[2],\n              spatialReference: {\n                wkid: 2248\n              }\n            };\n            console.log('newSupport :', newSupport); //add LRS info\n            //  yield call(saveSupport, [action.payload.support, true,\n            // action.payload.layers.supports]);  yield getFullSignPost(action);\n          } catch (e) {\n            console.log('SAGA ERROR: map/saveSelectedSupport, ', e);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n} // WATCHER //\n\n\nexport function watchLayers() {\n  return _regeneratorRuntime.wrap(function watchLayers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.NEW_SUPPORT_S, addNewSupport);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_newSupport.js"],"names":["addNewSupport","watchLayers","call","takeLatest","types","mapTypes","getFullSignPost","saveSupport","action","newSupport","attributes","ANGLE","BASETYPE","COMMENTS","CREATED_DATE","CREATED_USER","FROMDATE","GLOBALID","LAST_EDITED_DATE","LAST_EDITED_USER","LOCATION","MEASURE","MSENDDATE","MSSTARTDATE","MSUTILITYID","NUMBEROFBASES","OBJECTID","ORIGIN_ID","ROUTEID","ROUTEID_ALT","SEG_DIR","SIDE","STREETSEGID","STREETSEGID_ALT","SUBBASE","SUPPORTHEIGHT","SUPPORTSTATUS","SUPPORTTYPE","TODATE","Z","setAttributes","a","geometry","type","x","payload","support","features","coordinates","y","z","spatialReference","wkid","console","log","e","NEW_SUPPORT_S"],"mappings":"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","sourcesContent":["import {call, takeLatest} from 'redux-saga/effects';\r\nimport {types as mapTypes} from '../reducers/map';\r\nimport {getFullSignPost} from './reload'\r\nimport {saveSupport} from '../../utils/JSAPI';\r\n\r\n// WORKER //\r\n\r\nfunction * addNewSupport(action) {\r\n    try {\r\n\r\n       \r\n        //build a new , blank support to save\r\n        let newSupport = {};\r\n        newSupport.attributes = {\r\n            ANGLE: null,\r\n            BASETYPE: null,\r\n            COMMENTS: null,\r\n            CREATED_DATE: null,\r\n            CREATED_USER: null,\r\n            FROMDATE: null,\r\n            GLOBALID: null,\r\n            LAST_EDITED_DATE: null,\r\n            LAST_EDITED_USER: null,\r\n            LOCATION: null,\r\n            MEASURE: null,\r\n            MSENDDATE: null,\r\n            MSSTARTDATE: null,\r\n            MSUTILITYID: null,\r\n            NUMBEROFBASES: null,\r\n            OBJECTID: null,\r\n            ORIGIN_ID: null,\r\n            ROUTEID: null,\r\n            ROUTEID_ALT: null,\r\n            SEG_DIR: null,\r\n            SIDE: null,\r\n            STREETSEGID: null,\r\n            STREETSEGID_ALT: null,\r\n            SUBBASE: null,\r\n            SUPPORTHEIGHT: null,\r\n            SUPPORTSTATUS: 1,\r\n            SUPPORTTYPE: 14,\r\n            TODATE: null,\r\n            Z: null\r\n        }\r\n        newSupport.setAttributes = function (a) {\r\n            this.attributes = a;\r\n            return this\r\n        };\r\n        newSupport.geometry = {\r\n            type: \"point\", // autocasts as new Point()\r\n            x: action.payload.support.features[0].geometry.coordinates[0],\r\n            y: action.payload.support.features[0].geometry.coordinates[1],\r\n            z: action.payload.support.features[0].geometry.coordinates[2],\r\n            spatialReference: {\r\n                wkid: 2248\r\n            }\r\n        };\r\nconsole.log('newSupport :', newSupport);\r\n//add LRS info\r\n\r\n\r\n\r\n        //  yield call(saveSupport, [action.payload.support, true,\r\n        // action.payload.layers.supports]);  yield getFullSignPost(action);\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: map/saveSelectedSupport, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchLayers() {\r\n\r\n    yield takeLatest(mapTypes.NEW_SUPPORT_S, addNewSupport);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}