{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(muttGenerator);\n\nimport { loadModules } from 'esri-loader';\nimport { call } from 'redux-saga/effects';\nimport LatLon from './geodesy/latlon-spherical';\nexport function getGroups(args) {\n  var portal = args[0];\n  var title = args[1];\n  var queryParams = {\n    query: \"title:\" + title,\n    num: 50\n  };\n  return new Promise(function (resolve, reject) {\n    portal.queryGroups(queryParams).then(function (resp) {\n      return resolve(resp);\n    }, function (error) {\n      return reject(error);\n    });\n  });\n}\nexport function layerURLs(props) {\n  console.log('props', props);\n\n  if (props.auth.isDev) {\n    return props.config.featureURLs_dev_edit;\n  }\n}\nexport function getSupportById(args) {\n  var id = args[0];\n  var layer = args[1];\n  var outSR = args[2];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          esriRequest = _ref2[0];\n\n      esriRequest(layer + '/query', {\n        query: {\n          where: \"OBJECTID = \" + id,\n          returnGeometry: true,\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\",\n          outSR: outSR // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function getSupportByExtent(args) {\n  return new Promise(function (resolve, reject) {\n    var extent = args[0];\n    var supportLayer = args[1];\n    var outSR = args[2];\n    loadModules([\"esri/request\"]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          esriRequest = _ref4[0];\n\n      esriRequest(supportLayer + '/query', {\n        query: {\n          geometry: JSON.stringify(extent),\n          returnGeometry: true,\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\",\n          // format\n          outSR: outSR\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n      /*     let query = new Query();\r\n      query.geometry = extent;\r\n      query.outFields = [\"*\"];\r\n      query.returnGeometry = true;\r\n        supportLayer\r\n          .queryFeatures(query)\r\n          .then(resp => resolve(resp), error => reject(error)); */\n    });\n  });\n}\nexport function getRelatedSigns(args) {\n  return new Promise(function (resolve, reject) {\n    var feature = args[0];\n    var layer = args[1];\n    loadModules([\"esri/request\"]).then(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 1),\n          esriRequest = _ref6[0];\n\n      esriRequest(layer + \"/query\", {\n        query: {\n          where: \"SUPPORTID='\" + feature.attributes.GLOBALID + \"'\",\n          orderByFields: \"SIGNORDER\",\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\" // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function getRelatedTimebands(args) {\n  var layer = args[1];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 1),\n          esriRequest = _ref8[0];\n\n      esriRequest(layer + '/query', {\n        query: {\n          where: \"SIGNID='\" + args[0].attributes.GLOBALID + \"'\",\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\" // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveSignOrder(args) {\n  var features = args[0];\n  var layer = args[1];\n  var pureFeatures = [];\n\n  for (var i = 0; i < features.length; i++) {\n    pureFeatures.push(features[i].feature);\n  }\n\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 1),\n          esriRequest = _ref10[0];\n\n      esriRequest(layer + '/applyEdits', {\n        method: 'post',\n        query: {\n          f: \"json\",\n          // format\n          \"updates\": JSON.stringify(pureFeatures)\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveSupport(args\n/*updateFeature, isNew, layer */\n) {\n  var updateFeature = args[0];\n  var isNew = args[1];\n  var layer = args[2];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 1),\n          esriRequest = _ref12[0];\n\n      var set = null;\n\n      if (isNew) {\n        set = {\n          f: \"json\",\n          \"adds\": JSON.stringify([updateFeature])\n        };\n      } else {\n        set = {\n          f: \"json\",\n          \"updates\": JSON.stringify([updateFeature])\n        };\n      }\n\n      esriRequest(layer + '/applyEdits', {\n        method: 'post',\n        query: set\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveTimebands(args) {\n  var updateTimebands = args[0].editBands; //array\n\n  var newTimebands = args[0].newBands; //array\n\n  var deleteTimebands = args[0].deleteBands;\n  var timebandLayer = args[1].timebands + \"/applyEdits\";\n  var bandSet = {\n    f: \"json\",\n    \"adds\": JSON.stringify(newTimebands),\n    \"updates\": JSON.stringify(updateTimebands),\n    \"deletes\": JSON.stringify(deleteTimebands)\n  };\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 1),\n          esriRequest = _ref14[0];\n\n      esriRequest(timebandLayer, {\n        method: 'post',\n        query: bandSet\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveSign(args) {\n  var updateSignFeature = args[0].sign;\n  var isNew = args[1];\n  var signLayer = args[2].signs + \"/applyEdits\";\n  var signSet = null;\n\n  if (isNew) {\n    signSet = {\n      f: \"json\",\n      \"adds\": JSON.stringify([updateSignFeature])\n    };\n  } else {\n    signSet = {\n      f: \"json\",\n      \"updates\": JSON.stringify([updateSignFeature])\n    };\n  }\n\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 1),\n          esriRequest = _ref16[0];\n\n      esriRequest(signLayer, {\n        method: 'post',\n        query: signSet\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    }); // end of then for loadModules\n  }); //end of promise\n} // end of function\n\nexport function superQuery(args) {\n  var where = args[0];\n  var geom = args[1];\n  var layer = args[2];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref17) {\n      var _ref18 = _slicedToArray(_ref17, 1),\n          esriRequest = _ref18[0];\n\n      esriRequest(layer + '/query', {\n        query: {\n          geometry: JSON.stringify(geom),\n          where: where,\n          returnGeometry: true,\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\",\n          // format\n          outSR: 4326\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function projectGeometry(args) {\n  var coords = args[0]; //array\n\n  var layer = args[1];\n  var inSR = args[2];\n  var outSR = args[3];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/tasks/GeometryService\", \"esri/tasks/support/ProjectParameters\", \"esri/geometry/Point\", \"esri/geometry/SpatialReference\"]).then(function (_ref19) {\n      var _ref20 = _slicedToArray(_ref19, 4),\n          GeometryService = _ref20[0],\n          ProjectParameters = _ref20[1],\n          Point = _ref20[2],\n          SpatialReference = _ref20[3];\n\n      var outS = new SpatialReference(outSR);\n      var gS = new GeometryService({\n        url: layer\n      });\n      var inSpatRef = new SpatialReference(inSR);\n      var geoms = [];\n\n      for (var i = 0; i < coords.length; i++) {\n        var pt = new Point({\n          latitude: coords[i].y,\n          longitude: coords[i].x,\n          spatialReference: inSpatRef\n        });\n        geoms.push(pt);\n      }\n\n      var params = new ProjectParameters({\n        geometries: geoms,\n        outSpatialReference: outS\n      });\n      gS.project(params).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function pointToExtentSaga(args) {\n  var view_width = args[0];\n  var view_extent_width = args[1];\n  var view_spatialReference = args[2];\n  var point = args[3];\n  var toleranceInPixel = args[4];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/geometry/Extent\", \"esri/geometry/support/webMercatorUtils\"]).then(function (_ref21) {\n      var _ref22 = _slicedToArray(_ref21, 2),\n          Extent = _ref22[0],\n          webMercatorUtils = _ref22[1];\n\n      try {\n        var mercPoint = null;\n\n        if (point.spatialReference) {\n          if (point.spatialReference.wkid === 102100) {\n            mercPoint = point;\n          } else {\n            mercPoint = webMercatorUtils.geographicToWebMercator(point);\n          }\n        } else {\n          mercPoint = webMercatorUtils.geographicToWebMercator(point);\n        } //calculate map coords represented per pixel\n\n\n        var pixelWidth = view_extent_width / view_width; //calculate map coords for tolerance in pixel\n\n        var toleraceInMapCoords = toleranceInPixel * pixelWidth;\n        var ext = new Extent(mercPoint.x - toleraceInMapCoords, mercPoint.y - toleraceInMapCoords, mercPoint.x + toleraceInMapCoords, mercPoint.y + toleraceInMapCoords, view_spatialReference);\n        resolve(ext);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  });\n}\nexport function pointToExtent(view_width, view_extent_width, view_spatialReference, point, toleranceInPixel, callback) {\n  loadModules([\"esri/geometry/Extent\"]).then(function (_ref23) {\n    var _ref24 = _slicedToArray(_ref23, 1),\n        Extent = _ref24[0];\n\n    //calculate map coords represented per pixel\n    var pixelWidth = view_extent_width / view_width; //calculate map coords for tolerance in pixel\n\n    var toleraceInMapCoords = toleranceInPixel * pixelWidth; //calculate & return computed extent\n\n    callback(new Extent(point.x - toleraceInMapCoords, point.y - toleraceInMapCoords, point.x + toleraceInMapCoords, point.y + toleraceInMapCoords, view_spatialReference));\n  });\n}\nexport function createFeatureSet(args) {\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/tasks/support/FeatureSet\"]).then(function (_ref25) {\n      var _ref26 = _slicedToArray(_ref25, 1),\n          FeatureSet = _ref26[0];\n\n      try {\n        resolve(new FeatureSet({\n          features: args[0]\n        }));\n      } catch (err) {\n        reject(err);\n      }\n    });\n  });\n}\nexport function getPointOnRouteStreetSmart(args) {\n  var point = args[0];\n  var layer = args[1];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref27) {\n      var _ref28 = _slicedToArray(_ref27, 1),\n          esriRequest = _ref28[0];\n\n      esriRequest(layer + '/getPointOnRoute', {\n        query: {\n          'x': point.geometry.x,\n          'y': point.geometry.y,\n          'inSR': 2248,\n          'outSR': 26985,\n          'searchRadius': 50,\n          'f': \"json\"\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function createTriangle(args) {\n  var point = args[0];\n  var imagePitch = args[1];\n  var imageYaw = args[2];\n  console.log('imageYaw,imagePitch :', imageYaw, imagePitch);\n\n  if (typeof point[0] == 'undefined') {\n    return;\n  }\n\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/Graphic\", \"esri/geometry/Polygon\", \"esri/symbols/SimpleFillSymbol\", \"esri/symbols/SimpleLineSymbol\", \"esri/symbols/SimpleMarkerSymbol\", \"esri/Color\"]).then(function (_ref29) {\n      var _ref30 = _slicedToArray(_ref29, 6),\n          Graphic = _ref30[0],\n          Polygon = _ref30[1],\n          SimpleFillSymbol = _ref30[2],\n          SimpleLineSymbol = _ref30[3],\n          SimpleMarkerSymbol = _ref30[4],\n          Color = _ref30[5];\n\n      try {\n        var pictureMarkerSymbol = new SimpleMarkerSymbol({\n          style: \"triangle\",\n          color: \"blue\",\n          size: \"10px\"\n        });\n        var symbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0, 0, 157, 0.0]), 2), new Color([0, 0, 157, 0.25]));\n        pictureMarkerSymbol.angle = imageYaw;\n        var radius = 45;\n        radius = radius - Math.abs(imagePitch) / 2; // coneLayer.removeAll();\n\n        var bob = new LatLon(point[0].y, point[0].x);\n        var portAzimuth = imageYaw - 55;\n\n        if (portAzimuth < 0) {\n          portAzimuth += 360;\n        }\n\n        var starboardAzimuth = imageYaw + 55;\n\n        if (starboardAzimuth > 360) {\n          starboardAzimuth -= 360;\n        }\n\n        var portPoint = bob.destinationPoint(radius, portAzimuth);\n        var starboardPoint = bob.destinationPoint(radius, starboardAzimuth);\n        var polygonJson = {\n          \"rings\": [[[point[0].x, point[0].y], [portPoint.lon, portPoint.lat], [starboardPoint.lon, starboardPoint.lat]]],\n          \"spatialReference\": {\n            \"wkid\": 4326\n          }\n        };\n        symbol.color.a = .5 - imagePitch * .01 / 2;\n        var polygon = new Polygon(polygonJson);\n        var graf = new Graphic(polygon, symbol); // coneLayer.add(graf);\n\n        var pt = new Graphic(point[0], pictureMarkerSymbol); //  coneLayer.add(pt);\n\n        resolve([graf, pt]);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }); //   mp = point;\n\n  /*\r\n  \r\n  \r\n  */\n}\n; //NON-ESRI DATA CALLS\n\nexport function muttGenerator(muttQueryString) {\n  return _regeneratorRuntime.wrap(function muttGenerator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(getMUTCDS, [muttQueryString]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getMUTCDS(_x) {\n  return _getMUTCDS.apply(this, arguments);\n}\n\nfunction _getMUTCDS() {\n  _getMUTCDS = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(args) {\n    var baseUrl, response, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd?code=\" + args[0];\n            _context2.prev = 1;\n            _context2.next = 4;\n            return fetch(baseUrl);\n\n          case 4:\n            response = _context2.sent;\n\n            if (!response.ok) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 8;\n            return response.json();\n\n          case 8:\n            results = _context2.sent;\n            return _context2.abrupt(\"return\", results);\n\n          case 10:\n            _context2.next = 16;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error('Something went wrong');\n            throw new Error('Bad stuff happened.');\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n  return _getMUTCDS.apply(this, arguments);\n}\n\nexport function getAllMUTCDS() {\n  return _getAllMUTCDS.apply(this, arguments);\n}\n\nfunction _getAllMUTCDS() {\n  _getAllMUTCDS = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var baseUrl, response, results;\n    return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd\";\n            _context3.prev = 1;\n            _context3.next = 4;\n            return fetch(baseUrl);\n\n          case 4:\n            response = _context3.sent;\n\n            if (!response.ok) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 8;\n            return response.json();\n\n          case 8:\n            results = _context3.sent;\n            return _context3.abrupt(\"return\", results);\n\n          case 10:\n            _context3.next = 16;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.error('Something went wrong');\n            throw new Error('Bad stuff happened.');\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2, null, [[1, 12]]);\n  }));\n  return _getAllMUTCDS.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\utils\\JSAPI.js"],"names":["muttGenerator","loadModules","call","LatLon","getGroups","args","portal","title","queryParams","query","num","Promise","resolve","reject","queryGroups","then","resp","error","layerURLs","props","console","log","auth","isDev","config","featureURLs_dev_edit","getSupportById","id","layer","outSR","esriRequest","where","returnGeometry","outFields","token","f","getSupportByExtent","extent","supportLayer","geometry","JSON","stringify","getRelatedSigns","feature","attributes","GLOBALID","orderByFields","getRelatedTimebands","saveSignOrder","features","pureFeatures","i","length","push","method","saveSupport","updateFeature","isNew","set","saveTimebands","updateTimebands","editBands","newTimebands","newBands","deleteTimebands","deleteBands","timebandLayer","timebands","bandSet","saveSign","updateSignFeature","sign","signLayer","signs","signSet","superQuery","geom","projectGeometry","coords","inSR","GeometryService","ProjectParameters","Point","SpatialReference","outS","gS","url","inSpatRef","geoms","pt","latitude","y","longitude","x","spatialReference","params","geometries","outSpatialReference","project","pointToExtentSaga","view_width","view_extent_width","view_spatialReference","point","toleranceInPixel","Extent","webMercatorUtils","mercPoint","wkid","geographicToWebMercator","pixelWidth","toleraceInMapCoords","ext","pointToExtent","callback","createFeatureSet","FeatureSet","err","getPointOnRouteStreetSmart","createTriangle","imagePitch","imageYaw","Graphic","Polygon","SimpleFillSymbol","SimpleLineSymbol","SimpleMarkerSymbol","Color","pictureMarkerSymbol","style","color","size","symbol","STYLE_SOLID","angle","radius","Math","abs","bob","portAzimuth","starboardAzimuth","portPoint","destinationPoint","starboardPoint","polygonJson","lon","lat","a","polygon","graf","muttQueryString","getMUTCDS","baseUrl","fetch","response","ok","json","results","Error","getAllMUTCDS"],"mappings":"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","sourcesContent":["import {loadModules} from 'esri-loader';\r\nimport {call} from 'redux-saga/effects';\r\nimport LatLon from './geodesy/latlon-spherical';\r\n\r\nexport function getGroups(args) {\r\n    const portal = args[0];\r\n    const title = args[1];\r\n    let queryParams = {\r\n\r\n        query: \"title:\" + title,\r\n        num: 50\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n        portal\r\n            .queryGroups(queryParams)\r\n            .then(resp => resolve(resp), error => reject(error));\r\n\r\n    })\r\n}\r\n\r\nexport function layerURLs(props){\r\n    console.log('props', props)\r\n    if(props.auth.isDev){\r\n        return props.config.featureURLs_dev_edit;\r\n    }\r\n}\r\n\r\nexport function getSupportById(args) {\r\n    const id = args[0];\r\n    const layer = args[1];\r\n    const outSR = args[2];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/query', {\r\n                query: {\r\n                    where: \"OBJECTID = \" + id,\r\n                    returnGeometry: true,\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\",\r\n                    outSR: outSR // format\r\n\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n\r\n        });\r\n    })\r\n\r\n}\r\n\r\nexport function getSupportByExtent(args) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const extent = args[0];\r\n\r\n        const supportLayer = args[1];\r\n\r\n        const outSR = args[2];\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(supportLayer + '/query', {\r\n                query: {\r\n                    geometry: JSON.stringify(extent),\r\n                    returnGeometry: true,\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\", // format\r\n                    outSR: outSR\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n\r\n            /*     let query = new Query();\r\n            query.geometry = extent;\r\n            query.outFields = [\"*\"];\r\n            query.returnGeometry = true;\r\n\r\n            supportLayer\r\n                .queryFeatures(query)\r\n                .then(resp => resolve(resp), error => reject(error)); */\r\n        });\r\n\r\n    })\r\n}\r\n\r\nexport function getRelatedSigns(args) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const feature = args[0]\r\n\r\n        const layer = args[1]\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + \"/query\", {\r\n                query: {\r\n                    where: \"SUPPORTID='\" + feature.attributes.GLOBALID + \"'\",\r\n                    orderByFields: \"SIGNORDER\",\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\" // format\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n\r\n        });\r\n    })\r\n}\r\n\r\nexport function getRelatedTimebands(args) {\r\n    const layer = args[1]\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/query', {\r\n                query: {\r\n                    where: \"SIGNID='\" + args[0].attributes.GLOBALID + \"'\",\r\n\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\" // format\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function saveSignOrder(args) {\r\n    const features = args[0];\r\n    const layer = args[1];\r\n    let pureFeatures = [];\r\n    for (let i = 0; i < features.length; i++) {\r\n        pureFeatures.push(features[i].feature)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/applyEdits', {\r\n                method: 'post',\r\n                query: {\r\n                    f: \"json\", // format\r\n                    \"updates\": JSON.stringify(pureFeatures)\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function saveSupport(args/*updateFeature, isNew, layer */) {\r\n    const updateFeature = args[0];\r\n\r\n    const isNew = args[1];\r\n    const layer = args[2];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            let set = null;\r\n            if (isNew) {\r\n                set = {\r\n                    f: \"json\",\r\n                    \"adds\": JSON.stringify([updateFeature])\r\n                };\r\n            } else {\r\n                set = {\r\n                    f: \"json\",\r\n                    \"updates\": JSON.stringify([updateFeature])\r\n                }\r\n            }\r\n\r\n            esriRequest(layer + '/applyEdits', {\r\n                method: 'post',\r\n                query: set\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function saveTimebands(args) {\r\n    const updateTimebands = args[0].editBands; //array\r\n    const newTimebands = args[0].newBands; //array\r\n    const deleteTimebands = args[0].deleteBands;\r\n    const timebandLayer = args[1].timebands + \"/applyEdits\";\r\n\r\n    const bandSet = {\r\n        f: \"json\",\r\n        \"adds\": JSON.stringify(newTimebands),\r\n        \"updates\": JSON.stringify(updateTimebands),\r\n        \"deletes\": JSON.stringify(deleteTimebands)\r\n    };\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(timebandLayer, {\r\n                method: 'post',\r\n                query: bandSet\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n}\r\n\r\nexport function saveSign(args) {\r\n\r\n    const updateSignFeature = args[0].sign;\r\n\r\n    const isNew = args[1];\r\n    const signLayer = args[2].signs + \"/applyEdits\";\r\n\r\n    let signSet = null;\r\n\r\n    if (isNew) {\r\n\r\n        signSet = {\r\n            f: \"json\",\r\n            \"adds\": JSON.stringify([updateSignFeature])\r\n        };\r\n    } else {\r\n        signSet = {\r\n            f: \"json\",\r\n            \"updates\": JSON.stringify([updateSignFeature])\r\n        };\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(signLayer, {\r\n                method: 'post',\r\n                query: signSet\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n\r\n        }) // end of then for loadModules\r\n    }) //end of promise\r\n\r\n} // end of function\r\n\r\nexport function superQuery(args) {\r\n    const where = args[0];\r\n    const geom = args[1];\r\n    const layer = args[2];\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/query', {\r\n                query: {\r\n                    geometry: JSON.stringify(geom),\r\n                    where: where,\r\n                    returnGeometry: true,\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\", // format\r\n                    outSR: 4326\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n\r\n        });\r\n\r\n    })\r\n}\r\n\r\nexport function projectGeometry(args) {\r\n\r\n    const coords = args[0]; //array\r\n\r\n    const layer = args[1];\r\n    const inSR = args[2];\r\n    const outSR = args[3]\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/tasks/GeometryService\", \"esri/tasks/support/ProjectParameters\", \"esri/geometry/Point\", \"esri/geometry/SpatialReference\"]).then(([GeometryService, ProjectParameters, Point, SpatialReference]) => {\r\n            const outS = new SpatialReference(outSR);\r\n\r\n            const gS = new GeometryService({url: layer});\r\n            const inSpatRef = new SpatialReference(inSR);\r\n\r\n            let geoms = [];\r\n\r\n            for (let i = 0; i < coords.length; i++) {\r\n                const pt = new Point({latitude: coords[i].y, longitude: coords[i].x, spatialReference: inSpatRef})\r\n\r\n                geoms.push(pt)\r\n            }\r\n\r\n            const params = new ProjectParameters({geometries: geoms, outSpatialReference: outS})\r\n\r\n            gS\r\n                .project(params)\r\n                .then(resp => resolve(resp), error => reject(error))\r\n\r\n        })\r\n    })\r\n}\r\n\r\nexport function pointToExtentSaga(args) {\r\n\r\n    const view_width = args[0];\r\n    const view_extent_width = args[1];\r\n    const view_spatialReference = args[2];\r\n\r\n    const point = args[3];\r\n    const toleranceInPixel = args[4];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/geometry/Extent\", \"esri/geometry/support/webMercatorUtils\"]).then(([Extent, webMercatorUtils]) => {\r\n\r\n            try {\r\n\r\n                let mercPoint = null;\r\n\r\n                if (point.spatialReference) {\r\n                    if (point.spatialReference.wkid === 102100) {\r\n                        mercPoint = point;\r\n                    } else {\r\n                        mercPoint = webMercatorUtils.geographicToWebMercator(point)\r\n                    }\r\n\r\n                } else {\r\n                    mercPoint = webMercatorUtils.geographicToWebMercator(point)\r\n                }\r\n                //calculate map coords represented per pixel\r\n                let pixelWidth = view_extent_width / view_width;\r\n\r\n                //calculate map coords for tolerance in pixel\r\n                let toleraceInMapCoords = toleranceInPixel * pixelWidth;\r\n                const ext = new Extent(mercPoint.x - toleraceInMapCoords, mercPoint.y - toleraceInMapCoords, mercPoint.x + toleraceInMapCoords, mercPoint.y + toleraceInMapCoords, view_spatialReference);\r\n                resolve(ext)\r\n            } catch (error) {\r\n\r\n                reject(error)\r\n            }\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function pointToExtent(view_width, view_extent_width, view_spatialReference, point, toleranceInPixel, callback) {\r\n\r\n    loadModules([\"esri/geometry/Extent\"]).then(([Extent]) => {\r\n\r\n        //calculate map coords represented per pixel\r\n        let pixelWidth = view_extent_width / view_width;\r\n\r\n        //calculate map coords for tolerance in pixel\r\n        let toleraceInMapCoords = toleranceInPixel * pixelWidth;\r\n        //calculate & return computed extent\r\n\r\n        callback(new Extent(point.x - toleraceInMapCoords, point.y - toleraceInMapCoords, point.x + toleraceInMapCoords, point.y + toleraceInMapCoords, view_spatialReference))\r\n\r\n    })\r\n\r\n}\r\n\r\nexport function createFeatureSet(args) {\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/tasks/support/FeatureSet\"]).then(([FeatureSet]) => {\r\n            try {\r\n                resolve(new FeatureSet({features: args[0]}))\r\n            } catch (err) {\r\n                reject(err)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function getPointOnRouteStreetSmart(args) {\r\n\r\n    const point = args[0];\r\n\r\n    const layer = args[1];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/getPointOnRoute', {\r\n                query: {\r\n                    'x': point.geometry.x,\r\n                    'y': point.geometry.y,\r\n                    'inSR': 2248,\r\n                    'outSR': 26985,\r\n                    'searchRadius': 50,\r\n                    'f': \"json\"\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n}\r\n\r\nexport function createTriangle(args) {\r\n    const point = args[0]\r\n    const imagePitch = args[1];\r\n    const imageYaw = args[2];\r\n    console.log('imageYaw,imagePitch :', imageYaw, imagePitch);\r\n    if (typeof point[0] == 'undefined') {\r\n        return\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\r\n            \"esri/Graphic\",\r\n            \"esri/geometry/Polygon\",\r\n            \"esri/symbols/SimpleFillSymbol\",\r\n            \"esri/symbols/SimpleLineSymbol\",\r\n            \"esri/symbols/SimpleMarkerSymbol\",\r\n            \"esri/Color\"\r\n        ]).then(([\r\n            Graphic,\r\n            Polygon,\r\n            SimpleFillSymbol,\r\n            SimpleLineSymbol,\r\n            SimpleMarkerSymbol,\r\n            Color\r\n        ]) => {\r\n            try {\r\n                let pictureMarkerSymbol = new SimpleMarkerSymbol({style: \"triangle\", color: \"blue\", size: \"10px\"});\r\n                let symbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0, 0, 157, 0.0]), 2), new Color([0, 0, 157, 0.25]));\r\n\r\n                pictureMarkerSymbol.angle = imageYaw;\r\n                let radius = 45;\r\n\r\n                radius = radius - (Math.abs(imagePitch) / 2);\r\n\r\n                // coneLayer.removeAll();\r\n\r\n                let bob = new LatLon(point[0].y, point[0].x);\r\n\r\n                let portAzimuth = imageYaw - 55;\r\n                if (portAzimuth < 0) {\r\n                    portAzimuth += 360;\r\n                }\r\n                let starboardAzimuth = imageYaw + 55;\r\n                if (starboardAzimuth > 360) {\r\n                    starboardAzimuth -= 360;\r\n                }\r\n                let portPoint = bob.destinationPoint(radius, portAzimuth);\r\n                let starboardPoint = bob.destinationPoint(radius, starboardAzimuth);\r\n\r\n                const polygonJson = {\r\n                    \"rings\": [\r\n                        [\r\n                            [\r\n                                point[0].x, point[0].y\r\n                            ],\r\n                            [\r\n                                portPoint.lon, portPoint.lat\r\n                            ],\r\n                            [starboardPoint.lon, starboardPoint.lat]\r\n                        ]\r\n                    ],\r\n                    \"spatialReference\": {\r\n                        \"wkid\": 4326\r\n                    }\r\n                };\r\n                symbol.color.a = .5 - (imagePitch * .01) / 2;\r\n                let polygon = new Polygon(polygonJson);\r\n                let graf = new Graphic(polygon, symbol)\r\n                // coneLayer.add(graf);\r\n                let pt = new Graphic(point[0], pictureMarkerSymbol);\r\n                //  coneLayer.add(pt);\r\n                resolve([graf, pt])\r\n            } catch (err) {\r\n                reject(err)\r\n            }\r\n\r\n        })\r\n    })\r\n    //   mp = point;\r\n\r\n    /*\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n};\r\n\r\n//NON-ESRI DATA CALLS\r\n\r\nexport function * muttGenerator(muttQueryString) {\r\n    yield call(getMUTCDS, [muttQueryString])\r\n}\r\n\r\nexport async function getMUTCDS(args) {\r\n    const baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd?code=\" + args[0];\r\n\r\n    try {\r\n        const response = await fetch(baseUrl);\r\n        if (response.ok) {\r\n            const results = await response.json();\r\n            return results;\r\n        }\r\n    } catch (err) {\r\n        console.error('Something went wrong');\r\n        throw new Error('Bad stuff happened.');\r\n    }\r\n}\r\n\r\nexport async function getAllMUTCDS() {\r\n    const baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd\"\r\n\r\n    try {\r\n        const response = await fetch(baseUrl);\r\n        if (response.ok) {\r\n            const results = await response.json();\r\n            return results;\r\n        }\r\n    } catch (err) {\r\n        console.error('Something went wrong');\r\n        throw new Error('Bad stuff happened.');\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}