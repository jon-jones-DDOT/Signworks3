{"ast":null,"code":"import { parkingtypesigns, mphSigns } from \"../../../SignworksJSON\"; // newCode is the mutcd.code that is being checked signs -  an array of signs on\n// the signpost each sign should have a property called MUTCD that has the info\n// from the sign catalog\n\nexport function MutcdDuplicate(newCode, signs) {\n  var isDupe = false;\n\n  for (var i = 0; i < signs.length; i++) {\n    if (signs[i].MUTCD.code === newCode) {\n      isDupe = true;\n    }\n  }\n\n  console.log('isDupe :', isDupe);\n  return isDupe;\n}\nexport function isSpeedLimit(mutt) {\n  mutt = mutt.toUpperCase();\n  var speedy = mphSigns.find(function (code) {\n    if (code === mutt) {\n      return mutt;\n    }\n  });\n  console.log('speedy :', speedy);\n\n  if (speedy) {\n    return \"\";\n  } else return \"disabled\";\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\Signs\\SignValidations.js"],"names":["parkingtypesigns","mphSigns","MutcdDuplicate","newCode","signs","isDupe","i","length","MUTCD","code","console","log","isSpeedLimit","mutt","toUpperCase","speedy","find"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,QAA1B,QAAyC,wBAAzC,C,CAEA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,KAAjC,EAAwC;AAE3C,MAAIC,MAAM,GAAG,KAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,QAAIF,KAAK,CAACE,CAAD,CAAL,CAASE,KAAT,CAAeC,IAAf,KAAwBN,OAA5B,EAAqC;AACjCE,MAAAA,MAAM,GAAG,IAAT;AACH;AACJ;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,MAAxB;AACA,SAAOA,MAAP;AACH;AAED,OAAO,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC/BA,EAAAA,IAAI,GAAGA,IAAI,CAACC,WAAL,EAAP;AACA,MAAMC,MAAM,GAAGd,QAAQ,CAACe,IAAT,CAAc,UAACP,IAAD,EAAU;AAEnC,QAAIA,IAAI,KAAKI,IAAb,EAAmB;AACf,aAAOA,IAAP;AACH;AACJ,GALc,CAAf;AAMAH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,MAAxB;;AACJ,MAAIA,MAAJ,EAAW;AACP,WAAO,EAAP;AACH,GAFD,MAII,OAAO,UAAP;AAEH","sourcesContent":["import {parkingtypesigns, mphSigns} from \"../../../SignworksJSON\";\r\n\r\n// newCode is the mutcd.code that is being checked signs -  an array of signs on\r\n// the signpost each sign should have a property called MUTCD that has the info\r\n// from the sign catalog\r\nexport function MutcdDuplicate(newCode, signs) {\r\n\r\n    let isDupe = false;\r\n    for (let i = 0; i < signs.length; i++) {\r\n        if (signs[i].MUTCD.code === newCode) {\r\n            isDupe = true;\r\n        }\r\n    }\r\n    console.log('isDupe :', isDupe);\r\n    return isDupe\r\n}\r\n\r\nexport function isSpeedLimit(mutt) {\r\n    mutt = mutt.toUpperCase();\r\n    const speedy = mphSigns.find((code) => {\r\n       \r\n        if (code === mutt) {\r\n            return mutt;\r\n        }\r\n    })\r\n    console.log('speedy :', speedy);\r\nif (speedy){\r\n    return \"\"\r\n}\r\nelse\r\n    return \"disabled\";\r\n\r\n}"]},"metadata":{},"sourceType":"module"}