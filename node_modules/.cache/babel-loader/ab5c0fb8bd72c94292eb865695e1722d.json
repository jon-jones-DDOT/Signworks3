{"ast":null,"code":"// Copyright 2019 Esri\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//     http://www.apache.org/licenses/LICENSE-2.0\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.​\nfunction status(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return Promise.resolve(response);\n  } else {\n    return Promise.reject(new Error(response.statusText));\n  }\n}\n\nfunction handleResponse(handleAs, response) {\n  switch (handleAs) {\n    case \"text\":\n      return response.text();\n\n    default:\n      return response.json();\n  }\n}\n\nfunction objectToUrlSearchParams(obj) {\n  var body = new URLSearchParams();\n\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      body.append(prop, obj[prop]);\n    }\n  } // add f=json if not included\n\n\n  if (!body.has(\"f\")) {\n    body.append(\"f\", \"json\");\n  }\n\n  return body.toString();\n}\n\nfunction getHeaders(isFormData) {\n  var headers = {};\n\n  if (!isFormData) {\n    headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\n  }\n\n  return new Headers(headers);\n}\n\nfunction getRequestBody(data, isFormData) {\n  // if formdata, make formdata\n  if (isFormData) {\n    return this.objectToFormData(data);\n  } // Not formdata, make url param\n\n\n  return objectToUrlSearchParams(data);\n}\n/**\r\n * Make a request using fetch()\r\n * @param  { Object } params Object containing key/value parameters to pass to fetch()\r\n * @return { Promise}        Promise returned by fetch()\r\n */\n\n\nexport function makeRequest(params) {\n  return new Promise(function (resolve, reject) {\n    var url = params.url;\n    var data = params.data || {};\n    var headers = getHeaders(params.isFormData);\n    var options = {\n      method: params.method || \"get\",\n      headers: headers\n    };\n\n    if (!params.hideCredentials) {\n      options.credentials = \"include\";\n    }\n\n    var body = getRequestBody(data, params.isFormData);\n\n    if (options.method === \"get\") {\n      url = \"\".concat(url, \"?\").concat(body);\n    } else {\n      options.body = body;\n    }\n\n    fetch(url, options).then(status).then(handleResponse.bind(null, params.handleAs)).then(function (data) {\n      // Handle successful requests that are actually errors...\n      if (data.error) {\n        reject(data.error);\n        return;\n      }\n\n      resolve(data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\services\\request.js"],"names":["status","response","Promise","resolve","reject","Error","statusText","handleResponse","handleAs","text","json","objectToUrlSearchParams","obj","body","URLSearchParams","prop","hasOwnProperty","append","has","toString","getHeaders","isFormData","headers","Headers","getRequestBody","data","objectToFormData","makeRequest","params","url","options","method","hideCredentials","credentials","fetch","then","bind","error","catch"],"mappings":"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","sourcesContent":["// Copyright 2019 Esri\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.​\r\n\r\nfunction status(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return Promise.resolve(response);\r\n  } else {\r\n    return Promise.reject(new Error(response.statusText));\r\n  }\r\n}\r\n\r\nfunction handleResponse(handleAs, response) {\r\n  switch (handleAs) {\r\n    case \"text\":\r\n      return response.text();\r\n    default:\r\n      return response.json();\r\n  }\r\n}\r\n\r\nfunction objectToUrlSearchParams(obj) {\r\n  const body = new URLSearchParams();\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      body.append(prop, obj[prop]);\r\n    }\r\n  }\r\n\r\n  // add f=json if not included\r\n  if (!body.has(\"f\")) {\r\n    body.append(\"f\", \"json\");\r\n  }\r\n\r\n  return body.toString();\r\n}\r\n\r\nfunction getHeaders(isFormData) {\r\n  const headers = {};\r\n\r\n  if (!isFormData) {\r\n    headers[\"content-type\"] = \"application/x-www-form-urlencoded\";\r\n  }\r\n\r\n  return new Headers(headers);\r\n}\r\n\r\nfunction getRequestBody(data, isFormData) {\r\n  // if formdata, make formdata\r\n  if (isFormData) {\r\n    return this.objectToFormData(data);\r\n  }\r\n\r\n  // Not formdata, make url param\r\n  return objectToUrlSearchParams(data);\r\n}\r\n\r\n/**\r\n * Make a request using fetch()\r\n * @param  { Object } params Object containing key/value parameters to pass to fetch()\r\n * @return { Promise}        Promise returned by fetch()\r\n */\r\nexport function makeRequest(params) {\r\n  return new Promise((resolve, reject) => {\r\n    let url = params.url;\r\n    const data = params.data || {};\r\n    const headers = getHeaders(params.isFormData);\r\n    const options = {\r\n      method: params.method || \"get\",\r\n      headers\r\n    };\r\n\r\n    if (!params.hideCredentials) {\r\n      options.credentials = \"include\";\r\n    }\r\n\r\n    let body = getRequestBody(data, params.isFormData);\r\n\r\n    if (options.method === \"get\") {\r\n      url = `${url}?${body}`;\r\n    } else {\r\n      options.body = body;\r\n    }\r\n\r\n    fetch(url, options)\r\n      .then(status)\r\n      .then(handleResponse.bind(null, params.handleAs))\r\n      .then(function(data) {\r\n        // Handle successful requests that are actually errors...\r\n        if (data.error) {\r\n          reject(data.error);\r\n          return;\r\n        }\r\n        resolve(data);\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}