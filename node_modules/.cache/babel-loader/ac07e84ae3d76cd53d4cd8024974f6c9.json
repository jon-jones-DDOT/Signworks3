{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(setSelectSupport),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLayers);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { getSupportById } from '../../utils/JSAPI'; //WORKER\n// WORKER //\n\nfunction setSelectSupport(action) {\n  var config;\n  return _regeneratorRuntime.wrap(function setSelectSupport$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getSupportById);\n\n        case 3:\n          config = _context.sent;\n          _context.next = 6;\n          return put({\n            type: mapTypes.SET_SELECTED_SUPPORT,\n            payload: 'feature'\n          });\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: config/fetchConfig, ', _context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n} // WATCHER //\n\n\nexport function watchLayers() {\n  return _regeneratorRuntime.wrap(function watchLayers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.MAP_CLICKED, setSelectSupport);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_map.js"],"names":["setSelectSupport","watchLayers","call","put","takeLatest","types","mapTypes","getSupportById","action","config","type","SET_SELECTED_SUPPORT","payload","console","log","MAP_CLICKED"],"mappings":";;;;yBAWUA,gB;;;yBAkBOC,W;;AA1BjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,iBAAlC;AACA,SAAQC,cAAR,QAA6B,mBAA7B,C,CAGA;AAEA;;AACA,SAAUP,gBAAV,CAA4BQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGuB,iBAAMN,IAAI,CAACK,cAAD,CAAV;;AAHvB;AAGcE,UAAAA,MAHd;AAAA;AAMQ,iBAAMN,GAAG,CAAC;AACNO,YAAAA,IAAI,EAAEJ,QAAQ,CAACK,oBADT;AAENC,YAAAA,OAAO,EAAE;AAFH,WAAD,CAAT;;AANR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYQC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAiBA;;;AACA,OAAO,SAAUb,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMG,UAAU,CAACE,QAAQ,CAACS,WAAV,EAAuBf,gBAAvB,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\r\n\r\n\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { types as mapTypes } from '../reducers/map';\r\nimport {getSupportById} from '../../utils/JSAPI';\r\n\r\n\r\n//WORKER\r\n\r\n// WORKER //\r\nfunction* setSelectSupport (action) {\r\n    try {\r\n        // call API to fetch config\r\n        const config = yield call(getSupportById);\r\n\r\n        // Put config in store\r\n        yield put({\r\n            type: mapTypes.SET_SELECTED_SUPPORT,\r\n            payload: 'feature'\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: config/fetchConfig, ', e);\r\n    }\r\n}\r\n\r\n\r\n// WATCHER //\r\nexport function* watchLayers() {\r\n    yield takeLatest(mapTypes.MAP_CLICKED, setSelectSupport);\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}