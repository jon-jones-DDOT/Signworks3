{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport var types = {\n  SET_SUPPORT_MARKER_RG: \"SET_SUPPORT_MARKER_RG\",\n  QUERY_SUPERQUERY_S: \"QUERY_SUPERQUERY_S\",\n  SET_QUERY_RESULTS_RG: \"SET_QUERY_RESULTS_RG\",\n  REMOVE_QUERY_RESULTS_RG: \"REMOVE_QUERY_RESULTS_RG\",\n  REMOVE_QUERY_GRAPHICS_RG: 'REMOVE_QUERY_GRAPHICS_RG',\n  SHOW_STREETSMART_VIEWER_RG: 'SHOW_STREETSMART_VIEWER_RG',\n  START_STREETSMART_VIEWER_S: \"START_STREETSMART_VIEWER_S\",\n  CLOSE_STREETSMART_VIEWER_RG: \"CLOSE_STREETSMART_VIEWER_RG\",\n  GET_NEW_CONE_S: \"GET_NEW_CONE\",\n  SET_NEW_CONE_RG: \"SET_NEW_CONE\",\n  SET_POINT_BUFFER_RG: \"SET_POINT_BUFFER_RG\",\n  SET_MAP_CLICK_MODE_RG: \"SET_MAP_CLICK_MODE_RG\",\n  NEED_SUPPORT_REFRESH_RG: \"NEED_SUPPORT_REFRESH_RG\"\n};\nexport var mapModes = {\n  SELECT_SUPPORT_MODE: 'SELECT_SUPPORT_MODE',\n  ADD_SUPPORT_MODE: 'ADD_SUPPORT_MODE',\n  DRAW_MODE: \"DRAW_MODE\" // REDUCERS //\n\n};\nexport var initialState = {\n  selSupportGeom: null,\n  queryFeatures: [],\n  showQuery: false,\n  leftVisible: false,\n  editMode: null,\n  ssInputGeom: null,\n  ssgeoJSONselPoint: null,\n  viewWidth: null,\n  viewExtentWidth: null,\n  view_spatRef: null,\n  cursor: 'default',\n  mapClickMode: mapModes.SELECT_SUPPORT_MODE,\n  needSupRefresh: false,\n  coneGraphic: null,\n  conePointGraphic: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_SUPPORT_MARKER_RG:\n      action.payload.selSupportGeom.type = \"point\";\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_QUERY_RESULTS_RG:\n      return _objectSpread({}, state, action.payload, {\n        showQuery: true\n      });\n\n    case types.REMOVE_QUERY_RESULTS_RG:\n      return _objectSpread({}, state, {\n        queryFeatures: []\n      });\n\n    case types.REMOVE_QUERY_GRAPHICS_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_POINT_BUFFER_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SHOW_STREETSMART_VIEWER_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.CLOSE_STREETSMART_VIEWER_RG:\n      return _objectSpread({}, state, action.payload, {\n        ssEdit: false,\n        ssView: false,\n        leftVisible: false,\n        mapClickMode: mapModes.SELECT_SUPPORT_MODE,\n        cursor: 'default'\n      });\n\n    case types.SET_MAP_CLICK_MODE_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.NEED_SUPPORT_REFRESH_RG:\n      return _objectSpread({}, state, action.payload);\n\n    case types.SET_NEW_CONE_RG:\n      return _objectSpread({}, state, action.payload);\n\n    default:\n      return state;\n  }\n}); // ACTIONS //\n\nexport var actions = {\n  setSupportMarker: function setSupportMarker(selSupportGeom) {\n    return {\n      type: types.SET_SUPPORT_MARKER_RG,\n      payload: {\n        selSupportGeom: selSupportGeom\n      }\n    };\n  },\n  removeQueryResults: function removeQueryResults() {\n    return {\n      type: types.REMOVE_QUERY_RESULTS_RG,\n      payload: {}\n    };\n  },\n  closeStreetSmartViewer: function closeStreetSmartViewer() {\n    return {\n      type: types.CLOSE_STREETSMART_VIEWER_RG,\n      payload: {\n        ssOverlay: null,\n        ssgeoJSONselPoint: null\n      }\n    };\n  },\n  setPointBuffer: function setPointBuffer(viewWidth, viewExtentWidth, view_spatRef) {\n    return {\n      type: types.SET_POINT_BUFFER_RG,\n      payload: {\n        viewWidth: viewWidth,\n        viewExtentWidth: viewExtentWidth,\n        view_spatRef: view_spatRef\n      }\n    };\n  },\n  removeQueryGraphics: function removeQueryGraphics() {\n    return {\n      type: types.REMOVE_QUERY_GRAPHICS_RG,\n      payload: {\n        showQuery: false\n      }\n    };\n  },\n  querySuperQuery: function querySuperQuery(where, extent, layer) {\n    return {\n      type: types.QUERY_SUPERQUERY_S,\n      payload: {\n        where: where,\n        extent: extent,\n        layer: layer\n      }\n    };\n  },\n  setMapClickMode: function setMapClickMode(mode, cursor) {\n    return {\n      type: types.SET_MAP_CLICK_MODE_RG,\n      payload: {\n        mapClickMode: mode,\n        cursor: cursor\n      }\n    };\n  },\n  needSupportRefresh: function needSupportRefresh(needSupRefresh) {\n    return {\n      type: types.NEED_SUPPORT_REFRESH_RG,\n      payload: {\n        needSupRefresh: needSupRefresh\n      }\n    };\n  },\n  getNewCone: function getNewCone(point, pitch, yaw, layers) {\n    return {\n      type: types.GET_NEW_CONE_S,\n      payload: {\n        point: point,\n        pitch: pitch,\n        yaw: yaw,\n        layers: layers\n      }\n    };\n  },\n  startStreetSmartViewer: function startStreetSmartViewer(sel, layers, inSR, outSR, viewWidth, viewExtentWidth, view_spatRef, editMode) {\n    return {\n      type: types.START_STREETSMART_VIEWER_S,\n      payload: {\n        sel: sel,\n        layers: layers,\n        inSR: inSR,\n        outSR: outSR,\n        viewWidth: viewWidth,\n        viewExtentWidth: viewExtentWidth,\n        view_spatRef: view_spatRef,\n        editMode: editMode\n      }\n    };\n  }\n};","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\reducers\\graphic.js"],"names":["types","SET_SUPPORT_MARKER_RG","QUERY_SUPERQUERY_S","SET_QUERY_RESULTS_RG","REMOVE_QUERY_RESULTS_RG","REMOVE_QUERY_GRAPHICS_RG","SHOW_STREETSMART_VIEWER_RG","START_STREETSMART_VIEWER_S","CLOSE_STREETSMART_VIEWER_RG","GET_NEW_CONE_S","SET_NEW_CONE_RG","SET_POINT_BUFFER_RG","SET_MAP_CLICK_MODE_RG","NEED_SUPPORT_REFRESH_RG","mapModes","SELECT_SUPPORT_MODE","ADD_SUPPORT_MODE","DRAW_MODE","initialState","selSupportGeom","queryFeatures","showQuery","leftVisible","editMode","ssInputGeom","ssgeoJSONselPoint","viewWidth","viewExtentWidth","view_spatRef","cursor","mapClickMode","needSupRefresh","coneGraphic","conePointGraphic","state","action","type","payload","ssEdit","ssView","actions","setSupportMarker","removeQueryResults","closeStreetSmartViewer","ssOverlay","setPointBuffer","removeQueryGraphics","querySuperQuery","where","extent","layer","setMapClickMode","mode","needSupportRefresh","getNewCone","point","pitch","yaw","layers","startStreetSmartViewer","sel","inSR","outSR"],"mappings":"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","sourcesContent":["export const types = {\r\n    SET_SUPPORT_MARKER_RG: \"SET_SUPPORT_MARKER_RG\",\r\n    QUERY_SUPERQUERY_S: \"QUERY_SUPERQUERY_S\",\r\n    SET_QUERY_RESULTS_RG: \"SET_QUERY_RESULTS_RG\",\r\n    REMOVE_QUERY_RESULTS_RG: \"REMOVE_QUERY_RESULTS_RG\",\r\n    REMOVE_QUERY_GRAPHICS_RG: 'REMOVE_QUERY_GRAPHICS_RG',\r\n    SHOW_STREETSMART_VIEWER_RG: 'SHOW_STREETSMART_VIEWER_RG',\r\n    START_STREETSMART_VIEWER_S: \"START_STREETSMART_VIEWER_S\",\r\n    CLOSE_STREETSMART_VIEWER_RG: \"CLOSE_STREETSMART_VIEWER_RG\",\r\n    GET_NEW_CONE_S: \"GET_NEW_CONE\",\r\n    SET_NEW_CONE_RG: \"SET_NEW_CONE\",\r\n    SET_POINT_BUFFER_RG: \"SET_POINT_BUFFER_RG\",\r\n    SET_MAP_CLICK_MODE_RG: \"SET_MAP_CLICK_MODE_RG\",\r\n    NEED_SUPPORT_REFRESH_RG: \"NEED_SUPPORT_REFRESH_RG\"\r\n};\r\n\r\nexport const mapModes = {\r\n    SELECT_SUPPORT_MODE: 'SELECT_SUPPORT_MODE',\r\n    ADD_SUPPORT_MODE: 'ADD_SUPPORT_MODE',\r\n    DRAW_MODE: \"DRAW_MODE\"\r\n}\r\n\r\n// REDUCERS //\r\nexport const initialState = {\r\n    selSupportGeom: null,\r\n    queryFeatures: [],\r\n    showQuery: false,\r\n    leftVisible: false,\r\n    editMode: null,\r\n    ssInputGeom: null,\r\n    ssgeoJSONselPoint: null,\r\n    viewWidth: null,\r\n    viewExtentWidth: null,\r\n    view_spatRef: null,\r\n  \r\n    cursor: 'default',\r\n    mapClickMode: mapModes.SELECT_SUPPORT_MODE,\r\n    needSupRefresh: false,\r\n    coneGraphic:null,\r\n    conePointGraphic:null\r\n}\r\n\r\nexport default(state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_SUPPORT_MARKER_RG:\r\n            action.payload.selSupportGeom.type = \"point\";\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_QUERY_RESULTS_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                showQuery: true\r\n            }\r\n        case types.REMOVE_QUERY_RESULTS_RG:\r\n            return {\r\n                ...state,\r\n                queryFeatures: []\r\n\r\n            }\r\n        case types.REMOVE_QUERY_GRAPHICS_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_POINT_BUFFER_RG:\r\n            return ({\r\n                ...state,\r\n                ...action.payload\r\n            })\r\n        case types.SHOW_STREETSMART_VIEWER_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.CLOSE_STREETSMART_VIEWER_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                ssEdit: false,\r\n                ssView: false,\r\n                leftVisible: false,\r\n                mapClickMode: mapModes.SELECT_SUPPORT_MODE,\r\n                cursor:'default'\r\n            }\r\n\r\n        case types.SET_MAP_CLICK_MODE_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.NEED_SUPPORT_REFRESH_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case types.SET_NEW_CONE_RG:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// ACTIONS //\r\nexport const actions = {\r\n    setSupportMarker: (selSupportGeom) => ({type: types.SET_SUPPORT_MARKER_RG, payload: {\r\n            selSupportGeom\r\n        }}),\r\n    removeQueryResults: () => ({type: types.REMOVE_QUERY_RESULTS_RG, payload: {}}),\r\n    closeStreetSmartViewer: () => ({type: types.CLOSE_STREETSMART_VIEWER_RG, payload: {\r\n        ssOverlay:null,\r\n        ssgeoJSONselPoint:null\r\n    }}),\r\n    setPointBuffer: (viewWidth, viewExtentWidth, view_spatRef) => ({\r\n        type: types.SET_POINT_BUFFER_RG,\r\n        payload: {\r\n            viewWidth,\r\n            viewExtentWidth,\r\n            view_spatRef\r\n        }\r\n    }),\r\n    removeQueryGraphics: () => ({\r\n        type: types.REMOVE_QUERY_GRAPHICS_RG,\r\n        payload: {\r\n            showQuery: false\r\n        }\r\n    }),\r\n    querySuperQuery: (where, extent, layer) => ({\r\n\r\n        type: types.QUERY_SUPERQUERY_S,\r\n        payload: {\r\n            where,\r\n            extent,\r\n            layer\r\n        }\r\n    }),\r\n\r\n    setMapClickMode: (mode, cursor) => ({\r\n        type: types.SET_MAP_CLICK_MODE_RG,\r\n        payload: {\r\n            mapClickMode: mode,\r\n            cursor\r\n        }\r\n    }),\r\n    needSupportRefresh: (needSupRefresh) => ({type: types.NEED_SUPPORT_REFRESH_RG, payload: {\r\n            needSupRefresh\r\n        }}),\r\n    getNewCone: (point, pitch, yaw,layers) => ({\r\n        type: types.GET_NEW_CONE_S,\r\n        payload: {\r\n            point,\r\n            pitch,\r\n            yaw,\r\n            layers\r\n        }\r\n    }),\r\n    startStreetSmartViewer: (sel, layers, inSR, outSR, viewWidth, viewExtentWidth, view_spatRef, editMode) => ({\r\n        type: types.START_STREETSMART_VIEWER_S,\r\n        payload: {\r\n            sel,\r\n            layers,\r\n            inSR,\r\n            outSR,\r\n            viewWidth,\r\n            viewExtentWidth,\r\n            view_spatRef,\r\n            editMode\r\n        }\r\n    })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}