{"ast":null,"code":"import _objectSpread from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\MAR.js\";\nimport React, { Component } from 'react';\nimport ModalWrapper from './Modals/ModalWrapper';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actions as mapActions } from '../../redux/reducers/map';\nimport { mapModes, actions as graphicActions } from '../../redux/reducers/graphic';\nimport \"./MAR.css\";\nexport var MAR =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MAR, _Component);\n\n  function MAR(props) {\n    var _this;\n\n    _classCallCheck(this, MAR);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MAR).call(this, props));\n\n    _this.addressSearch = function (evt) {\n      if (evt.which === 13) {\n        _this.props.queryMAR(_this.state.searchText);\n      }\n    };\n\n    _this.textChange = function (evt) {\n      _this.setState({\n        searchText: evt.target.value\n      });\n    };\n\n    _this.cancelClickHandler = function (evt) {\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.addressSelectHandler = function (evt) {\n      console.log('event :', evt.target.value);\n      var selectedOption = _this.props.graphic.marResults.returnDataset.Table1[evt.target.value];\n      console.log('selectedOption', selectedOption);\n\n      _this.setState({\n        selectedOpt: selectedOption\n      });\n    };\n\n    _this.GoToPointonMapButtonHandler = function (evt) {\n      console.log('evt', _this.state.selectedOpt);\n      var point = {\n        type: \"point\",\n        // autocasts as new Point()\n        x: _this.state.selectedOpt.LONGITUDE,\n        y: _this.state.selectedOpt.LATITUDE,\n        spatialReference: {\n          wkid: 102100\n        }\n      };\n\n      _this.props.zoomToSelectedPoint(point);\n    };\n\n    _this.optionMap = function (value, index, srcOp) {\n      switch (srcOp) {\n        case \"DC Place\":\n          return React.createElement(\"option\", {\n            key: \"item-\".concat(index),\n            index: index,\n            value: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, value.ALIASNAME + \" (\" + value.WARD + \")\");\n\n        case \"DC Address\":\n          return React.createElement(\"option\", {\n            key: \"item-\".concat(index),\n            index: index,\n            value: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, value.FULLADDRESS + \" (\" + value.WARD + \")\");\n\n        case \"DC Intersection\":\n          return React.createElement(\"option\", {\n            key: \"item-\".concat(index),\n            index: index,\n            value: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, value.FULLINTERSECTION + \" (\" + value.WARD + \")\");\n\n        case \"DC Block Address\":\n          return React.createElement(\"option\", {\n            key: \"item-\".concat(index),\n            index: index,\n            value: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, value.BLOCKNAME + \" (\" + value.WARD + \")\");\n      }\n    };\n\n    _this.renderDetails = function (opt) {\n      if (!opt) {\n        return;\n      } else {\n        return React.createElement(\"div\", {\n          className: \"MARresultsDetails\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, opt.ALIASNAME ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"ALIAS: \", opt.ALIASNAME) : null, opt.FULLADDRESS ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"ADDRESS:\", opt.FULLADDRESS) : null, opt.SMD ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"SMD:\", opt.SMD) : null, opt.ANC ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"ANC: \", opt.ANC, \" \") : null, opt.WARD ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"WARD:\", opt.WARD) : null, opt.VOTE_PRCNCT ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"VOTER PRECINCT:\", opt.VOTE_PRCNCT) : null, React.createElement(\"button\", {\n          onClick: _this.GoToPointonMapButtonHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Go To This Location\"));\n      }\n    };\n\n    _this.renderOptions = function () {\n      var results = _this.props.graphic.marResults;\n\n      if (!results) {\n        return React.createElement(\"select\", {\n          multiple: true,\n          className: \"MARresults\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Results Appear Here\"));\n      } else if (results.returnDataset) {\n        return React.createElement(\"select\", {\n          multiple: true,\n          className: \"MARresults\",\n          onChange: _this.addressSelectHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, _this.props.graphic.marResults.returnDataset.Table1.map(function (value, index) {\n          return _this.optionMap(value, index, results.sourceOperation);\n        }));\n      } else {\n        return React.createElement(\"select\", {\n          multiple: true,\n          className: \"MARresults\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"No Results Returned\"));\n      }\n    };\n\n    _this.state = {\n      searchText: \"\",\n      selectedOpt: null\n    };\n    return _this;\n  }\n\n  _createClass(MAR, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"MAR Query\",\n        width: 400,\n        showOk: this.props.map.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"MAR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MARCancel\",\n        title: \"Close Window\",\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"TYPE AN ADDRESS AND PRESS ENTER\"), React.createElement(\"input\", {\n        onKeyPress: this.addressSearch,\n        className: \"MARsearch\",\n        onChange: this.textChange,\n        value: this.state.searchText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), this.props.graphic.returnDataset ? this.renderOptions() : this.renderOptions(), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.renderDetails(this.state.selectedOpt))));\n    }\n  }]);\n\n  return MAR;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    map: state.map,\n    graphic: state.graphic,\n    auth: state.auth,\n    config: state.config\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(_objectSpread({}, mapActions, graphicActions), dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MAR);","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\MAR.js"],"names":["React","Component","ModalWrapper","connect","bindActionCreators","actions","mapActions","mapModes","graphicActions","MAR","props","addressSearch","evt","which","queryMAR","state","searchText","textChange","setState","target","value","cancelClickHandler","modalClicked","addressSelectHandler","console","log","selectedOption","graphic","marResults","returnDataset","Table1","selectedOpt","GoToPointonMapButtonHandler","point","type","x","LONGITUDE","y","LATITUDE","spatialReference","wkid","zoomToSelectedPoint","optionMap","index","srcOp","ALIASNAME","WARD","FULLADDRESS","FULLINTERSECTION","BLOCKNAME","renderDetails","opt","SMD","ANC","VOTE_PRCNCT","renderOptions","results","map","sourceOperation","showOk","mapStateToProps","auth","config","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,OAAO,IAAIC,UAAnB,QAAoC,0BAApC;AACA,SAAQC,QAAR,EAAkBF,OAAO,IAAIG,cAA7B,QAAkD,8BAAlD;AACA,OAAO,WAAP;AAEA,WAAaC,GAAb;AAAA;AAAA;AAAA;;AACI,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;;AADe,UAQnBC,aARmB,GAQH,UAACC,GAAD,EAAS;AACrB,UAAIA,GAAG,CAACC,KAAJ,KAAc,EAAlB,EAAsB;AAElB,cACKH,KADL,CAEKI,QAFL,CAEc,MAAKC,KAAL,CAAWC,UAFzB;AAGH;AAEJ,KAhBkB;;AAAA,UAkBnBC,UAlBmB,GAkBN,UAACL,GAAD,EAAS;AAClB,YAAKM,QAAL,CAAc;AAACF,QAAAA,UAAU,EAAEJ,GAAG,CAACO,MAAJ,CAAWC;AAAxB,OAAd;AAEH,KArBkB;;AAAA,UAuBnBC,kBAvBmB,GAuBE,UAACT,GAAD,EAAS;AAC1B,YACKF,KADL,CAEKY,YAFL,CAEkB,KAFlB,EAEyB,IAFzB;AAGH,KA3BkB;;AAAA,UA6BnBC,oBA7BmB,GA6BI,UAACX,GAAD,EAAS;AAC5BY,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,GAAG,CAACO,MAAJ,CAAWC,KAAlC;AACA,UAAMM,cAAc,GAAG,MAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,UAAnB,CAA8BC,aAA9B,CAA4CC,MAA5C,CAAmDlB,GAAG,CAACO,MAAJ,CAAWC,KAA9D,CAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,cAA9B;;AACA,YAAKR,QAAL,CAAc;AAACa,QAAAA,WAAW,EAAEL;AAAd,OAAd;AACH,KAlCkB;;AAAA,UAmCnBM,2BAnCmB,GAmCW,UAACpB,GAAD,EAAQ;AAClCY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,MAAKV,KAAL,CAAWgB,WAA9B;AACA,UAAME,KAAK,GAAG;AACVC,QAAAA,IAAI,EAAE,OADI;AACK;AACfC,QAAAA,CAAC,EAAE,MAAKpB,KAAL,CAAWgB,WAAX,CAAuBK,SAFhB;AAGVC,QAAAA,CAAC,EAAE,MAAKtB,KAAL,CAAWgB,WAAX,CAAuBO,QAHhB;AAIVC,QAAAA,gBAAgB,EAAE;AACdC,UAAAA,IAAI,EAAE;AADQ;AAJR,OAAd;;AASA,YAAK9B,KAAL,CAAW+B,mBAAX,CAA+BR,KAA/B;AACH,KA/CkB;;AAAA,UAiDnBS,SAjDmB,GAiDP,UAACtB,KAAD,EAAQuB,KAAR,EAAeC,KAAf,EAAyB;AAEjC,cAAQA,KAAR;AACI,aAAK,UAAL;AACI,iBACI;AAAQ,YAAA,GAAG,iBAAUD,KAAV,CAAX;AAA8B,YAAA,KAAK,EAAEA,KAArC;AAA4C,YAAA,KAAK,EAAEA,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2DvB,KAAK,CAACyB,SAAN,GAAkB,IAAlB,GAAyBzB,KAAK,CAAC0B,IAA/B,GAAsC,GAAjG,CADJ;;AAGJ,aAAK,YAAL;AACI,iBACI;AAAQ,YAAA,GAAG,iBAAUH,KAAV,CAAX;AAA8B,YAAA,KAAK,EAAEA,KAArC;AAA6C,YAAA,KAAK,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4DvB,KAAK,CAAC2B,WAAN,GAAoB,IAApB,GAA2B3B,KAAK,CAAC0B,IAAjC,GAAwC,GAApG,CADJ;;AAGJ,aAAK,iBAAL;AACI,iBACI;AAAQ,YAAA,GAAG,iBAAUH,KAAV,CAAX;AAA8B,YAAA,KAAK,EAAEA,KAArC;AAA6C,YAAA,KAAK,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4DvB,KAAK,CAAC4B,gBAAN,GAAyB,IAAzB,GAAgC5B,KAAK,CAAC0B,IAAtC,GAA6C,GAAzG,CADJ;;AAGJ,aAAK,kBAAL;AACI,iBACI;AAAQ,YAAA,GAAG,iBAAUH,KAAV,CAAX;AAA8B,YAAA,KAAK,EAAEA,KAArC;AAA6C,YAAA,KAAK,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4DvB,KAAK,CAAC6B,SAAN,GAAkB,IAAlB,GAAyB7B,KAAK,CAAC0B,IAA/B,GAAsC,GAAlG,CADJ;AAdR;AAmBH,KAtEkB;;AAAA,UAwEnBI,aAxEmB,GAwEH,UAACC,GAAD,EAAS;AAErB,UAAI,CAACA,GAAL,EAAU;AACN;AACH,OAFD,MAEQ;AACJ,eAAQ;AAAK,UAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACTA,GAAG,CAACN,SAAJ,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAWM,GAAG,CAACN,SAAf,CAAf,GAA6C,IADpC,EAEVM,GAAG,CAACJ,WAAJ,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAYI,GAAG,CAACJ,WAAhB,CAAjB,GAAkD,IAFxC,EAGVI,GAAG,CAACC,GAAJ,GAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAQD,GAAG,CAACC,GAAZ,CAAT,GAA8B,IAHpB,EAITD,GAAG,CAACE,GAAJ,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAASF,GAAG,CAACE,GAAb,MAAR,GAA+B,IAJtB,EAKJF,GAAG,CAACL,IAAJ,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAASK,GAAG,CAACL,IAAb,CAAV,GAAiC,IAL7B,EAMJK,GAAG,CAACG,WAAJ,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAmBH,GAAG,CAACG,WAAvB,CAAjB,GAAyD,IANrD,EAOL;AAAQ,UAAA,OAAO,EAAE,MAAKtB,2BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAPK,CAAR;AAUH;AACJ,KAxFkB;;AAAA,UA0FnBuB,aA1FmB,GA0FH,YAAM;AAClB,UAAMC,OAAO,GAAG,MAAK9C,KAAL,CAAWiB,OAAX,CAAmBC,UAAnC;;AACA,UAAI,CAAC4B,OAAL,EAAc;AAEV,eACI;AAAQ,UAAA,QAAQ,MAAhB;AAAiB,UAAA,SAAS,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ;AAMH,OARD,MAQO,IAAIA,OAAO,CAAC3B,aAAZ,EAA2B;AAC9B,eACI;AAAQ,UAAA,QAAQ,MAAhB;AAAiB,UAAA,SAAS,EAAC,YAA3B;AAAwC,UAAA,QAAQ,EAAE,MAAKN,oBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MACIb,KADJ,CAEIiB,OAFJ,CAGIC,UAHJ,CAIIC,aAJJ,CAKIC,MALJ,CAMI2B,GANJ,CAMQ,UAACrC,KAAD,EAAQuB,KAAR;AAAA,iBAAkB,MAAKD,SAAL,CAAetB,KAAf,EAAsBuB,KAAtB,EAA6Ba,OAAO,CAACE,eAArC,CAAlB;AAAA,SANR,CADL,CADJ;AAYH,OAbM,MAaA;AAEH,eACI;AAAQ,UAAA,QAAQ,MAAhB;AAAiB,UAAA,SAAS,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ;AAMH;AAEJ,KA3HkB;;AAEf,UAAK3C,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETe,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAFe;AAMlB;;AAPL;AAAA;AAAA,6BA8Ha;AACL,aACI,oBAAC,YAAD,oBAAiB,KAAKrB,KAAtB;AACI,QAAA,KAAK,EAAC,WADV;AAEI,QAAA,KAAK,EACH,GAHN;AAII,QAAA,MAAM,EAAE,KAAKA,KAAL,CAAW+C,GAAX,CAAeE,MAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,WADd;AAEI,QAAA,KAAK,EAAC,cAFV;AAGI,QAAA,OAAO,EAAE,KAAKtC,kBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CALJ,EAOI;AACI,QAAA,UAAU,EAAE,KAAKV,aADrB;AAEI,QAAA,SAAS,EAAC,WAFd;AAGI,QAAA,QAAQ,EAAE,KAAKM,UAHnB;AAII,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,UAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAaK,KAAKN,KAAL,CAAWiB,OAAX,CAAmBE,aAAnB,GACK,KAAK0B,aAAL,EADL,GAEK,KAAKA,aAAL,EAfV,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKL,aAAL,CAAmB,KAAKnC,KAAL,CAAWgB,WAA9B,CAAP,CAhBJ,CANJ,CADJ;AA2BH;AA1JL;;AAAA;AAAA,EAAyB9B,SAAzB;;AA4JA,IAAM2D,eAAe,GAAG,SAAlBA,eAAkB,CAAA7C,KAAK;AAAA,SAAK;AAAC0C,IAAAA,GAAG,EAAE1C,KAAK,CAAC0C,GAAZ;AAAiB9B,IAAAA,OAAO,EAAEZ,KAAK,CAACY,OAAhC;AAAyCkC,IAAAA,IAAI,EAAE9C,KAAK,CAAC8C,IAArD;AAA2DC,IAAAA,MAAM,EAAE/C,KAAK,CAAC+C;AAAzE,GAAL;AAAA,CAA7B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,QAAV,EAAoB;AAC3C,SAAO5D,kBAAkB,mBAClBE,UADkB,EAElBE,cAFkB,GAGtBwD,QAHsB,CAAzB;AAIH,CALD;;AAOA,eAAe7D,OAAO,CAACyD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtD,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport ModalWrapper from './Modals/ModalWrapper';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {actions as mapActions} from '../../redux/reducers/map';\r\nimport {mapModes, actions as graphicActions} from '../../redux/reducers/graphic';\r\nimport \"./MAR.css\"\r\n\r\nexport class MAR extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchText: \"\",\r\n            selectedOpt: null\r\n        }\r\n    }\r\n\r\n    addressSearch = (evt) => {\r\n        if (evt.which === 13) {\r\n\r\n            this\r\n                .props\r\n                .queryMAR(this.state.searchText)\r\n        }\r\n\r\n    }\r\n\r\n    textChange = (evt) => {\r\n        this.setState({searchText: evt.target.value});\r\n\r\n    }\r\n\r\n    cancelClickHandler = (evt) => {\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }\r\n\r\n    addressSelectHandler = (evt) => {\r\n        console.log('event :', evt.target.value);\r\n        const selectedOption = this.props.graphic.marResults.returnDataset.Table1[evt.target.value];\r\n        console.log('selectedOption', selectedOption)\r\n        this.setState({selectedOpt: selectedOption})\r\n    }\r\n    GoToPointonMapButtonHandler = (evt) =>{\r\n        console.log('evt', this.state.selectedOpt)\r\n        const point = {\r\n            type: \"point\", // autocasts as new Point()\r\n            x: this.state.selectedOpt.LONGITUDE,\r\n            y: this.state.selectedOpt.LATITUDE,\r\n            spatialReference: {\r\n                wkid: 102100\r\n            }\r\n        }\r\n      \r\n        this.props.zoomToSelectedPoint(point);\r\n    }\r\n\r\n    optionMap = (value, index, srcOp) => {\r\n\r\n        switch (srcOp) {\r\n            case \"DC Place\":\r\n                return (\r\n                    <option key={`item-${index}`} index={index} value={index}>{value.ALIASNAME + \" (\" + value.WARD + \")\"}</option>\r\n                )\r\n            case \"DC Address\":\r\n                return (\r\n                    <option key={`item-${index}`} index={index}  value={index}>{value.FULLADDRESS + \" (\" + value.WARD + \")\"}</option>\r\n                )\r\n            case \"DC Intersection\":\r\n                return (\r\n                    <option key={`item-${index}`} index={index}  value={index}>{value.FULLINTERSECTION + \" (\" + value.WARD + \")\"}</option>\r\n                )\r\n            case \"DC Block Address\":\r\n                return (\r\n                    <option key={`item-${index}`} index={index}  value={index}>{value.BLOCKNAME + \" (\" + value.WARD + \")\"}</option>\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    renderDetails = (opt) => {\r\n      \r\n        if (!opt) {\r\n            return;\r\n        } else  {\r\n            return (<div className= \"MARresultsDetails\">\r\n         { opt.ALIASNAME? <p>ALIAS: {opt.ALIASNAME}</p>:null }\r\n        { opt.FULLADDRESS? <p>ADDRESS:{opt.FULLADDRESS}</p>:null }\r\n         {opt.SMD? <p>SMD:{opt.SMD}</p>:null}\r\n          {opt.ANC?<p>ANC: {opt.ANC} </p>:null}\r\n               {opt.WARD? <p>WARD:{opt.WARD}</p>:null}\r\n               {opt.VOTE_PRCNCT? <p>VOTER PRECINCT:{opt.VOTE_PRCNCT}</p>:null}\r\n               <button onClick={this.GoToPointonMapButtonHandler}>Go To This Location</button>\r\n\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    renderOptions = () => {\r\n        const results = this.props.graphic.marResults;\r\n        if (!results) {\r\n          \r\n            return (\r\n                <select multiple className=\"MARresults\">\r\n                    <option>\r\n                        Results Appear Here</option >\r\n                </select>\r\n            )\r\n        } else if (results.returnDataset) {\r\n            return (\r\n                <select multiple className=\"MARresults\" onChange={this.addressSelectHandler}>\r\n                    {this\r\n                        .props\r\n                        .graphic\r\n                        .marResults\r\n                        .returnDataset\r\n                        .Table1\r\n                        .map((value, index) => this.optionMap(value, index, results.sourceOperation))}\r\n                </select>\r\n\r\n            )\r\n        } else {\r\n           \r\n            return (\r\n                <select multiple className=\"MARresults\">\r\n                    <option>\r\n                        No Results Returned</option >\r\n                </select>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalWrapper{...this.props}\r\n                title=\"MAR Query\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.map.showOk}>\r\n\r\n                <div className=\"MAR\">\r\n                    <div\r\n                        className=\"MARCancel\"\r\n                        title=\"Close Window\"\r\n                        onClick={this.cancelClickHandler}>X</div>\r\n                    <p>\r\n                        TYPE AN ADDRESS AND PRESS ENTER</p>\r\n                    <input\r\n                        onKeyPress={this.addressSearch}\r\n                        className=\"MARsearch\"\r\n                        onChange={this.textChange}\r\n                        value={this.state.searchText}></input>\r\n\r\n                    {this.props.graphic.returnDataset\r\n                        ? this.renderOptions()\r\n                        : this.renderOptions()}\r\n                    <div >{this.renderDetails(this.state.selectedOpt)}</div>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({map: state.map, graphic: state.graphic, auth: state.auth, config: state.config});\r\n\r\nconst mapDispatchToProps = function (dispatch) {\r\n    return bindActionCreators({\r\n        ...mapActions,\r\n        ...graphicActions\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MAR);"]},"metadata":{},"sourceType":"module"}