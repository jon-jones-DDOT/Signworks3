{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(openStreetSmart),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchStreetSmart);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { projectGeometry } from '../../utils/JSAPI'; // WORKER //\n\nfunction openStreetSmart(action) {\n  var projectResult, geoms;\n  return _regeneratorRuntime.wrap(function openStreetSmart$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(projectGeometry, [action.payload.coords, action.payload.layer, action.payload.overlay]);\n\n        case 3:\n          projectResult = _context.sent;\n          geoms = projectResult.data;\n          console.log('geoms', geoms); //at some point we add code here to retrieve and reproject points for the overlay\n\n          /*  yield put({\r\n             type: graphicTypes.SET_QUERY_RESULTS,\r\n             payload: {\r\n                 queryFeatures:features\r\n             }\r\n          });*/\n\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/openStreetSmart, ', _context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n} // WATCHER //\n\n\nexport function watchStreetSmart() {\n  return _regeneratorRuntime.wrap(function watchStreetSmart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_openStreetSmart.js"],"names":["openStreetSmart","watchStreetSmart","call","put","takeLatest","types","graphicTypes","projectGeometry","action","payload","coords","layer","overlay","projectResult","geoms","data","console","log","START_STREETSMART_VIEWER"],"mappings":";;;;yBAQWA,e;;;yBA0BOC,gB;;AAlClB,SAAQC,IAAR,EAAcC,GAAd,EAAkBC,UAAlB,QAAmC,oBAAnC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AACA,SAAQC,eAAR,QAA8B,mBAA9B,C,CAIA;;AAEA,SAAWP,eAAX,CAA2BQ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG+B,iBAAMN,IAAI,CAACK,eAAD,EAAkB,CAACC,MAAM,CAACC,OAAP,CAAeC,MAAhB,EAAuBF,MAAM,CAACC,OAAP,CAAeE,KAAtC,EAA6CH,MAAM,CAACC,OAAP,CAAeG,OAA5D,CAAlB,CAAV;;AAH/B;AAGaC,UAAAA,aAHb;AAKaC,UAAAA,KALb,GAKqBD,aAAa,CAACE,IALnC;AAMOC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB,EANP,CAQO;;AAGF;;;;;;;AAXL;AAAA;;AAAA;AAAA;AAAA;AAqBQE,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;AArBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAyBA;;;AACA,OAAO,SAAWhB,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAACY,wBAAd,EAAwClB,eAAxC,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put,takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {projectGeometry} from '../../utils/JSAPI'\r\n\r\n\r\n\r\n// WORKER //\r\n\r\nfunction * openStreetSmart(action) {\r\n    try{\r\n     \r\n       const projectResult =   yield call(projectGeometry, [action.payload.coords,action.payload.layer, action.payload.overlay]);\r\n       \r\n       const geoms = projectResult.data;\r\n       console.log('geoms', geoms)\r\n\r\n       //at some point we add code here to retrieve and reproject points for the overlay\r\n\r\n\r\n     /*  yield put({\r\n        type: graphicTypes.SET_QUERY_RESULTS,\r\n        payload: {\r\n            queryFeatures:features\r\n        }\r\n    });*/\r\n        \r\n    }\r\n    \r\n    catch (e) {\r\n        console.log('SAGA ERROR: graphic/openStreetSmart, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchStreetSmart() {\r\n   \r\n    yield takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}