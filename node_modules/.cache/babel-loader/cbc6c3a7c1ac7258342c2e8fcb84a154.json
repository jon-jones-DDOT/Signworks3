{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(setSignOrder),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignOrder);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { getRelatedSigns, saveSignOrder } from '../../utils/JSAPI'; // WORKER //\n\nfunction setSignOrder(action) {\n  var support, signsREsp, signs;\n  return _regeneratorRuntime.wrap(function setSignOrder$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(saveSignOrder, [action.payload.features]);\n\n        case 3:\n          console.log('* payload', action.payload);\n          support = action.payload.support;\n          _context.next = 7;\n          return call(getRelatedSigns, [support, 'https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' + 'er/1/query']);\n\n        case 7:\n          signsREsp = _context.sent;\n          signs = {\n            features: signsREsp.data.features\n          }; // Put config in store\n\n          _context.next = 11;\n          return put({\n            type: mapTypes.SET_SIGN_ORDER,\n            payload: {\n              signs: signs\n            }\n          });\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: map/setSignOrder, ', _context.t0);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 13]]);\n} // WATCHER //\n\n\nexport function watchSignOrder() {\n  return _regeneratorRuntime.wrap(function watchSignOrder$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.SIGN_ORDER_CHANGED, setSignOrder);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_setSignOrder.js"],"names":["setSignOrder","watchSignOrder","call","put","takeLatest","types","mapTypes","getRelatedSigns","saveSignOrder","action","payload","features","console","log","support","signsREsp","signs","data","type","SET_SIGN_ORDER","SIGN_ORDER_CHANGED"],"mappings":";;;;yBAMWA,Y;;;yBA+BOC,c;;AArClB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,KAAK,IAAIC,QAAjB,QAAgC,iBAAhC;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA8C,mBAA9C,C,CAEA;;AAEA,SAAWR,YAAX,CAAwBS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMS,iBAAMP,IAAI,CAACM,aAAD,EAAgB,CAACC,MAAM,CAACC,OAAP,CAAeC,QAAhB,CAAhB,CAAV;;AANT;AAOAC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAM,CAACC,OAAhC;AACcI,UAAAA,OARd,GAQyBL,MAAM,CAACC,OAAP,CAAeI,OARxC;AAAA;AAU0B,iBAAMZ,IAAI,CAACK,eAAD,EAAkB,CAC1CO,OAD0C,EACjC,qFACD,YAFkC,CAAlB,CAAV;;AAV1B;AAUcC,UAAAA,SAVd;AAecC,UAAAA,KAfd,GAesB;AACVL,YAAAA,QAAQ,EAAEI,SAAS,CAACE,IAAV,CAAeN;AADf,WAftB,EAmBQ;;AAnBR;AAoBQ,iBAAMR,GAAG,CAAC;AAACe,YAAAA,IAAI,EAAEZ,QAAQ,CAACa,cAAhB;AAAgCT,YAAAA,OAAO,EAAE;AAE3CM,cAAAA,KAAK,EAALA;AAF2C;AAAzC,WAAD,CAAT;;AApBR;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0BQJ,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AA1BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CA8BA;;;AACA,OAAO,SAAWZ,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,QAAQ,CAACc,kBAAV,EAA8BpB,YAA9B,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {types as mapTypes} from '../reducers/map';\r\nimport { getRelatedSigns, saveSignOrder} from '../../utils/JSAPI';\r\n\r\n// WORKER //\r\n\r\nfunction * setSignOrder(action) {\r\n\r\n    try {\r\n\r\n        // call API to fetch config\r\n\r\n         yield call(saveSignOrder, [action.payload.features]);\r\nconsole.log('* payload', action.payload)\r\n        const support =  action.payload.support;\r\n      \r\n        const signsREsp = yield call(getRelatedSigns, [\r\n            support, 'https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' +\r\n                    'er/1/query'\r\n        ])\r\n\r\n        const signs = {\r\n            features: signsREsp.data.features\r\n        };\r\n\r\n        // Put config in store\r\n        yield put({type: mapTypes.SET_SIGN_ORDER, payload: {\r\n\r\n                signs\r\n            }});\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: map/setSignOrder, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchSignOrder() {\r\n\r\n    yield takeLatest(mapTypes.SIGN_ORDER_CHANGED, setSignOrder);\r\n}"]},"metadata":{},"sourceType":"module"}