{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(openStreetSmart),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchStreetSmart);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { projectGeometry, getSupportByExtent, pointToExtentSaga } from '../../utils/JSAPI';\nimport { arcgisToGeoJSON } from '@esri/arcgis-to-geojson-utils'; // WORKER //\n\nfunction openStreetSmart(action) {\n  var projectResult, geoms, localExtent, features, ssOverlayFeatures;\n  return _regeneratorRuntime.wrap(function openStreetSmart$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(projectGeometry, [[action.payload.ssFeature.geometry], action.payload.layers.geometryService, action.payload.inSR, action.payload.outSR]);\n\n        case 3:\n          projectResult = _context.sent;\n          geoms = projectResult;\n          _context.next = 7;\n          return call(pointToExtentSaga, [action.payload.viewWidth, action.payload.viewExtentWidth, action.payload.view_spatRef, action.payload.ssFeature.geometry, 400 //tolerance in pixels\n          ]);\n\n        case 7:\n          localExtent = _context.sent;\n          _context.next = 10;\n          return call(getSupportByExtent, [localExtent, action.payload.layers.supports, 2248]);\n\n        case 10:\n          features = _context.sent;\n          ssOverlayFeatures = features.data.features;\n          _context.next = 14;\n          return put({\n            type: graphicTypes.SHOW_STREETSMART_VIEWER,\n            payload: {\n              leftVisible: true,\n              ssEdit: false,\n              ssView: true,\n              ssInputGeom: geoms,\n              ssOverlayFeatures: ssOverlayFeatures\n            }\n          });\n\n        case 14:\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/openStreetSmart, ', _context.t0);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 16]]);\n} // WATCHER //\n\n\nexport function watchStreetSmart() {\n  return _regeneratorRuntime.wrap(function watchStreetSmart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_openStreetSmart.js"],"names":["openStreetSmart","watchStreetSmart","call","put","takeLatest","types","graphicTypes","projectGeometry","getSupportByExtent","pointToExtentSaga","arcgisToGeoJSON","action","payload","ssFeature","geometry","layers","geometryService","inSR","outSR","projectResult","geoms","viewWidth","viewExtentWidth","view_spatRef","localExtent","supports","features","ssOverlayFeatures","data","type","SHOW_STREETSMART_VIEWER","leftVisible","ssEdit","ssView","ssInputGeom","console","log","START_STREETSMART_VIEWER"],"mappings":";;;;yBAOWA,e;;;yBAqCOC,gB;;AA5ClB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AACA,SAAQC,eAAR,EAAyBC,kBAAzB,EAA6CC,iBAA7C,QAAqE,mBAArE;AACA,SAAQC,eAAR,QAA8B,+BAA9B,C,CAEA;;AAEA,SAAWV,eAAX,CAA2BW,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG8B,iBAAMT,IAAI,CAACK,eAAD,EAAkB,CAC9C,CAACI,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyBC,QAA1B,CAD8C,EAE9CH,MAAM,CAACC,OAAP,CAAeG,MAAf,CAAsBC,eAFwB,EAG9CL,MAAM,CAACC,OAAP,CAAeK,IAH+B,EAI9CN,MAAM,CAACC,OAAP,CAAeM,KAJ+B,CAAlB,CAAV;;AAH9B;AAGcC,UAAAA,aAHd;AAUcC,UAAAA,KAVd,GAUsBD,aAVtB;AAAA;AAY4B,iBAAMjB,IAAI,CAACO,iBAAD,EAAoB,CAC9CE,MAAM,CAACC,OAAP,CAAeS,SAD+B,EACpBV,MAAM,CAACC,OAAP,CAAeU,eADK,EACYX,MAAM,CAACC,OAAP,CAAeW,YAD3B,EACyCZ,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyBC,QADlE,EAC4E,GAD5E,CACgF;AADhF,WAApB,CAAV;;AAZ5B;AAYcU,UAAAA,WAZd;AAAA;AAiByB,iBAAMtB,IAAI,CAACM,kBAAD,EAAqB,CAACgB,WAAD,EAAcb,MAAM,CAACC,OAAP,CAAeG,MAAf,CAAsBU,QAApC,EAA8C,IAA9C,CAArB,CAAV;;AAjBzB;AAiBcC,UAAAA,QAjBd;AAkBcC,UAAAA,iBAlBd,GAkBkCD,QAAQ,CAACE,IAAT,CAAcF,QAlBhD;AAAA;AAoBQ,iBAAMvB,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEvB,YAAY,CAACwB,uBADb;AAENlB,YAAAA,OAAO,EAAE;AACLmB,cAAAA,WAAW,EAAE,IADR;AAELC,cAAAA,MAAM,EAAE,KAFH;AAGLC,cAAAA,MAAM,EAAE,IAHH;AAILC,cAAAA,WAAW,EAAEd,KAJR;AAKLO,cAAAA,iBAAiB,EAAjBA;AALK;AAFH,WAAD,CAAT;;AApBR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgCQQ,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;AAhCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAoCA;;;AACA,OAAO,SAAWnC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAAC+B,wBAAd,EAAwCrC,eAAxC,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {projectGeometry, getSupportByExtent, pointToExtentSaga} from '../../utils/JSAPI'\r\nimport {arcgisToGeoJSON} from '@esri/arcgis-to-geojson-utils'\r\n\r\n// WORKER //\r\n\r\nfunction * openStreetSmart(action) {\r\n    try {\r\n\r\n        const projectResult = yield call(projectGeometry, [\r\n            [action.payload.ssFeature.geometry],\r\n            action.payload.layers.geometryService,\r\n            action.payload.inSR,\r\n            action.payload.outSR\r\n        ]);\r\n\r\n        const geoms = projectResult;\r\n\r\n        const localExtent = yield call(pointToExtentSaga, [\r\n            action.payload.viewWidth, action.payload.viewExtentWidth, action.payload.view_spatRef, action.payload.ssFeature.geometry, 400 //tolerance in pixels\r\n        ])\r\n\r\n        //get neighboring points from the selected support\r\n        const features = yield call(getSupportByExtent, [localExtent, action.payload.layers.supports, 2248]);\r\n        const ssOverlayFeatures = features.data.features;\r\n\r\n        yield put({\r\n            type: graphicTypes.SHOW_STREETSMART_VIEWER,\r\n            payload: {\r\n                leftVisible: true,\r\n                ssEdit: false,\r\n                ssView: true,\r\n                ssInputGeom: geoms,\r\n                ssOverlayFeatures\r\n            }\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: graphic/openStreetSmart, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchStreetSmart() {\r\n\r\n    yield takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}