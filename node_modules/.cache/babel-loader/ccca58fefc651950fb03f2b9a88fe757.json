{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(muttGenerator);\n\nimport { loadModules } from 'esri-loader';\nimport { call } from 'redux-saga/effects';\nimport LatLon from './geodesy/latlon-spherical';\nexport function getGroups(args) {\n  var portal = args[0];\n  var title = args[1];\n  var queryParams = {\n    query: \"title:\" + title,\n    num: 50\n  };\n  return new Promise(function (resolve, reject) {\n    portal.queryGroups(queryParams).then(function (resp) {\n      return resolve(resp);\n    }, function (error) {\n      return reject(error);\n    });\n  });\n}\nexport function layerURLs(props) {\n  if (props.auth.isDev) {\n    return props.config.featureURLs_dev_edit;\n  } else if (props.auth.isEditor) {\n    return props.config.featureURLs_prod_edit;\n  } else if (props.auth.isViewer) {\n    return props.config.featureURLs_view;\n  } else return null;\n}\nexport function getSupportById(args) {\n  var id = args[0];\n  var layer = args[1];\n  var outSR = args[2];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          esriRequest = _ref2[0];\n\n      esriRequest(layer + '/query', {\n        query: {\n          where: \"OBJECTID = \" + id,\n          returnGeometry: true,\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\",\n          outSR: outSR // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function getSupportByExtent(args) {\n  return new Promise(function (resolve, reject) {\n    var extent = args[0];\n    var supportLayer = args[1];\n    var outSR = args[2];\n    var where = args[3];\n    loadModules([\"esri/request\"]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          esriRequest = _ref4[0];\n\n      esriRequest(supportLayer + '/query', {\n        query: {\n          geometry: JSON.stringify(extent),\n          where: where,\n          returnGeometry: true,\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\",\n          // format\n          outSR: outSR\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function getRelatedSigns(args) {\n  return new Promise(function (resolve, reject) {\n    var feature = args[0];\n    var layer = args[1];\n    loadModules([\"esri/request\"]).then(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 1),\n          esriRequest = _ref6[0];\n\n      esriRequest(layer + \"/query\", {\n        query: {\n          where: \"SUPPORTID='\" + feature.attributes.GLOBALID + \"'\",\n          orderByFields: \"SIGNORDER\",\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\" // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function getRelatedTimebands(args) {\n  var layer = args[1];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 1),\n          esriRequest = _ref8[0];\n\n      esriRequest(layer + '/query', {\n        query: {\n          where: \"SIGNID='\" + args[0].attributes.GLOBALID + \"'\",\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\" // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveSignOrder(args) {\n  var features = args[0];\n  var layer = args[1];\n  var pureFeatures = [];\n\n  for (var i = 0; i < features.length; i++) {\n    pureFeatures.push(features[i].feature);\n  }\n\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 1),\n          esriRequest = _ref10[0];\n\n      esriRequest(layer + '/applyEdits', {\n        method: 'post',\n        query: {\n          f: \"json\",\n          // format\n          \"updates\": JSON.stringify(pureFeatures)\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveSupport(args\n/*updateFeature, isNew, layer */\n) {\n  var updateFeature = args[0];\n  var isNew = args[1];\n  var layer = args[2];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 1),\n          esriRequest = _ref12[0];\n\n      var set = null;\n\n      if (isNew) {\n        set = {\n          f: \"json\",\n          \"adds\": JSON.stringify([updateFeature])\n        };\n      } else {\n        set = {\n          f: \"json\",\n          \"updates\": JSON.stringify([updateFeature])\n        };\n      }\n\n      esriRequest(layer + '/applyEdits', {\n        method: 'post',\n        query: set\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveTimebands(args) {\n  var updateTimebands = args[0].editBands; //array\n\n  var newTimebands = args[0].newBands; //array\n\n  var deleteTimebands = args[0].deleteBands;\n  var timebandLayer = args[1].timebands + \"/applyEdits\";\n  var bandSet = {\n    f: \"json\",\n    \"adds\": JSON.stringify(newTimebands),\n    \"updates\": JSON.stringify(updateTimebands),\n    \"deletes\": JSON.stringify(deleteTimebands)\n  };\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 1),\n          esriRequest = _ref14[0];\n\n      esriRequest(timebandLayer, {\n        method: 'post',\n        query: bandSet\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveSign(args) {\n  var updateSignFeature = args[0].sign;\n  var isNew = args[1];\n  var signLayer = args[2].signs + \"/applyEdits\";\n  var signSet = null;\n\n  if (isNew) {\n    signSet = {\n      f: \"json\",\n      \"adds\": JSON.stringify([updateSignFeature])\n    };\n  } else {\n    signSet = {\n      f: \"json\",\n      \"updates\": JSON.stringify([updateSignFeature])\n    };\n  }\n\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 1),\n          esriRequest = _ref16[0];\n\n      esriRequest(signLayer, {\n        method: 'post',\n        query: signSet\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    }); // end of then for loadModules\n  }); //end of promise\n} // end of function\n\nexport function superQuery(args) {\n  var where = args[0];\n  var geom = args[1];\n  console.log('geom', geom);\n  console.log('JSON.stringify(geom)', JSON.stringify(geom));\n  var layer = args[2];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref17) {\n      var _ref18 = _slicedToArray(_ref17, 1),\n          esriRequest = _ref18[0];\n\n      esriRequest(layer + '/query', {\n        query: {\n          geometry: JSON.stringify(geom),\n          where: where,\n          returnGeometry: true,\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\",\n          // format\n          outSR: 4326\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function projectGeometry(args) {\n  var coords = args[0]; //array\n\n  var layer = args[1];\n  var inSR = args[2];\n  var outSR = args[3];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/tasks/GeometryService\", \"esri/tasks/support/ProjectParameters\", \"esri/geometry/Point\", \"esri/geometry/SpatialReference\"]).then(function (_ref19) {\n      var _ref20 = _slicedToArray(_ref19, 4),\n          GeometryService = _ref20[0],\n          ProjectParameters = _ref20[1],\n          Point = _ref20[2],\n          SpatialReference = _ref20[3];\n\n      var outS = new SpatialReference(outSR);\n      var gS = new GeometryService({\n        url: layer\n      });\n      var inSpatRef = new SpatialReference(inSR);\n      var geoms = [];\n\n      for (var i = 0; i < coords.length; i++) {\n        var pt = new Point({\n          latitude: coords[i].y,\n          longitude: coords[i].x,\n          spatialReference: inSpatRef\n        });\n        geoms.push(pt);\n      }\n\n      var params = new ProjectParameters({\n        geometries: geoms,\n        outSpatialReference: outS\n      });\n      gS.project(params).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function pointToExtentSaga(args) {\n  var view_width = args[0];\n  var view_extent_width = args[1];\n  var view_spatialReference = args[2];\n  var point = args[3];\n  var toleranceInPixel = args[4];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/geometry/Extent\", \"esri/geometry/support/webMercatorUtils\"]).then(function (_ref21) {\n      var _ref22 = _slicedToArray(_ref21, 2),\n          Extent = _ref22[0],\n          webMercatorUtils = _ref22[1];\n\n      try {\n        var mercPoint = null;\n\n        if (point.spatialReference) {\n          if (point.spatialReference.wkid === 102100) {\n            mercPoint = point;\n          } else {\n            mercPoint = webMercatorUtils.geographicToWebMercator(point);\n          }\n        } else {\n          mercPoint = webMercatorUtils.geographicToWebMercator(point);\n        } //calculate map coords represented per pixel\n\n\n        var pixelWidth = view_extent_width / view_width; //calculate map coords for tolerance in pixel\n\n        var toleraceInMapCoords = toleranceInPixel * pixelWidth;\n        var ext = new Extent(mercPoint.x - toleraceInMapCoords, mercPoint.y - toleraceInMapCoords, mercPoint.x + toleraceInMapCoords, mercPoint.y + toleraceInMapCoords, view_spatialReference);\n        resolve(ext);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  });\n}\nexport function pointToExtent(view_width, view_extent_width, view_spatialReference, point, toleranceInPixel, callback) {\n  loadModules([\"esri/geometry/Extent\"]).then(function (_ref23) {\n    var _ref24 = _slicedToArray(_ref23, 1),\n        Extent = _ref24[0];\n\n    //calculate map coords represented per pixel\n    var pixelWidth = view_extent_width / view_width; //calculate map coords for tolerance in pixel\n\n    var toleraceInMapCoords = toleranceInPixel * pixelWidth; //calculate & return computed extent\n\n    callback(new Extent(point.x - toleraceInMapCoords, point.y - toleraceInMapCoords, point.x + toleraceInMapCoords, point.y + toleraceInMapCoords, view_spatialReference));\n  });\n}\nexport function createFeatureSet(args) {\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/tasks/support/FeatureSet\"]).then(function (_ref25) {\n      var _ref26 = _slicedToArray(_ref25, 1),\n          FeatureSet = _ref26[0];\n\n      try {\n        resolve(new FeatureSet({\n          features: args[0]\n        }));\n      } catch (err) {\n        reject(err);\n      }\n    });\n  });\n}\nexport function getPointOnRouteLRS(args) {\n  var point = args[0];\n  var layer = args[1];\n  var inSR = args[2];\n  var outSR = args[3];\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref27) {\n      var _ref28 = _slicedToArray(_ref27, 1),\n          esriRequest = _ref28[0];\n\n      esriRequest(layer + '/getPointOnRoute', {\n        query: {\n          'x': point.geometry.x,\n          'y': point.geometry.y,\n          'inSR': inSR,\n          'outSR': outSR,\n          'searchRadius': 50,\n          'f': \"json\"\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function calculateBearingPoints(args) {\n  // wkid 4326 ONLY\n  var pt1 = args[0];\n  var pt2 = args[1];\n  var lat1 = pt1.y;\n  var lat2 = pt2.y;\n  var lon1 = pt1.x;\n  var lon2 = pt2.x;\n  var xscale = Math.cos(lat1 * Math.PI / 180);\n  lon1 = lon1 * xscale;\n  lon2 = lon2 * xscale;\n  var dlon = lon2 - lon1;\n  var dlat = lat2 - lat1;\n\n  if (Math.abs(dlon) < 0.000000001) {\n    if (dlat < 0) return 180;else return 0;\n  }\n\n  return Math.atan2(dlon, dlat) * 180 / Math.PI;\n}\nexport function createTriangle(args) {\n  var point1 = args[0][0];\n  var imagePitch = args[1];\n  var imageYaw = args[2];\n  var hFov = args[3];\n  var source = args[4];\n\n  if (source === \"StreetSmart\") {\n    hFov /= 2;\n  }\n\n  var sourceColor;\n\n  if (source === \"StreetSmart\") {\n    sourceColor = \"blue\";\n  } else {\n    sourceColor = \"green\";\n  }\n\n  if (typeof point1 == 'undefined') {\n    return;\n  }\n\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/Graphic\", \"esri/geometry/Polygon\", \"esri/geometry/Point\", \"esri/symbols/SimpleFillSymbol\", \"esri/symbols/SimpleLineSymbol\", \"esri/symbols/SimpleMarkerSymbol\", \"esri/Color\"]).then(function (_ref29) {\n      var _ref30 = _slicedToArray(_ref29, 7),\n          Graphic = _ref30[0],\n          Polygon = _ref30[1],\n          Point = _ref30[2],\n          SimpleFillSymbol = _ref30[3],\n          SimpleLineSymbol = _ref30[4],\n          SimpleMarkerSymbol = _ref30[5],\n          Color = _ref30[6];\n\n      try {\n        var point2 = new Point({\n          x: point1.x,\n          y: point1.y\n        });\n        var pictureMarkerSymbol = new SimpleMarkerSymbol({\n          style: \"triangle\",\n          color: \"black\",\n          size: \"10px\"\n        });\n        var symbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color(\"#FFFFFF\"), 2), new Color(sourceColor));\n        pictureMarkerSymbol.angle = imageYaw;\n        var radius = 45;\n        radius = radius - Math.abs(imagePitch) / 2; // coneLayer.removeAll();\n\n        var bob = new LatLon(point2.y, point2.x);\n        console.log('hFov :', hFov);\n        var portAzimuth = imageYaw - hFov;\n\n        if (portAzimuth < 0) {\n          portAzimuth += 360;\n        }\n\n        var starboardAzimuth = imageYaw + hFov;\n\n        if (starboardAzimuth > 360) {\n          starboardAzimuth -= 360;\n        }\n\n        var portPoint = bob.destinationPoint(radius, portAzimuth);\n        var starboardPoint = bob.destinationPoint(radius, starboardAzimuth);\n        var polygonJson = {\n          \"rings\": [[[point2.x, point2.y], [portPoint.lon, portPoint.lat], [starboardPoint.lon, starboardPoint.lat]]],\n          \"spatialReference\": {\n            \"wkid\": 4326\n          }\n        };\n        symbol.color.a = .5 - imagePitch * .01 / 2;\n        var polygon = new Polygon(polygonJson);\n        var graf = new Graphic(polygon, symbol); // coneLayer.add(graf);\n\n        var pt = new Graphic(point2, pictureMarkerSymbol); //  coneLayer.add(pt);\n\n        resolve([graf, pt]);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }); //   mp = point;\n\n  /*\r\n  \r\n  \r\n  */\n}\n; //NON-ESRI DATA CALLS\n\nexport function muttGenerator(muttQueryString) {\n  return _regeneratorRuntime.wrap(function muttGenerator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(getMUTCDS, [muttQueryString]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getMUTCDS(_x) {\n  return _getMUTCDS.apply(this, arguments);\n}\n\nfunction _getMUTCDS() {\n  _getMUTCDS = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(args) {\n    var baseUrl, response, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd?code=\" + args[0];\n            _context2.prev = 1;\n            _context2.next = 4;\n            return fetch(baseUrl);\n\n          case 4:\n            response = _context2.sent;\n\n            if (!response.ok) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 8;\n            return response.json();\n\n          case 8:\n            results = _context2.sent;\n            return _context2.abrupt(\"return\", results);\n\n          case 10:\n            _context2.next = 16;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error('Something went wrong');\n            throw new Error('Bad stuff happened.');\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n  return _getMUTCDS.apply(this, arguments);\n}\n\nexport function getAllMUTCDS() {\n  return _getAllMUTCDS.apply(this, arguments);\n}\n\nfunction _getAllMUTCDS() {\n  _getAllMUTCDS = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var baseUrl, response, results;\n    return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd\";\n            _context3.prev = 1;\n            _context3.next = 4;\n            return fetch(baseUrl);\n\n          case 4:\n            response = _context3.sent;\n\n            if (!response.ok) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 8;\n            return response.json();\n\n          case 8:\n            results = _context3.sent;\n            return _context3.abrupt(\"return\", results);\n\n          case 10:\n            _context3.next = 16;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.error('Something went wrong');\n            throw new Error('Bad stuff happened.');\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee2, null, [[1, 12]]);\n  }));\n  return _getAllMUTCDS.apply(this, arguments);\n}\n\nexport function getLocation2(_x2) {\n  return _getLocation.apply(this, arguments);\n}\n\nfunction _getLocation() {\n  _getLocation = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(args) {\n    var proxy, baseUrl, response, results;\n    return _regeneratorRuntime.wrap(function _callee3$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // in the old version I coded stuff for it to take roadways and street segments\n            // not sure where I was going with that , but I will code it now to be able to\n            // expand if those come back up as requests. so args[1] will always be 'address'\n            proxy = \"http://ddotgisapp02/proxy/proxy.ashx?\";\n            baseUrl = proxy + \"http://citizenatlas.dc.gov/newwebservices/locationverifier.asmx\";\n\n            if (args[1] === \"address\") {\n              baseUrl += \"/findLocation2?f=json&str=\" + args[0];\n            }\n\n            _context4.prev = 3;\n            _context4.next = 6;\n            return fetch(baseUrl);\n\n          case 6:\n            response = _context4.sent;\n\n            if (!response.ok) {\n              _context4.next = 12;\n              break;\n            }\n\n            _context4.next = 10;\n            return response.json();\n\n          case 10:\n            results = _context4.sent;\n            return _context4.abrupt(\"return\", results);\n\n          case 12:\n            _context4.next = 18;\n            break;\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](3);\n            console.error('Something went wrong with MAR');\n            throw new Error('Bad stuff happened. In MAR');\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee3, null, [[3, 14]]);\n  }));\n  return _getLocation.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\utils\\JSAPI.js"],"names":["muttGenerator","loadModules","call","LatLon","getGroups","args","portal","title","queryParams","query","num","Promise","resolve","reject","queryGroups","then","resp","error","layerURLs","props","auth","isDev","config","featureURLs_dev_edit","isEditor","featureURLs_prod_edit","isViewer","featureURLs_view","getSupportById","id","layer","outSR","esriRequest","where","returnGeometry","outFields","token","f","getSupportByExtent","extent","supportLayer","geometry","JSON","stringify","getRelatedSigns","feature","attributes","GLOBALID","orderByFields","getRelatedTimebands","saveSignOrder","features","pureFeatures","i","length","push","method","saveSupport","updateFeature","isNew","set","saveTimebands","updateTimebands","editBands","newTimebands","newBands","deleteTimebands","deleteBands","timebandLayer","timebands","bandSet","saveSign","updateSignFeature","sign","signLayer","signs","signSet","superQuery","geom","console","log","projectGeometry","coords","inSR","GeometryService","ProjectParameters","Point","SpatialReference","outS","gS","url","inSpatRef","geoms","pt","latitude","y","longitude","x","spatialReference","params","geometries","outSpatialReference","project","pointToExtentSaga","view_width","view_extent_width","view_spatialReference","point","toleranceInPixel","Extent","webMercatorUtils","mercPoint","wkid","geographicToWebMercator","pixelWidth","toleraceInMapCoords","ext","pointToExtent","callback","createFeatureSet","FeatureSet","err","getPointOnRouteLRS","calculateBearingPoints","pt1","pt2","lat1","lat2","lon1","lon2","xscale","Math","cos","PI","dlon","dlat","abs","atan2","createTriangle","point1","imagePitch","imageYaw","hFov","source","sourceColor","Graphic","Polygon","SimpleFillSymbol","SimpleLineSymbol","SimpleMarkerSymbol","Color","point2","pictureMarkerSymbol","style","color","size","symbol","STYLE_SOLID","angle","radius","bob","portAzimuth","starboardAzimuth","portPoint","destinationPoint","starboardPoint","polygonJson","lon","lat","a","polygon","graf","muttQueryString","getMUTCDS","baseUrl","fetch","response","ok","json","results","Error","getAllMUTCDS","getLocation2","proxy"],"mappings":";;;;;;yBAgiBkBA,a;;AAhiBlB,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B,MAAMC,MAAM,GAAGD,IAAI,CAAC,CAAD,CAAnB;AACA,MAAME,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAlB;AACA,MAAIG,WAAW,GAAG;AAEdC,IAAAA,KAAK,EAAE,WAAWF,KAFJ;AAGdG,IAAAA,GAAG,EAAE;AAHS,GAAlB;AAKA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCP,IAAAA,MAAM,CACDQ,WADL,CACiBN,WADjB,EAEKO,IAFL,CAEU,UAAAC,IAAI;AAAA,aAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,KAFd,EAEiC,UAAAC,KAAK;AAAA,aAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,KAFtC;AAIH,GALM,CAAP;AAMH;AAED,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAE7B,MAAIA,KAAK,CAACC,IAAN,CAAWC,KAAf,EAAsB;AAElB,WAAOF,KAAK,CAACG,MAAN,CAAaC,oBAApB;AACH,GAHD,MAGO,IAAIJ,KAAK,CAACC,IAAN,CAAWI,QAAf,EAAyB;AAE5B,WAAOL,KAAK,CAACG,MAAN,CAAaG,qBAApB;AACH,GAHM,MAGA,IAAIN,KAAK,CAACC,IAAN,CAAWM,QAAf,EAAyB;AAE5B,WAAOP,KAAK,CAACG,MAAN,CAAaK,gBAApB;AACH,GAHM,MAIH,OAAO,IAAP;AACH;AAEL,OAAO,SAASC,cAAT,CAAwBvB,IAAxB,EAA8B;AACjC,MAAMwB,EAAE,GAAGxB,IAAI,CAAC,CAAD,CAAf;AACA,MAAMyB,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AACA,MAAM0B,KAAK,GAAG1B,IAAI,CAAC,CAAD,CAAlB;AAEA,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,gBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACF,KAAK,GAAG,QAAT,EAAmB;AAC1BrB,QAAAA,KAAK,EAAE;AACHwB,UAAAA,KAAK,EAAE,gBAAgBJ,EADpB;AAEHK,UAAAA,cAAc,EAAE,IAFb;AAGHC,UAAAA,SAAS,EAAE,GAHR;AAGa;AAChBC,UAAAA,KAAK,EAAE,IAJJ;AAIU;AACbC,UAAAA,CAAC,EAAE,MALA;AAMHN,UAAAA,KAAK,EAAEA,KANJ,CAMU;;AANV;AADmB,OAAnB,CAAX,CAUGhB,IAVH,CAUQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OAVZ,EAU+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAVpC;AAYH,KAbD;AAcH,GAfM,CAAP;AAiBH;AAED,OAAO,SAASqB,kBAAT,CAA4BjC,IAA5B,EAAkC;AACrC,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAM0B,MAAM,GAAGlC,IAAI,CAAC,CAAD,CAAnB;AAEA,QAAMmC,YAAY,GAAGnC,IAAI,CAAC,CAAD,CAAzB;AAEA,QAAM0B,KAAK,GAAG1B,IAAI,CAAC,CAAD,CAAlB;AACA,QAAM4B,KAAK,GAAG5B,IAAI,CAAC,CAAD,CAAlB;AAEAJ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,iBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACQ,YAAY,GAAG,QAAhB,EAA0B;AACjC/B,QAAAA,KAAK,EAAE;AACHgC,UAAAA,QAAQ,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CADP;AAEHN,UAAAA,KAAK,EAACA,KAFH;AAGHC,UAAAA,cAAc,EAAE,IAHb;AAIHC,UAAAA,SAAS,EAAE,GAJR;AAIa;AAChBC,UAAAA,KAAK,EAAE,IALJ;AAKU;AACbC,UAAAA,CAAC,EAAE,MANA;AAMQ;AACXN,UAAAA,KAAK,EAAEA;AAPJ;AAD0B,OAA1B,CAAX,CAUGhB,IAVH,CAUQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OAVZ,EAU+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAVpC;AAaH,KAdD;AAgBH,GAzBM,CAAP;AA0BH;AAED,OAAO,SAAS2B,eAAT,CAAyBvC,IAAzB,EAA+B;AAElC,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAMgC,OAAO,GAAGxC,IAAI,CAAC,CAAD,CAApB;AAEA,QAAMyB,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AAEAJ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,iBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACF,KAAK,GAAG,QAAT,EAAmB;AAC1BrB,QAAAA,KAAK,EAAE;AACHwB,UAAAA,KAAK,EAAE,gBAAgBY,OAAO,CAACC,UAAR,CAAmBC,QAAnC,GAA8C,GADlD;AAEHC,UAAAA,aAAa,EAAE,WAFZ;AAGHb,UAAAA,SAAS,EAAE,GAHR;AAGa;AAChBC,UAAAA,KAAK,EAAE,IAJJ;AAIU;AACbC,UAAAA,CAAC,EAAE,MALA,CAKO;;AALP;AADmB,OAAnB,CAAX,CAQGtB,IARH,CAQQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OARZ,EAQ+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OARpC;AAUH,KAXD;AAYH,GAjBM,CAAP;AAkBH;AAED,OAAO,SAASgC,mBAAT,CAA6B5C,IAA7B,EAAmC;AACtC,MAAMyB,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AACA,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,iBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACF,KAAK,GAAG,QAAT,EAAmB;AAC1BrB,QAAAA,KAAK,EAAE;AACHwB,UAAAA,KAAK,EAAE,aAAa5B,IAAI,CAAC,CAAD,CAAJ,CAAQyC,UAAR,CAAmBC,QAAhC,GAA2C,GAD/C;AAGHZ,UAAAA,SAAS,EAAE,GAHR;AAGa;AAChBC,UAAAA,KAAK,EAAE,IAJJ;AAIU;AACbC,UAAAA,CAAC,EAAE,MALA,CAKO;;AALP;AADmB,OAAnB,CAAX,CAQGtB,IARH,CAQQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OARZ,EAQ+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OARpC;AASH,KAVD;AAWH,GAZM,CAAP;AAcH;AAED,OAAO,SAASiC,aAAT,CAAuB7C,IAAvB,EAA6B;AAChC,MAAM8C,QAAQ,GAAG9C,IAAI,CAAC,CAAD,CAArB;AACA,MAAMyB,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AACA,MAAI+C,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,IAAAA,YAAY,CAACG,IAAb,CAAkBJ,QAAQ,CAACE,CAAD,CAAR,CAAYR,OAA9B;AACH;;AAED,SAAO,IAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,iBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACF,KAAK,GAAG,aAAT,EAAwB;AAC/B0B,QAAAA,MAAM,EAAE,MADuB;AAE/B/C,QAAAA,KAAK,EAAE;AACH4B,UAAAA,CAAC,EAAE,MADA;AACQ;AACX,qBAAWK,IAAI,CAACC,SAAL,CAAeS,YAAf;AAFR;AAFwB,OAAxB,CAAX,CAMGrC,IANH,CAMQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OANZ,EAM+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OANpC;AAOH,KARD;AASH,GAVM,CAAP;AAYH;AAED,OAAO,SAASwC,WAAT,CAAqBpD;AAAI;AAAzB,EAA2D;AAC9D,MAAMqD,aAAa,GAAGrD,IAAI,CAAC,CAAD,CAA1B;AAEA,MAAMsD,KAAK,GAAGtD,IAAI,CAAC,CAAD,CAAlB;AACA,MAAMyB,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AAEA,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,kBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClD,UAAI4B,GAAG,GAAG,IAAV;;AACA,UAAID,KAAJ,EAAW;AACPC,QAAAA,GAAG,GAAG;AACFvB,UAAAA,CAAC,EAAE,MADD;AAEF,kBAAQK,IAAI,CAACC,SAAL,CAAe,CAACe,aAAD,CAAf;AAFN,SAAN;AAIH,OALD,MAKO;AACHE,QAAAA,GAAG,GAAG;AACFvB,UAAAA,CAAC,EAAE,MADD;AAEF,qBAAWK,IAAI,CAACC,SAAL,CAAe,CAACe,aAAD,CAAf;AAFT,SAAN;AAIH;;AAED1B,MAAAA,WAAW,CAACF,KAAK,GAAG,aAAT,EAAwB;AAC/B0B,QAAAA,MAAM,EAAE,MADuB;AAE/B/C,QAAAA,KAAK,EAAEmD;AAFwB,OAAxB,CAAX,CAGG7C,IAHH,CAGQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OAHZ,EAG+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAHpC;AAIH,KAlBD;AAmBH,GApBM,CAAP;AAsBH;AAED,OAAO,SAAS4C,aAAT,CAAuBxD,IAAvB,EAA6B;AAChC,MAAMyD,eAAe,GAAGzD,IAAI,CAAC,CAAD,CAAJ,CAAQ0D,SAAhC,CADgC,CACW;;AAC3C,MAAMC,YAAY,GAAG3D,IAAI,CAAC,CAAD,CAAJ,CAAQ4D,QAA7B,CAFgC,CAEO;;AACvC,MAAMC,eAAe,GAAG7D,IAAI,CAAC,CAAD,CAAJ,CAAQ8D,WAAhC;AACA,MAAMC,aAAa,GAAG/D,IAAI,CAAC,CAAD,CAAJ,CAAQgE,SAAR,GAAoB,aAA1C;AAEA,MAAMC,OAAO,GAAG;AACZjC,IAAAA,CAAC,EAAE,MADS;AAEZ,YAAQK,IAAI,CAACC,SAAL,CAAeqB,YAAf,CAFI;AAGZ,eAAWtB,IAAI,CAACC,SAAL,CAAemB,eAAf,CAHC;AAIZ,eAAWpB,IAAI,CAACC,SAAL,CAAeuB,eAAf;AAJC,GAAhB;AAOA,SAAO,IAAIvD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,kBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACoC,aAAD,EAAgB;AACvBZ,QAAAA,MAAM,EAAE,MADe;AAEvB/C,QAAAA,KAAK,EAAE6D;AAFgB,OAAhB,CAAX,CAGGvD,IAHH,CAGQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OAHZ,EAG+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAHpC;AAIH,KALD;AAMH,GAPM,CAAP;AAQH;AAED,OAAO,SAASsD,QAAT,CAAkBlE,IAAlB,EAAwB;AAE3B,MAAMmE,iBAAiB,GAAGnE,IAAI,CAAC,CAAD,CAAJ,CAAQoE,IAAlC;AAEA,MAAMd,KAAK,GAAGtD,IAAI,CAAC,CAAD,CAAlB;AACA,MAAMqE,SAAS,GAAGrE,IAAI,CAAC,CAAD,CAAJ,CAAQsE,KAAR,GAAgB,aAAlC;AAEA,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAIjB,KAAJ,EAAW;AAEPiB,IAAAA,OAAO,GAAG;AACNvC,MAAAA,CAAC,EAAE,MADG;AAEN,cAAQK,IAAI,CAACC,SAAL,CAAe,CAAC6B,iBAAD,CAAf;AAFF,KAAV;AAIH,GAND,MAMO;AACHI,IAAAA,OAAO,GAAG;AACNvC,MAAAA,CAAC,EAAE,MADG;AAEN,iBAAWK,IAAI,CAACC,SAAL,CAAe,CAAC6B,iBAAD,CAAf;AAFL,KAAV;AAIH;;AAED,SAAO,IAAI7D,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,kBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAAC0C,SAAD,EAAY;AACnBlB,QAAAA,MAAM,EAAE,MADW;AAEnB/C,QAAAA,KAAK,EAAEmE;AAFY,OAAZ,CAAX,CAGG7D,IAHH,CAGQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OAHZ,EAG+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAHpC;AAKH,KAND,EAFoC,CAQjC;AACN,GATM,CAAP,CAtB2B,CA+BxB;AAEN,C,CAAC;;AAEF,OAAO,SAAS4D,UAAT,CAAoBxE,IAApB,EAA0B;AAC7B,MAAM4B,KAAK,GAAG5B,IAAI,CAAC,CAAD,CAAlB;AACA,MAAMyE,IAAI,GAAGzE,IAAI,CAAC,CAAD,CAAjB;AAGA0E,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCtC,IAAI,CAACC,SAAL,CAAemC,IAAf,CAApC;AACA,MAAMhD,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AAGA,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,kBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACF,KAAK,GAAG,QAAT,EAAmB;AAC1BrB,QAAAA,KAAK,EAAE;AACHgC,UAAAA,QAAQ,EAAEC,IAAI,CAACC,SAAL,CAAemC,IAAf,CADP;AAEH7C,UAAAA,KAAK,EAAEA,KAFJ;AAGHC,UAAAA,cAAc,EAAE,IAHb;AAIHC,UAAAA,SAAS,EAAE,GAJR;AAIa;AAChBC,UAAAA,KAAK,EAAE,IALJ;AAKU;AACbC,UAAAA,CAAC,EAAE,MANA;AAMQ;AACXN,UAAAA,KAAK,EAAE;AAPJ;AADmB,OAAnB,CAAX,CAUGhB,IAVH,CAUQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OAVZ,EAU+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAVpC;AAYH,KAbD;AAeH,GAjBM,CAAP;AAkBH;AAED,OAAO,SAASgE,eAAT,CAAyB5E,IAAzB,EAA+B;AAElC,MAAM6E,MAAM,GAAG7E,IAAI,CAAC,CAAD,CAAnB,CAFkC,CAEV;;AAExB,MAAMyB,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AACA,MAAM8E,IAAI,GAAG9E,IAAI,CAAC,CAAD,CAAjB;AACA,MAAM0B,KAAK,GAAG1B,IAAI,CAAC,CAAD,CAAlB;AAEA,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,4BAAD,EAA+B,sCAA/B,EAAuE,qBAAvE,EAA8F,gCAA9F,CAAD,CAAX,CAA6Ic,IAA7I,CAAkJ,kBAAmE;AAAA;AAAA,UAAjEqE,eAAiE;AAAA,UAAhDC,iBAAgD;AAAA,UAA7BC,KAA6B;AAAA,UAAtBC,gBAAsB;;AACjN,UAAMC,IAAI,GAAG,IAAID,gBAAJ,CAAqBxD,KAArB,CAAb;AAEA,UAAM0D,EAAE,GAAG,IAAIL,eAAJ,CAAoB;AAACM,QAAAA,GAAG,EAAE5D;AAAN,OAApB,CAAX;AACA,UAAM6D,SAAS,GAAG,IAAIJ,gBAAJ,CAAqBJ,IAArB,CAAlB;AAEA,UAAIS,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6B,MAAM,CAAC5B,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,YAAMwC,EAAE,GAAG,IAAIP,KAAJ,CAAU;AAACQ,UAAAA,QAAQ,EAAEZ,MAAM,CAAC7B,CAAD,CAAN,CAAU0C,CAArB;AAAwBC,UAAAA,SAAS,EAAEd,MAAM,CAAC7B,CAAD,CAAN,CAAU4C,CAA7C;AAAgDC,UAAAA,gBAAgB,EAAEP;AAAlE,SAAV,CAAX;AAEAC,QAAAA,KAAK,CAACrC,IAAN,CAAWsC,EAAX;AACH;;AAED,UAAMM,MAAM,GAAG,IAAId,iBAAJ,CAAsB;AAACe,QAAAA,UAAU,EAAER,KAAb;AAAoBS,QAAAA,mBAAmB,EAAEb;AAAzC,OAAtB,CAAf;AAEAC,MAAAA,EAAE,CACGa,OADL,CACaH,MADb,EAEKpF,IAFL,CAEU,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OAFd,EAEiC,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OAFtC;AAIH,KApBD;AAqBH,GAtBM,CAAP;AAuBH;AAED,OAAO,SAASsF,iBAAT,CAA2BlG,IAA3B,EAAiC;AAEpC,MAAMmG,UAAU,GAAGnG,IAAI,CAAC,CAAD,CAAvB;AACA,MAAMoG,iBAAiB,GAAGpG,IAAI,CAAC,CAAD,CAA9B;AACA,MAAMqG,qBAAqB,GAAGrG,IAAI,CAAC,CAAD,CAAlC;AAEA,MAAMsG,KAAK,GAAGtG,IAAI,CAAC,CAAD,CAAlB;AACA,MAAMuG,gBAAgB,GAAGvG,IAAI,CAAC,CAAD,CAA7B;AAEA,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,sBAAD,EAAyB,wCAAzB,CAAD,CAAX,CAAgFc,IAAhF,CAAqF,kBAAgC;AAAA;AAAA,UAA9B8F,MAA8B;AAAA,UAAtBC,gBAAsB;;AAEjH,UAAI;AAEA,YAAIC,SAAS,GAAG,IAAhB;;AAEA,YAAIJ,KAAK,CAACT,gBAAV,EAA4B;AACxB,cAAIS,KAAK,CAACT,gBAAN,CAAuBc,IAAvB,KAAgC,MAApC,EAA4C;AACxCD,YAAAA,SAAS,GAAGJ,KAAZ;AACH,WAFD,MAEO;AACHI,YAAAA,SAAS,GAAGD,gBAAgB,CAACG,uBAAjB,CAAyCN,KAAzC,CAAZ;AACH;AAEJ,SAPD,MAOO;AACHI,UAAAA,SAAS,GAAGD,gBAAgB,CAACG,uBAAjB,CAAyCN,KAAzC,CAAZ;AACH,SAbD,CAcA;;;AACA,YAAIO,UAAU,GAAGT,iBAAiB,GAAGD,UAArC,CAfA,CAiBA;;AACA,YAAIW,mBAAmB,GAAGP,gBAAgB,GAAGM,UAA7C;AACA,YAAME,GAAG,GAAG,IAAIP,MAAJ,CAAWE,SAAS,CAACd,CAAV,GAAckB,mBAAzB,EAA8CJ,SAAS,CAAChB,CAAV,GAAcoB,mBAA5D,EAAiFJ,SAAS,CAACd,CAAV,GAAckB,mBAA/F,EAAoHJ,SAAS,CAAChB,CAAV,GAAcoB,mBAAlI,EAAuJT,qBAAvJ,CAAZ;AACA9F,QAAAA,OAAO,CAACwG,GAAD,CAAP;AACH,OArBD,CAqBE,OAAOnG,KAAP,EAAc;AAEZJ,QAAAA,MAAM,CAACI,KAAD,CAAN;AACH;AACJ,KA3BD;AA4BH,GA7BM,CAAP;AA+BH;AAED,OAAO,SAASoG,aAAT,CAAuBb,UAAvB,EAAmCC,iBAAnC,EAAsDC,qBAAtD,EAA6EC,KAA7E,EAAoFC,gBAApF,EAAsGU,QAAtG,EAAgH;AAEnHrH,EAAAA,WAAW,CAAC,CAAC,sBAAD,CAAD,CAAX,CAAsCc,IAAtC,CAA2C,kBAAc;AAAA;AAAA,QAAZ8F,MAAY;;AAErD;AACA,QAAIK,UAAU,GAAGT,iBAAiB,GAAGD,UAArC,CAHqD,CAKrD;;AACA,QAAIW,mBAAmB,GAAGP,gBAAgB,GAAGM,UAA7C,CANqD,CAOrD;;AAEAI,IAAAA,QAAQ,CAAC,IAAIT,MAAJ,CAAWF,KAAK,CAACV,CAAN,GAAUkB,mBAArB,EAA0CR,KAAK,CAACZ,CAAN,GAAUoB,mBAApD,EAAyER,KAAK,CAACV,CAAN,GAAUkB,mBAAnF,EAAwGR,KAAK,CAACZ,CAAN,GAAUoB,mBAAlH,EAAuIT,qBAAvI,CAAD,CAAR;AAEH,GAXD;AAaH;AAED,OAAO,SAASa,gBAAT,CAA0BlH,IAA1B,EAAgC;AACnC,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,+BAAD,CAAD,CAAX,CAA+Cc,IAA/C,CAAoD,kBAAkB;AAAA;AAAA,UAAhByG,UAAgB;;AAClE,UAAI;AACA5G,QAAAA,OAAO,CAAC,IAAI4G,UAAJ,CAAe;AAACrE,UAAAA,QAAQ,EAAE9C,IAAI,CAAC,CAAD;AAAf,SAAf,CAAD,CAAP;AACH,OAFD,CAEE,OAAOoH,GAAP,EAAY;AACV5G,QAAAA,MAAM,CAAC4G,GAAD,CAAN;AACH;AACJ,KAND;AAOH,GARM,CAAP;AASH;AAED,OAAO,SAASC,kBAAT,CAA4BrH,IAA5B,EAAkC;AAErC,MAAMsG,KAAK,GAAGtG,IAAI,CAAC,CAAD,CAAlB;AAEA,MAAMyB,KAAK,GAAGzB,IAAI,CAAC,CAAD,CAAlB;AAEA,MAAM8E,IAAI,GAAG9E,IAAI,CAAC,CAAD,CAAjB;AAEA,MAAM0B,KAAK,GAAG1B,IAAI,CAAC,CAAD,CAAlB;AAEA,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CAAC,cAAD,CAAD,CAAX,CAA8Bc,IAA9B,CAAmC,kBAAmB;AAAA;AAAA,UAAjBiB,WAAiB;;AAClDA,MAAAA,WAAW,CAACF,KAAK,GAAG,kBAAT,EAA6B;AACpCrB,QAAAA,KAAK,EAAE;AACH,eAAKkG,KAAK,CAAClE,QAAN,CAAewD,CADjB;AAEH,eAAKU,KAAK,CAAClE,QAAN,CAAesD,CAFjB;AAGH,kBAAQZ,IAHL;AAIH,mBAASpD,KAJN;AAKH,0BAAgB,EALb;AAMH,eAAK;AANF;AAD6B,OAA7B,CAAX,CASGhB,IATH,CASQ,UAAAC,IAAI;AAAA,eAAIJ,OAAO,CAACI,IAAD,CAAX;AAAA,OATZ,EAS+B,UAAAC,KAAK;AAAA,eAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,OATpC;AAUH,KAXD;AAYH,GAbM,CAAP;AAcH;AAED,OAAO,SAAS0G,sBAAT,CAAgCtH,IAAhC,EAAsC;AACzC;AACA,MAAMuH,GAAG,GAAGvH,IAAI,CAAC,CAAD,CAAhB;AACA,MAAMwH,GAAG,GAAGxH,IAAI,CAAC,CAAD,CAAhB;AACA,MAAMyH,IAAI,GAAGF,GAAG,CAAC7B,CAAjB;AACA,MAAMgC,IAAI,GAAGF,GAAG,CAAC9B,CAAjB;AACA,MAAIiC,IAAI,GAAGJ,GAAG,CAAC3B,CAAf;AACA,MAAIgC,IAAI,GAAGJ,GAAG,CAAC5B,CAAf;AAGA,MAAMiC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASN,IAAI,GAAGK,IAAI,CAACE,EAAZ,GAAiB,GAA1B,CAAf;AAEAL,EAAAA,IAAI,GAAGA,IAAI,GAAGE,MAAd;AACAD,EAAAA,IAAI,GAAGA,IAAI,GAAGC,MAAd;AAEA,MAAMI,IAAI,GAAGL,IAAI,GAAGD,IAApB;AACA,MAAMO,IAAI,GAAGR,IAAI,GAAGD,IAApB;;AAEA,MAAIK,IAAI,CAACK,GAAL,CAASF,IAAT,IAAiB,WAArB,EAAkC;AAE9B,QAAIC,IAAI,GAAG,CAAX,EACI,OAAO,GAAP,CADJ,KAGI,OAAO,CAAP;AACH;;AAEL,SAAOJ,IAAI,CAACM,KAAL,CAAWH,IAAX,EAAiBC,IAAjB,IAAyB,GAAzB,GAA+BJ,IAAI,CAACE,EAA3C;AAEH;AAED,OAAO,SAASK,cAAT,CAAwBrI,IAAxB,EAA8B;AAEjC,MAAMsI,MAAM,GAAGtI,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAf;AAEA,MAAMuI,UAAU,GAAGvI,IAAI,CAAC,CAAD,CAAvB;AACA,MAAMwI,QAAQ,GAAGxI,IAAI,CAAC,CAAD,CAArB;AACA,MAAIyI,IAAI,GAAGzI,IAAI,CAAC,CAAD,CAAf;AACA,MAAM0I,MAAM,GAAG1I,IAAI,CAAC,CAAD,CAAnB;;AACJ,MAAG0I,MAAM,KAAK,aAAd,EAA4B;AACxBD,IAAAA,IAAI,IAAI,CAAR;AACH;;AAEG,MAAIE,WAAJ;;AACA,MAAID,MAAM,KAAI,aAAd,EAA4B;AACxBC,IAAAA,WAAW,GAAG,MAAd;AACH,GAFD,MAGI;AACAA,IAAAA,WAAW,GAAG,OAAd;AACH;;AAED,MAAI,OAAOL,MAAP,IAAiB,WAArB,EAAkC;AAC9B;AACH;;AACD,SAAO,IAAIhI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCZ,IAAAA,WAAW,CAAC,CACR,cADQ,EAER,uBAFQ,EAGR,qBAHQ,EAIR,+BAJQ,EAKR,+BALQ,EAMR,iCANQ,EAOR,YAPQ,CAAD,CAAX,CAQGc,IARH,CAQQ,kBAQF;AAAA;AAAA,UAPFkI,OAOE;AAAA,UANFC,OAME;AAAA,UALF5D,KAKE;AAAA,UAJF6D,gBAIE;AAAA,UAHFC,gBAGE;AAAA,UAFFC,kBAEE;AAAA,UADFC,KACE;;AACF,UAAI;AACA,YAAIC,MAAM,GAAG,IAAIjE,KAAJ,CAAU;AAACW,UAAAA,CAAC,EAAC0C,MAAM,CAAC1C,CAAV;AAAaF,UAAAA,CAAC,EAAC4C,MAAM,CAAC5C;AAAtB,SAAV,CAAb;AACA,YAAIyD,mBAAmB,GAAG,IAAIH,kBAAJ,CAAuB;AAACI,UAAAA,KAAK,EAAE,UAAR;AAAoBC,UAAAA,KAAK,EAAE,OAA3B;AAAoCC,UAAAA,IAAI,EAAE;AAA1C,SAAvB,CAA1B;AAEA,YAAIC,MAAM,GAAG,IAAIT,gBAAJ,CAAqBA,gBAAgB,CAACU,WAAtC,EAAmD,IAAIT,gBAAJ,CAAqBA,gBAAgB,CAACS,WAAtC,EAC5D,IAAIP,KAAJ,CAAU,SAAV,CAD4D,EACtC,CADsC,CAAnD,EACiB,IAAIA,KAAJ,CAAUN,WAAV,CADjB,CAAb;AAGAQ,QAAAA,mBAAmB,CAACM,KAApB,GAA4BjB,QAA5B;AACA,YAAIkB,MAAM,GAAG,EAAb;AAEAA,QAAAA,MAAM,GAAGA,MAAM,GAAI5B,IAAI,CAACK,GAAL,CAASI,UAAT,IAAuB,CAA1C,CAVA,CAYA;;AAEA,YAAIoB,GAAG,GAAG,IAAI7J,MAAJ,CAAWoJ,MAAM,CAACxD,CAAlB,EAAqBwD,MAAM,CAACtD,CAA5B,CAAV;AAEIlB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB8D,IAAtB;AACJ,YAAImB,WAAW,GAAGpB,QAAQ,GAAGC,IAA7B;;AACA,YAAImB,WAAW,GAAG,CAAlB,EAAqB;AACjBA,UAAAA,WAAW,IAAI,GAAf;AACH;;AACD,YAAIC,gBAAgB,GAAGrB,QAAQ,GAAGC,IAAlC;;AACA,YAAIoB,gBAAgB,GAAG,GAAvB,EAA4B;AACxBA,UAAAA,gBAAgB,IAAI,GAApB;AACH;;AACD,YAAIC,SAAS,GAAGH,GAAG,CAACI,gBAAJ,CAAqBL,MAArB,EAA6BE,WAA7B,CAAhB;AACA,YAAII,cAAc,GAAGL,GAAG,CAACI,gBAAJ,CAAqBL,MAArB,EAA6BG,gBAA7B,CAArB;AAGA,YAAMI,WAAW,GAAG;AAChB,mBAAS,CACL,CACI,CACIf,MAAM,CAACtD,CADX,EACcsD,MAAM,CAACxD,CADrB,CADJ,EAII,CACIoE,SAAS,CAACI,GADd,EACmBJ,SAAS,CAACK,GAD7B,CAJJ,EAOI,CAACH,cAAc,CAACE,GAAhB,EAAqBF,cAAc,CAACG,GAApC,CAPJ,CADK,CADO;AAYhB,8BAAoB;AAChB,oBAAQ;AADQ;AAZJ,SAApB;AAiBAZ,QAAAA,MAAM,CAACF,KAAP,CAAae,CAAb,GAAiB,KAAM7B,UAAU,GAAG,GAAd,GAAqB,CAA3C;AACA,YAAI8B,OAAO,GAAG,IAAIxB,OAAJ,CAAYoB,WAAZ,CAAd;AACA,YAAIK,IAAI,GAAG,IAAI1B,OAAJ,CAAYyB,OAAZ,EAAqBd,MAArB,CAAX,CAhDA,CAiDA;;AACA,YAAI/D,EAAE,GAAG,IAAIoD,OAAJ,CAAYM,MAAZ,EAAoBC,mBAApB,CAAT,CAlDA,CAoDA;;AACA5I,QAAAA,OAAO,CAAC,CAAC+J,IAAD,EAAO9E,EAAP,CAAD,CAAP;AACH,OAtDD,CAsDE,OAAO4B,GAAP,EAAY;AACV5G,QAAAA,MAAM,CAAC4G,GAAD,CAAN;AACH;AAEJ,KA3ED;AA4EH,GA7EM,CAAP,CAvBiC,CAqGjC;;AAEA;;;;AASH;AAAA,C,CAED;;AAEA,OAAO,SAAWzH,aAAX,CAAyB4K,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAM1K,IAAI,CAAC2K,SAAD,EAAY,CAACD,eAAD,CAAZ,CAAV;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,gBAAsBC,SAAtB;AAAA;AAAA;;;;;2BAAO,iBAAyBxK,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGyK,YAAAA,OADH,GACa,oDAAoDzK,IAAI,CAAC,CAAD,CADrE;AAAA;AAAA;AAAA,mBAIwB0K,KAAK,CAACD,OAAD,CAJ7B;;AAAA;AAIOE,YAAAA,QAJP;;AAAA,iBAKKA,QAAQ,CAACC,EALd;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAM2BD,QAAQ,CAACE,IAAT,EAN3B;;AAAA;AAMWC,YAAAA,OANX;AAAA,8CAOYA,OAPZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUCpG,YAAAA,OAAO,CAAC9D,KAAR,CAAc,sBAAd;AAVD,kBAWO,IAAImK,KAAJ,CAAU,qBAAV,CAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeP,gBAAsBC,YAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACGP,YAAAA,OADH,GACa,2CADb;AAAA;AAAA;AAAA,mBAIwBC,KAAK,CAACD,OAAD,CAJ7B;;AAAA;AAIOE,YAAAA,QAJP;;AAAA,iBAKKA,QAAQ,CAACC,EALd;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAM2BD,QAAQ,CAACE,IAAT,EAN3B;;AAAA;AAMWC,YAAAA,OANX;AAAA,8CAOYA,OAPZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUCpG,YAAAA,OAAO,CAAC9D,KAAR,CAAc,sBAAd;AAVD,kBAWO,IAAImK,KAAJ,CAAU,qBAAV,CAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeP,gBAAsBE,YAAtB;AAAA;AAAA;;;;;2BAAO,kBAA4BjL,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACA;AACA;AACMkL,YAAAA,KAJH,GAIW,uCAJX;AAMCT,YAAAA,OAND,GAMWS,KAAK,GAAG,iEANnB;;AAOH,gBAAIlL,IAAI,CAAC,CAAD,CAAJ,KAAY,SAAhB,EAA2B;AACvByK,cAAAA,OAAO,IAAI,+BAA+BzK,IAAI,CAAC,CAAD,CAA9C;AACH;;AATE;AAAA;AAAA,mBAawB0K,KAAK,CAACD,OAAD,CAb7B;;AAAA;AAaOE,YAAAA,QAbP;;AAAA,iBAcKA,QAAQ,CAACC,EAdd;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAe2BD,QAAQ,CAACE,IAAT,EAf3B;;AAAA;AAeWC,YAAAA,OAfX;AAAA,8CAgBYA,OAhBZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBCpG,YAAAA,OAAO,CAAC9D,KAAR,CAAc,+BAAd;AApBD,kBAqBO,IAAImK,KAAJ,CAAU,4BAAV,CArBP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {loadModules} from 'esri-loader';\r\nimport {call} from 'redux-saga/effects';\r\nimport LatLon from './geodesy/latlon-spherical';\r\n\r\nexport function getGroups(args) {\r\n    const portal = args[0];\r\n    const title = args[1];\r\n    let queryParams = {\r\n\r\n        query: \"title:\" + title,\r\n        num: 50\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n        portal\r\n            .queryGroups(queryParams)\r\n            .then(resp => resolve(resp), error => reject(error));\r\n\r\n    })\r\n}\r\n\r\nexport function layerURLs(props) {\r\n\r\n    if (props.auth.isDev) {\r\n\r\n        return props.config.featureURLs_dev_edit;\r\n    } else if (props.auth.isEditor) {\r\n\r\n        return props.config.featureURLs_prod_edit;\r\n    } else if (props.auth.isViewer) {\r\n\r\n        return props.config.featureURLs_view;\r\n    } else \r\n        return null;\r\n    }\r\n\r\nexport function getSupportById(args) {\r\n    const id = args[0];\r\n    const layer = args[1];\r\n    const outSR = args[2];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/query', {\r\n                query: {\r\n                    where: \"OBJECTID = \" + id,\r\n                    returnGeometry: true,\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\",\r\n                    outSR: outSR // format\r\n\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n\r\n        });\r\n    })\r\n\r\n}\r\n\r\nexport function getSupportByExtent(args) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const extent = args[0];\r\n\r\n        const supportLayer = args[1];\r\n\r\n        const outSR = args[2];\r\n        const where = args[3];\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(supportLayer + '/query', {\r\n                query: {\r\n                    geometry: JSON.stringify(extent),\r\n                    where:where,\r\n                    returnGeometry: true,\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\", // format\r\n                    outSR: outSR\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n\r\n           \r\n        });\r\n\r\n    })\r\n}\r\n\r\nexport function getRelatedSigns(args) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const feature = args[0]\r\n\r\n        const layer = args[1]\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + \"/query\", {\r\n                query: {\r\n                    where: \"SUPPORTID='\" + feature.attributes.GLOBALID + \"'\",\r\n                    orderByFields: \"SIGNORDER\",\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\" // format\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n\r\n        });\r\n    })\r\n}\r\n\r\nexport function getRelatedTimebands(args) {\r\n    const layer = args[1]\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/query', {\r\n                query: {\r\n                    where: \"SIGNID='\" + args[0].attributes.GLOBALID + \"'\",\r\n\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\" // format\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function saveSignOrder(args) {\r\n    const features = args[0];\r\n    const layer = args[1];\r\n    let pureFeatures = [];\r\n    for (let i = 0; i < features.length; i++) {\r\n        pureFeatures.push(features[i].feature)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/applyEdits', {\r\n                method: 'post',\r\n                query: {\r\n                    f: \"json\", // format\r\n                    \"updates\": JSON.stringify(pureFeatures)\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function saveSupport(args/*updateFeature, isNew, layer */) {\r\n    const updateFeature = args[0];\r\n\r\n    const isNew = args[1];\r\n    const layer = args[2];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            let set = null;\r\n            if (isNew) {\r\n                set = {\r\n                    f: \"json\",\r\n                    \"adds\": JSON.stringify([updateFeature])\r\n                };\r\n            } else {\r\n                set = {\r\n                    f: \"json\",\r\n                    \"updates\": JSON.stringify([updateFeature])\r\n                }\r\n            }\r\n\r\n            esriRequest(layer + '/applyEdits', {\r\n                method: 'post',\r\n                query: set\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function saveTimebands(args) {\r\n    const updateTimebands = args[0].editBands; //array\r\n    const newTimebands = args[0].newBands; //array\r\n    const deleteTimebands = args[0].deleteBands;\r\n    const timebandLayer = args[1].timebands + \"/applyEdits\";\r\n\r\n    const bandSet = {\r\n        f: \"json\",\r\n        \"adds\": JSON.stringify(newTimebands),\r\n        \"updates\": JSON.stringify(updateTimebands),\r\n        \"deletes\": JSON.stringify(deleteTimebands)\r\n    };\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(timebandLayer, {\r\n                method: 'post',\r\n                query: bandSet\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n}\r\n\r\nexport function saveSign(args) {\r\n\r\n    const updateSignFeature = args[0].sign;\r\n\r\n    const isNew = args[1];\r\n    const signLayer = args[2].signs + \"/applyEdits\";\r\n\r\n    let signSet = null;\r\n\r\n    if (isNew) {\r\n\r\n        signSet = {\r\n            f: \"json\",\r\n            \"adds\": JSON.stringify([updateSignFeature])\r\n        };\r\n    } else {\r\n        signSet = {\r\n            f: \"json\",\r\n            \"updates\": JSON.stringify([updateSignFeature])\r\n        };\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(signLayer, {\r\n                method: 'post',\r\n                query: signSet\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n\r\n        }) // end of then for loadModules\r\n    }) //end of promise\r\n\r\n} // end of function\r\n\r\nexport function superQuery(args) {\r\n    const where = args[0];\r\n    const geom = args[1];\r\n\r\n\r\n    console.log('geom', geom)\r\n    console.log('JSON.stringify(geom)', JSON.stringify(geom))\r\n    const layer = args[2];\r\n\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/query', {\r\n                query: {\r\n                    geometry: JSON.stringify(geom),\r\n                    where: where,\r\n                    returnGeometry: true,\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\", // format\r\n                    outSR: 4326\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n\r\n        });\r\n\r\n    })\r\n}\r\n\r\nexport function projectGeometry(args) {\r\n\r\n    const coords = args[0]; //array\r\n\r\n    const layer = args[1];\r\n    const inSR = args[2];\r\n    const outSR = args[3]\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/tasks/GeometryService\", \"esri/tasks/support/ProjectParameters\", \"esri/geometry/Point\", \"esri/geometry/SpatialReference\"]).then(([GeometryService, ProjectParameters, Point, SpatialReference]) => {\r\n            const outS = new SpatialReference(outSR);\r\n\r\n            const gS = new GeometryService({url: layer});\r\n            const inSpatRef = new SpatialReference(inSR);\r\n\r\n            let geoms = [];\r\n\r\n            for (let i = 0; i < coords.length; i++) {\r\n                const pt = new Point({latitude: coords[i].y, longitude: coords[i].x, spatialReference: inSpatRef})\r\n\r\n                geoms.push(pt)\r\n            }\r\n\r\n            const params = new ProjectParameters({geometries: geoms, outSpatialReference: outS})\r\n\r\n            gS\r\n                .project(params)\r\n                .then(resp => resolve(resp), error => reject(error))\r\n\r\n        })\r\n    })\r\n}\r\n\r\nexport function pointToExtentSaga(args) {\r\n\r\n    const view_width = args[0];\r\n    const view_extent_width = args[1];\r\n    const view_spatialReference = args[2];\r\n\r\n    const point = args[3];\r\n    const toleranceInPixel = args[4];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/geometry/Extent\", \"esri/geometry/support/webMercatorUtils\"]).then(([Extent, webMercatorUtils]) => {\r\n\r\n            try {\r\n\r\n                let mercPoint = null;\r\n\r\n                if (point.spatialReference) {\r\n                    if (point.spatialReference.wkid === 102100) {\r\n                        mercPoint = point;\r\n                    } else {\r\n                        mercPoint = webMercatorUtils.geographicToWebMercator(point)\r\n                    }\r\n\r\n                } else {\r\n                    mercPoint = webMercatorUtils.geographicToWebMercator(point)\r\n                }\r\n                //calculate map coords represented per pixel\r\n                let pixelWidth = view_extent_width / view_width;\r\n\r\n                //calculate map coords for tolerance in pixel\r\n                let toleraceInMapCoords = toleranceInPixel * pixelWidth;\r\n                const ext = new Extent(mercPoint.x - toleraceInMapCoords, mercPoint.y - toleraceInMapCoords, mercPoint.x + toleraceInMapCoords, mercPoint.y + toleraceInMapCoords, view_spatialReference);\r\n                resolve(ext)\r\n            } catch (error) {\r\n\r\n                reject(error)\r\n            }\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function pointToExtent(view_width, view_extent_width, view_spatialReference, point, toleranceInPixel, callback) {\r\n\r\n    loadModules([\"esri/geometry/Extent\"]).then(([Extent]) => {\r\n\r\n        //calculate map coords represented per pixel\r\n        let pixelWidth = view_extent_width / view_width;\r\n\r\n        //calculate map coords for tolerance in pixel\r\n        let toleraceInMapCoords = toleranceInPixel * pixelWidth;\r\n        //calculate & return computed extent\r\n\r\n        callback(new Extent(point.x - toleraceInMapCoords, point.y - toleraceInMapCoords, point.x + toleraceInMapCoords, point.y + toleraceInMapCoords, view_spatialReference))\r\n\r\n    })\r\n\r\n}\r\n\r\nexport function createFeatureSet(args) {\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/tasks/support/FeatureSet\"]).then(([FeatureSet]) => {\r\n            try {\r\n                resolve(new FeatureSet({features: args[0]}))\r\n            } catch (err) {\r\n                reject(err)\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function getPointOnRouteLRS(args) {\r\n\r\n    const point = args[0];\r\n\r\n    const layer = args[1];\r\n\r\n    const inSR = args[2];\r\n\r\n    const outSR = args[3];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer + '/getPointOnRoute', {\r\n                query: {\r\n                    'x': point.geometry.x,\r\n                    'y': point.geometry.y,\r\n                    'inSR': inSR,\r\n                    'outSR': outSR,\r\n                    'searchRadius': 50,\r\n                    'f': \"json\"\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n}\r\n\r\nexport function calculateBearingPoints(args) {\r\n    // wkid 4326 ONLY\r\n    const pt1 = args[0];\r\n    const pt2 = args[1];\r\n    const lat1 = pt1.y;\r\n    const lat2 = pt2.y;\r\n    let lon1 = pt1.x;\r\n    let lon2 = pt2.x;\r\n\r\n  \r\n    const xscale = Math.cos(lat1 * Math.PI / 180);\r\n\r\n    lon1 = lon1 * xscale;\r\n    lon2 = lon2 * xscale;\r\n\r\n    const dlon = lon2 - lon1;\r\n    const dlat = lat2 - lat1;\r\n\r\n    if (Math.abs(dlon) < 0.000000001) {\r\n\r\n        if (dlat < 0) \r\n            return 180;\r\n        else \r\n            return 0;\r\n        }\r\n    \r\n    return Math.atan2(dlon, dlat) * 180 / Math.PI;\r\n\r\n}\r\n\r\nexport function createTriangle(args) {\r\n   \r\n    const point1 = args[0][0];\r\n    \r\n    const imagePitch = args[1];\r\n    const imageYaw = args[2];\r\n    let hFov = args[3];\r\n    const source = args[4];\r\nif(source === \"StreetSmart\"){\r\n    hFov /= 2;\r\n}\r\n\r\n    let sourceColor;\r\n    if (source ===\"StreetSmart\"){\r\n        sourceColor = \"blue\";\r\n    }\r\n    else{\r\n        sourceColor = \"green\"\r\n    }\r\n\r\n    if (typeof point1 == 'undefined') {\r\n        return\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\r\n            \"esri/Graphic\",\r\n            \"esri/geometry/Polygon\",\r\n            \"esri/geometry/Point\",\r\n            \"esri/symbols/SimpleFillSymbol\",\r\n            \"esri/symbols/SimpleLineSymbol\",\r\n            \"esri/symbols/SimpleMarkerSymbol\",\r\n            \"esri/Color\"\r\n        ]).then(([\r\n            Graphic,\r\n            Polygon,\r\n            Point,\r\n            SimpleFillSymbol,\r\n            SimpleLineSymbol,\r\n            SimpleMarkerSymbol,\r\n            Color\r\n        ]) => {\r\n            try {\r\n                let point2 = new Point({x:point1.x, y:point1.y})\r\n                let pictureMarkerSymbol = new SimpleMarkerSymbol({style: \"triangle\", color: \"black\", size: \"10px\"});\r\n\r\n                let symbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, \r\n                    new Color(\"#FFFFFF\"), 2), new Color(sourceColor));\r\n\r\n                pictureMarkerSymbol.angle = imageYaw;\r\n                let radius = 45;\r\n\r\n                radius = radius - (Math.abs(imagePitch) / 2);\r\n\r\n                // coneLayer.removeAll();\r\n\r\n                let bob = new LatLon(point2.y, point2.x);\r\n               \r\n                    console.log('hFov :', hFov);\r\n                let portAzimuth = imageYaw - hFov;\r\n                if (portAzimuth < 0) {\r\n                    portAzimuth += 360;\r\n                }\r\n                let starboardAzimuth = imageYaw + hFov;\r\n                if (starboardAzimuth > 360) {\r\n                    starboardAzimuth -= 360;\r\n                }\r\n                let portPoint = bob.destinationPoint(radius, portAzimuth);\r\n                let starboardPoint = bob.destinationPoint(radius, starboardAzimuth);\r\n           \r\n\r\n                const polygonJson = {\r\n                    \"rings\": [\r\n                        [\r\n                            [\r\n                                point2.x, point2.y\r\n                            ],\r\n                            [\r\n                                portPoint.lon, portPoint.lat\r\n                            ],\r\n                            [starboardPoint.lon, starboardPoint.lat]\r\n                        ]\r\n                    ],\r\n                    \"spatialReference\": {\r\n                        \"wkid\": 4326\r\n                    }\r\n                };\r\n                \r\n                symbol.color.a = .5 - (imagePitch * .01) / 2;\r\n                let polygon = new Polygon(polygonJson);\r\n                let graf = new Graphic(polygon, symbol);\r\n                // coneLayer.add(graf);\r\n                let pt = new Graphic(point2, pictureMarkerSymbol);\r\n              \r\n                //  coneLayer.add(pt);\r\n                resolve([graf, pt])\r\n            } catch (err) {\r\n                reject(err)\r\n            }\r\n\r\n        })\r\n    })\r\n    //   mp = point;\r\n\r\n    /*\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n};\r\n\r\n//NON-ESRI DATA CALLS\r\n\r\nexport function * muttGenerator(muttQueryString) {\r\n    yield call(getMUTCDS, [muttQueryString])\r\n}\r\n\r\nexport async function getMUTCDS(args) {\r\n    const baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd?code=\" + args[0];\r\n\r\n    try {\r\n        const response = await fetch(baseUrl);\r\n        if (response.ok) {\r\n            const results = await response.json();\r\n            return results;\r\n        }\r\n    } catch (err) {\r\n        console.error('Something went wrong');\r\n        throw new Error('Bad stuff happened.');\r\n    }\r\n}\r\n\r\nexport async function getAllMUTCDS() {\r\n    const baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd\"\r\n\r\n    try {\r\n        const response = await fetch(baseUrl);\r\n        if (response.ok) {\r\n            const results = await response.json();\r\n            return results;\r\n        }\r\n    } catch (err) {\r\n        console.error('Something went wrong');\r\n        throw new Error('Bad stuff happened.');\r\n    }\r\n}\r\n\r\nexport async function getLocation2(args) {\r\n    // in the old version I coded stuff for it to take roadways and street segments\r\n    // not sure where I was going with that , but I will code it now to be able to\r\n    // expand if those come back up as requests. so args[1] will always be 'address'\r\n    const proxy = \"http://ddotgisapp02/proxy/proxy.ashx?\"\r\n  \r\n    let baseUrl = proxy + \"http://citizenatlas.dc.gov/newwebservices/locationverifier.asmx\";\r\n    if (args[1] === \"address\") {\r\n        baseUrl += \"/findLocation2?f=json&str=\" + args[0];\r\n    }\r\n\r\n    try {\r\n  \r\n        const response = await fetch(baseUrl);\r\n        if (response.ok) {\r\n            const results = await response.json();\r\n            return results;\r\n        }\r\n    } catch (err) {\r\n  \r\n        console.error('Something went wrong with MAR');\r\n        throw new Error('Bad stuff happened. In MAR');\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}