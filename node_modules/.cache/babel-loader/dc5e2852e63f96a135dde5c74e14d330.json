{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\n// Copyright 2019 Esri\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//     http://www.apache.org/licenses/LICENSE-2.0\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.​\n\n/**\r\n * Combine your Sagas into one output\r\n */\nimport { all, fork } from 'redux-saga/effects';\nimport * as authSagas from './_auth';\nimport * as configSagas from './_config';\nimport * as setSupportSaga from './_setSupport';\nimport * as signOrderSaga from './_setSignOrder';\nimport * as saveSupportSaga from './_saveSupport';\nimport * as saveSignSaga from './_saveSign';\nimport * as mapLoadedSaga from './_mapLoaded';\nimport * as newSignSaga from './_newSign';\nimport * as querySaga from './_query';\nimport * as streetSmartSaga from './_openStreetSmart';\nimport * as newSupportSaga from './_newSupport';\nimport * as getConeSaga from './_getNewCone';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([].concat(_toConsumableArray(Object.values(authSagas)), _toConsumableArray(Object.values(configSagas)), _toConsumableArray(Object.values(setSupportSaga)), _toConsumableArray(Object.values(signOrderSaga)), _toConsumableArray(Object.values(saveSupportSaga)), _toConsumableArray(Object.values(mapLoadedSaga)), _toConsumableArray(Object.values(saveSignSaga)), _toConsumableArray(Object.values(newSignSaga)), _toConsumableArray(Object.values(querySaga)), _toConsumableArray(Object.values(streetSmartSaga)), _toConsumableArray(Object.values(newSupportSaga)), _toConsumableArray(Object.values(getConeSaga))).map(fork));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\index.js"],"names":["rootSaga","all","fork","authSagas","configSagas","setSupportSaga","signOrderSaga","saveSupportSaga","saveSignSaga","mapLoadedSaga","newSignSaga","querySaga","streetSmartSaga","newSupportSaga","getConeSaga","Object","values","map"],"mappings":";;;;;yBAgCyBA,Q;;AAhCzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAIA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AAEA,OAAO,KAAKC,SAAZ,MAA2B,SAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,WAA7B;AACA,OAAO,KAAKC,cAAZ,MAAgC,eAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,KAAKC,eAAZ,MAAiC,gBAAjC;AACA,OAAO,KAAKC,YAAZ,MAA8B,aAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,cAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,YAA7B;AACA,OAAO,KAAKC,SAAZ,MAA2B,UAA3B;AACA,OAAO,KAAKC,eAAZ,MAAiC,oBAAjC;AACA,OAAO,KAAKC,cAAZ,MAAgC,eAAhC;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAIA,eAAe,SAAUd,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,6BACLc,MAAM,CAACC,MAAP,CAAcb,SAAd,CADK,sBAELY,MAAM,CAACC,MAAP,CAAcZ,WAAd,CAFK,sBAGLW,MAAM,CAACC,MAAP,CAAcX,cAAd,CAHK,sBAILU,MAAM,CAACC,MAAP,CAAcV,aAAd,CAJK,sBAKLS,MAAM,CAACC,MAAP,CAAcT,eAAd,CALK,sBAMLQ,MAAM,CAACC,MAAP,CAAcP,aAAd,CANK,sBAOLM,MAAM,CAACC,MAAP,CAAcR,YAAd,CAPK,sBAQLO,MAAM,CAACC,MAAP,CAAcN,WAAd,CARK,sBASLK,MAAM,CAACC,MAAP,CAAcL,SAAd,CATK,sBAULI,MAAM,CAACC,MAAP,CAAcJ,eAAd,CAVK,sBAWLG,MAAM,CAACC,MAAP,CAAcH,cAAd,CAXK,sBAYLE,MAAM,CAACC,MAAP,CAAcF,WAAd,CAZK,GAcRG,GAdQ,CAcJf,IAdI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// Copyright 2019 Esri\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.​\r\n\r\n/**\r\n * Combine your Sagas into one output\r\n */\r\n\r\nimport { all, fork } from 'redux-saga/effects';\r\n\r\nimport * as authSagas from './_auth';\r\nimport * as configSagas from './_config';\r\nimport * as setSupportSaga from './_setSupport';\r\nimport * as signOrderSaga from './_setSignOrder';\r\nimport * as saveSupportSaga from './_saveSupport';\r\nimport * as saveSignSaga from './_saveSign';\r\nimport * as mapLoadedSaga from './_mapLoaded';\r\nimport * as newSignSaga from './_newSign';\r\nimport * as querySaga from './_query';\r\nimport * as streetSmartSaga from './_openStreetSmart';\r\nimport * as newSupportSaga from './_newSupport';\r\nimport * as getConeSaga from './_getNewCone';\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    ...Object.values(authSagas),\r\n    ...Object.values(configSagas),\r\n    ...Object.values(setSupportSaga),\r\n    ...Object.values(signOrderSaga),\r\n    ...Object.values(saveSupportSaga),\r\n    ...Object.values(mapLoadedSaga),\r\n    ...Object.values(saveSignSaga),\r\n    ...Object.values(newSignSaga),\r\n    ...Object.values(querySaga),\r\n    ...Object.values(streetSmartSaga),\r\n    ...Object.values(newSupportSaga),\r\n    ...Object.values(getConeSaga)\r\n    // more sagas from different files\r\n  ].map(fork));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}