{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(openStreetSmart),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchStreetSmart);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { projectGeometry, getSupportByExtent, pointToExtentSaga } from '../../utils/JSAPI';\nimport { arcgisToGeoJSON } from '@esri/arcgis-to-geojson-utils'; // WORKER //\n\nfunction openStreetSmart(action) {\n  var projectResult, geoms, localExtent, features, ssOverlayFeatures;\n  return _regeneratorRuntime.wrap(function openStreetSmart$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('action.payload.ssFeature :', action.payload.ssFeature);\n          _context.next = 4;\n          return call(projectGeometry, [[action.payload.ssFeature.geometry], action.payload.layers.geometryService, action.payload.inSR, action.payload.outSR]);\n\n        case 4:\n          projectResult = _context.sent;\n          geoms = projectResult;\n          console.log('geoms :', geoms);\n          action.payload.ssFeature.geometry = geoms;\n          _context.next = 10;\n          return call(pointToExtentSaga, [action.payload.viewWidth, action.payload.viewExtentWidth, action.payload.view_spatRef, action.payload.ssFeature.geometry, 400 //tolerance in pixels\n          ]);\n\n        case 10:\n          localExtent = _context.sent;\n          _context.next = 13;\n          return call(getSupportByExtent, [localExtent, action.payload.layers.supports, 2248]);\n\n        case 13:\n          features = _context.sent;\n          ssOverlayFeatures = features.data.features;\n          _context.next = 17;\n          return put({\n            type: graphicTypes.SHOW_STREETSMART_VIEWER,\n            payload: {\n              leftVisible: true,\n              ssEdit: false,\n              ssView: true,\n              ssFeature: action.payload.ssFeature,\n              ssOverlayFeatures: ssOverlayFeatures\n            }\n          });\n\n        case 17:\n          _context.next = 22;\n          break;\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/openStreetSmart, ', _context.t0);\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 19]]);\n} // WATCHER //\n\n\nexport function watchStreetSmart() {\n  return _regeneratorRuntime.wrap(function watchStreetSmart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_openStreetSmart.js"],"names":["openStreetSmart","watchStreetSmart","call","put","takeLatest","types","graphicTypes","projectGeometry","getSupportByExtent","pointToExtentSaga","arcgisToGeoJSON","action","console","log","payload","ssFeature","geometry","layers","geometryService","inSR","outSR","projectResult","geoms","viewWidth","viewExtentWidth","view_spatRef","localExtent","supports","features","ssOverlayFeatures","data","type","SHOW_STREETSMART_VIEWER","leftVisible","ssEdit","ssView","START_STREETSMART_VIEWER"],"mappings":";;;;yBAOWA,e;;;yBAuCOC,gB;;AA9ClB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AACA,SAAQC,eAAR,EAAyBC,kBAAzB,EAA6CC,iBAA7C,QAAqE,mBAArE;AACA,SAAQC,eAAR,QAA8B,+BAA9B,C,CAEA;;AAEA,SAAWV,eAAX,CAA2BW,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,MAAM,CAACG,OAAP,CAAeC,SAAzD;AAFA;AAG8B,iBAAMb,IAAI,CAACK,eAAD,EAAkB,CAC9C,CAACI,MAAM,CAACG,OAAP,CAAeC,SAAf,CAAyBC,QAA1B,CAD8C,EAE9CL,MAAM,CAACG,OAAP,CAAeG,MAAf,CAAsBC,eAFwB,EAG9CP,MAAM,CAACG,OAAP,CAAeK,IAH+B,EAI9CR,MAAM,CAACG,OAAP,CAAeM,KAJ+B,CAAlB,CAAV;;AAH9B;AAGcC,UAAAA,aAHd;AAUcC,UAAAA,KAVd,GAUsBD,aAVtB;AAWQT,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,KAAvB;AACAX,UAAAA,MAAM,CAACG,OAAP,CAAeC,SAAf,CAAyBC,QAAzB,GAAoCM,KAApC;AAZR;AAc4B,iBAAMpB,IAAI,CAACO,iBAAD,EAAoB,CAC9CE,MAAM,CAACG,OAAP,CAAeS,SAD+B,EACpBZ,MAAM,CAACG,OAAP,CAAeU,eADK,EACYb,MAAM,CAACG,OAAP,CAAeW,YAD3B,EACyCd,MAAM,CAACG,OAAP,CAAeC,SAAf,CAAyBC,QADlE,EAC4E,GAD5E,CACgF;AADhF,WAApB,CAAV;;AAd5B;AAccU,UAAAA,WAdd;AAAA;AAmByB,iBAAMxB,IAAI,CAACM,kBAAD,EAAqB,CAACkB,WAAD,EAAcf,MAAM,CAACG,OAAP,CAAeG,MAAf,CAAsBU,QAApC,EAA8C,IAA9C,CAArB,CAAV;;AAnBzB;AAmBcC,UAAAA,QAnBd;AAoBcC,UAAAA,iBApBd,GAoBkCD,QAAQ,CAACE,IAAT,CAAcF,QApBhD;AAAA;AAsBQ,iBAAMzB,GAAG,CAAC;AACN4B,YAAAA,IAAI,EAAEzB,YAAY,CAAC0B,uBADb;AAENlB,YAAAA,OAAO,EAAE;AACLmB,cAAAA,WAAW,EAAE,IADR;AAELC,cAAAA,MAAM,EAAE,KAFH;AAGLC,cAAAA,MAAM,EAAE,IAHH;AAILpB,cAAAA,SAAS,EAAEJ,MAAM,CAACG,OAAP,CAAeC,SAJrB;AAKLc,cAAAA,iBAAiB,EAAjBA;AALK;AAFH,WAAD,CAAT;;AAtBR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkCQjB,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;AAlCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAsCA;;;AACA,OAAO,SAAWZ,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAAC8B,wBAAd,EAAwCpC,eAAxC,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {projectGeometry, getSupportByExtent, pointToExtentSaga} from '../../utils/JSAPI'\r\nimport {arcgisToGeoJSON} from '@esri/arcgis-to-geojson-utils'\r\n\r\n// WORKER //\r\n\r\nfunction * openStreetSmart(action) {\r\n    try {\r\nconsole.log('action.payload.ssFeature :', action.payload.ssFeature);\r\n        const projectResult = yield call(projectGeometry, [\r\n            [action.payload.ssFeature.geometry],\r\n            action.payload.layers.geometryService,\r\n            action.payload.inSR,\r\n            action.payload.outSR\r\n        ]);\r\n\r\n        const geoms = projectResult;\r\n        console.log('geoms :', geoms);\r\n        action.payload.ssFeature.geometry = geoms;\r\n\r\n        const localExtent = yield call(pointToExtentSaga, [\r\n            action.payload.viewWidth, action.payload.viewExtentWidth, action.payload.view_spatRef, action.payload.ssFeature.geometry, 400 //tolerance in pixels\r\n        ])\r\n\r\n        //get neighboring points from the selected support\r\n        const features = yield call(getSupportByExtent, [localExtent, action.payload.layers.supports, 2248]);\r\n        const ssOverlayFeatures = features.data.features;\r\n\r\n        yield put({\r\n            type: graphicTypes.SHOW_STREETSMART_VIEWER,\r\n            payload: {\r\n                leftVisible: true,\r\n                ssEdit: false,\r\n                ssView: true,\r\n                ssFeature: action.payload.ssFeature,\r\n                ssOverlayFeatures\r\n            }\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: graphic/openStreetSmart, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchStreetSmart() {\r\n\r\n    yield takeLatest(graphicTypes.START_STREETSMART_VIEWER, openStreetSmart);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}