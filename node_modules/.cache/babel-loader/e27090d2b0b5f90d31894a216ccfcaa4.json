{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(setInitConfig),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignOrder);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { getAllMUTCDS } from '../../utils/JSAPI'; // WORKER //\n\nfunction setInitConfig(action) {\n  var muttData;\n  return _regeneratorRuntime.wrap(function setInitConfig$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getAllMUTCDS, []);\n\n        case 3:\n          muttData = _context.sent;\n          _context.next = 6;\n          return put({\n            type: mapTypes.INIT,\n            payload: {\n              muttArray: muttData,\n              extent: action.payload.extent\n            }\n          });\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: map/mapLoaded, ', _context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n} // WATCHER //\n\n\nexport function watchSignOrder() {\n  return _regeneratorRuntime.wrap(function watchSignOrder$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.MAP_LOADED, setInitConfig);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_mapLoaded.js"],"names":["setInitConfig","watchSignOrder","call","put","takeLatest","types","mapTypes","getAllMUTCDS","action","muttData","type","INIT","payload","muttArray","extent","console","log","MAP_LOADED"],"mappings":";;;;yBAOWA,a;;;yBAuBOC,c;;AA9BlB,SAAQC,IAAR,EAAaC,GAAb,EAAkBC,UAAlB,QAAmC,oBAAnC;AACA,SAAQC,KAAK,IAAIC,QAAjB,QAAgC,iBAAhC;AACA,SAAQC,YAAR,QAA2B,mBAA3B,C,CAGA;;AAEA,SAAWP,aAAX,CAAyBQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMyB,iBAAMN,IAAI,CAACK,YAAD,EAAc,EAAd,CAAV;;AANzB;AAMcE,UAAAA,QANd;AAAA;AASK,iBAAMN,GAAG,CAAC;AACPO,YAAAA,IAAI,EAAEJ,QAAQ,CAACK,IADR;AAEPC,YAAAA,OAAO,EAAE;AACLC,cAAAA,SAAS,EAACJ,QADL;AAELK,cAAAA,MAAM,EAACN,MAAM,CAACI,OAAP,CAAeE;AAFjB;AAFF,WAAD,CAAT;;AATL;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBQC,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAsBA;;;AACA,OAAO,SAAWf,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,QAAQ,CAACW,UAAV,EAAsBjB,aAAtB,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call,put, takeLatest} from 'redux-saga/effects';\r\nimport {types as mapTypes} from '../reducers/map';\r\nimport {getAllMUTCDS} from '../../utils/JSAPI'\r\n\r\n\r\n// WORKER //\r\n\r\nfunction * setInitConfig(action) {\r\n\r\n    try {\r\n        \r\n        // call API to save signs with new SIGNORDER\r\n\r\n        const muttData = yield call(getAllMUTCDS,[])\r\n     \r\n     // Put marker in store\r\n     yield put({\r\n        type: mapTypes.INIT,\r\n        payload: {\r\n            muttArray:muttData,\r\n            extent:action.payload.extent\r\n        }\r\n    });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: map/mapLoaded, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchSignOrder() {\r\n\r\n    yield takeLatest(mapTypes.MAP_LOADED, setInitConfig);\r\n}"]},"metadata":{},"sourceType":"module"}