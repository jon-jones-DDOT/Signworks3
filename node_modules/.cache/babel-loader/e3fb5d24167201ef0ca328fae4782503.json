{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _AvatarStyled = require(\"./Avatar-styled\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Avatar = function Avatar(_ref) {\n  var children = _ref.children,\n      src = _ref.src,\n      alt = _ref.alt,\n      size = _ref.size,\n      fontSize = _ref.fontSize,\n      other = _objectWithoutProperties(_ref, [\"children\", \"src\", \"alt\", \"size\", \"fontSize\"]);\n\n  var getWrappedChildren = function getWrappedChildren(children) {\n    if (children) {\n      if (_react.default.isValidElement(children)) {\n        //Assume the element is an SVG icon\n        var _fontSize = fontSize ? {\n          fontSize: fontSize\n        } : null;\n\n        return _react.default.cloneElement(children, _objectSpread({}, children.props, {\n          style: _objectSpread({}, _AvatarStyled.StyledAvatarSvg, children.props.style, _fontSize)\n        }));\n      } else {\n        return _react.default.createElement(_AvatarStyled.StyledAvatarText, null, children);\n      }\n    } else if (src) {\n      return _react.default.createElement(_AvatarStyled.StyledAvatarImage, {\n        src: src,\n        alt: alt || ''\n      });\n    }\n  };\n\n  return _react.default.createElement(_AvatarStyled.StyledAvatar, _extends({\n    aSize: size,\n    fontSize: fontSize\n  }, other), getWrappedChildren(children));\n};\n\nAvatar.propTypes = {\n  /** The content of the component; can take text, an image, or an icon. */\n  children: _propTypes.default.node,\n\n  /** The src attribute for the img element. */\n  src: _propTypes.default.string,\n\n  /** Used in combination with src to provide\n   an alt attribute for the rendered img element. */\n  alt: _propTypes.default.string,\n\n  /** Diameter of the Avatar. */\n  size: _propTypes.default.number\n};\nAvatar.defaultProps = {\n  size: 40\n};\nAvatar.displayName = 'Avatar';\nvar _default = Avatar;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}