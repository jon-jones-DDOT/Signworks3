{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saveSelectSign),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLayers);\n\nimport { call, takeLatest } from 'redux-saga/effects';\nimport { types as mapTypes } from '../reducers/map';\nimport { getFullSignPost } from './reload';\nimport { saveSign, saveTimebands } from '../../utils/JSAPI'; // WORKER //\n\nfunction saveSelectSign(action) {\n  return _regeneratorRuntime.wrap(function saveSelectSign$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('action.payload.sign', action.payload.sign);\n          _context.next = 4;\n          return call(saveSign, [action.payload.sign, false, action.payload.layers]);\n\n        case 4:\n          _context.next = 6;\n          return call(saveTimebands, [action.payload.sign, action.payload.layers]);\n\n        case 6:\n          _context.next = 8;\n          return getFullSignPost(action);\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: map/saveSelectedSign, ', _context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n} // WATCHER //\n\n\nexport function watchLayers() {\n  return _regeneratorRuntime.wrap(function watchLayers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(mapTypes.SAVE_SIGN_S, saveSelectSign);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_saveSign.js"],"names":["saveSelectSign","watchLayers","call","takeLatest","types","mapTypes","getFullSignPost","saveSign","saveTimebands","action","console","log","payload","sign","layers","SAVE_SIGN_S"],"mappings":";;;;yBAOWA,c;;;yBAkBOC,W;;AAzBlB,SAAQC,IAAR,EAAcC,UAAd,QAA+B,oBAA/B;AACA,SAAQC,KAAK,IAAIC,QAAjB,QAAgC,iBAAhC;AACA,SAAQC,eAAR,QAA8B,UAA9B;AACA,SAAQC,QAAR,EAAkBC,aAAlB,QAAsC,mBAAtC,C,CAEA;;AAEA,SAAWR,cAAX,CAA0BS,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEKC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,MAAM,CAACG,OAAP,CAAeC,IAAlD;AAFL;AAGS,iBAAMX,IAAI,CAACK,QAAD,EAAW,CAACE,MAAM,CAACG,OAAP,CAAeC,IAAhB,EAAsB,KAAtB,EAA4BJ,MAAM,CAACG,OAAP,CAAeE,MAA3C,CAAX,CAAV;;AAHT;AAAA;AAKQ,iBAAMZ,IAAI,CAACM,aAAD,EAAe,CAACC,MAAM,CAACG,OAAP,CAAeC,IAAhB,EAAqBJ,MAAM,CAACG,OAAP,CAAeE,MAApC,CAAf,CAAV;;AALR;AAAA;AASS,iBAAMR,eAAe,CAACG,MAAD,CAArB;;AATT;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaQC,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAiBA;;;AACA,OAAO,SAAWV,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAME,UAAU,CAACE,QAAQ,CAACU,WAAV,EAAuBf,cAAvB,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, takeLatest} from 'redux-saga/effects';\r\nimport {types as mapTypes} from '../reducers/map';\r\nimport {getFullSignPost} from './reload'\r\nimport {saveSign, saveTimebands} from '../../utils/JSAPI';\r\n\r\n// WORKER //\r\n\r\nfunction * saveSelectSign(action) {\r\n    try{\r\n     console.log('action.payload.sign', action.payload.sign)\r\n         yield call(saveSign, [action.payload.sign, false,action.payload.layers]);\r\n\r\n        yield call(saveTimebands,[action.payload.sign,action.payload.layers])\r\n      \r\n       \r\n        \r\n         yield getFullSignPost(action);\r\n    }\r\n    \r\n    catch (e) {\r\n        console.log('SAGA ERROR: map/saveSelectedSign, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchLayers() {\r\n   \r\n    yield takeLatest(mapTypes.SAVE_SIGN_S, saveSelectSign);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}