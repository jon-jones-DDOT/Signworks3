{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { loadModules } from 'esri-loader';\n\nvar err = function err(e) {\n  console.log('an error occurred in JSAPI  ' + e.message);\n};\n\nexport function getSupportById(args) {\n  var id = args[0];\n  var layer = args[1]; //needs a Promis here\n\n  loadModules([\"esri/tasks/support/Query\"]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        Query = _ref2[0];\n\n    var query = new Query();\n    query.where = \"OBJECTID = \" + id;\n    query.outFields = [\"*\"];\n    query.returnGeometry = true;\n    layer.queryFeatures(query).then(function (results) {\n      if (results.features.length > 0) {\n        return results.features[0];\n      } else {\n        alert('support was not retrieved');\n      }\n    }, err);\n  }).catch(function (err) {\n    // handle any errors\n    console.error(err);\n  });\n}\nexport function getSupportByExtent(args) {\n  return new Promise(function (resolve, reject) {\n    var extent = args[0];\n    var supportLayer = args[1];\n    loadModules([\"esri/tasks/support/Query\"]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          Query = _ref4[0];\n\n      var query = new Query();\n      query.geometry = extent;\n      query.outFields = [\"*\"];\n      query.returnGeometry = true;\n      supportLayer.queryFeatures(query).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function getRelatedSigns(args) {\n  return new Promise(function (resolve, reject) {\n    var feature = args[0];\n    var layer = args[1];\n    loadModules([\"esri/request\"]).then(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 1),\n          esriRequest = _ref6[0];\n\n      esriRequest(layer, {\n        query: {\n          where: \"SUPPORTID='\" + feature.selSupport.attributes.GLOBALID + \"'\",\n          orderByFields: \"SIGNORDER\",\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\" // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function getRelatedTimebands(args) {\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 1),\n          esriRequest = _ref8[0];\n\n      esriRequest('https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' + 'er/2/query', {\n        query: {\n          where: \"SIGNID='\" + args[0].attributes.GLOBALID + \"'\",\n          outFields: '*',\n          // attribute fields to return\n          token: null,\n          // token\n          f: \"json\" // format\n\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function saveSignOrder(args) {\n  var features = args[0];\n  var pureFeatures = [];\n\n  for (var i = 0; i < features.length; i++) {\n    pureFeatures.push(features[i].feature);\n  }\n\n  return new Promise(function (resolve, reject) {\n    loadModules([\"esri/request\"]).then(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 1),\n          esriRequest = _ref10[0];\n\n      esriRequest('https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' + 'er/1/applyEdits', {\n        method: 'post',\n        query: {\n          f: \"json\",\n          // format\n          \"updates\": JSON.stringify(pureFeatures)\n        }\n      }).then(function (resp) {\n        return resolve(resp);\n      }, function (error) {\n        return reject(error);\n      });\n    });\n  });\n}\nexport function pointToExtent(view, point, toleranceInPixel, callback) {\n  loadModules([\"esri/geometry/Extent\"]).then(function (_ref11) {\n    var _ref12 = _slicedToArray(_ref11, 1),\n        Extent = _ref12[0];\n\n    //calculate map coords represented per pixel\n    var pixelWidth = view.extent.width / view.width; //calculate map coords for tolerance in pixel\n\n    var toleraceInMapCoords = toleranceInPixel * pixelWidth; //calculate & return computed extent\n\n    callback(new Extent(point.x - toleraceInMapCoords, point.y - toleraceInMapCoords, point.x + toleraceInMapCoords, point.y + toleraceInMapCoords, view.spatialReference));\n  });\n} //NON-ESRI DATA CALLS\n\nexport function getMUTCDS(_x) {\n  return _getMUTCDS.apply(this, arguments);\n}\n\nfunction _getMUTCDS() {\n  _getMUTCDS = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(args) {\n    var baseUrl, response, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd?code=\" + args[0];\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(baseUrl);\n\n          case 4:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 8;\n            return response.json();\n\n          case 8:\n            results = _context.sent;\n            return _context.abrupt(\"return\", results);\n\n          case 10:\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('Something went wrong');\n            throw new Error('Bad stuff happened.');\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 12]]);\n  }));\n  return _getMUTCDS.apply(this, arguments);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\utils\\JSAPI.js"],"names":["loadModules","err","e","console","log","message","getSupportById","args","id","layer","then","Query","query","where","outFields","returnGeometry","queryFeatures","results","features","length","alert","catch","error","getSupportByExtent","Promise","resolve","reject","extent","supportLayer","geometry","resp","getRelatedSigns","feature","esriRequest","selSupport","attributes","GLOBALID","orderByFields","token","f","getRelatedTimebands","saveSignOrder","pureFeatures","i","push","method","JSON","stringify","pointToExtent","view","point","toleranceInPixel","callback","Extent","pixelWidth","width","toleraceInMapCoords","x","y","spatialReference","getMUTCDS","baseUrl","fetch","response","ok","json","Error"],"mappings":"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","sourcesContent":["import {loadModules} from 'esri-loader';\r\n\r\nconst err = (e) => {\r\n    console.log('an error occurred in JSAPI  ' + e.message)\r\n}\r\n\r\nexport function getSupportById(args) {\r\n    const id = args[0];\r\n    const layer = args[1];\r\n    //needs a Promis here\r\n\r\n    loadModules([\"esri/tasks/support/Query\"]).then(([Query]) => {\r\n        let query = new Query();\r\n        query.where = \"OBJECTID = \" + id;\r\n        query.outFields = [\"*\"];\r\n        query.returnGeometry = true;\r\n\r\n        layer\r\n            .queryFeatures(query)\r\n            .then(function (results) {\r\n\r\n                if (results.features.length > 0) {\r\n\r\n                    return results.features[0];\r\n                } else {\r\n                    alert('support was not retrieved')\r\n                }\r\n            }, err);\r\n\r\n    }).catch(err => {\r\n        // handle any errors\r\n        console.error(err);\r\n    });\r\n}\r\n\r\nexport function getSupportByExtent(args) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const extent = args[0];\r\n\r\n        const supportLayer = args[1];\r\n\r\n        loadModules([\"esri/tasks/support/Query\"]).then(([Query]) => {\r\n\r\n            let query = new Query();\r\n            query.geometry = extent;\r\n            query.outFields = [\"*\"];\r\n            query.returnGeometry = true;\r\n\r\n            supportLayer\r\n                .queryFeatures(query)\r\n                .then(resp => resolve(resp), error => reject(error));\r\n        });\r\n\r\n    })\r\n}\r\n\r\nexport function getRelatedSigns(args) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const feature = args[0]\r\n\r\n        const layer = args[1]\r\n\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest(layer, {\r\n                query: {\r\n                    where: \"SUPPORTID='\" + feature.selSupport.attributes.GLOBALID + \"'\",\r\n                    orderByFields: \"SIGNORDER\",\r\n                    outFields: '*', // attribute fields to return\r\n                    token: null, // token\r\n                    f: \"json\" // format\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error));\r\n\r\n        });\r\n    })\r\n}\r\n\r\nexport function getRelatedTimebands(args) {\r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest('https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' +\r\n                        'er/2/query', {\r\n                    query: {\r\n                        where: \"SIGNID='\" + args[0].attributes.GLOBALID + \"'\",\r\n\r\n                        outFields: '*', // attribute fields to return\r\n                        token: null, // token\r\n                        f: \"json\" // format\r\n                    }\r\n                })\r\n                .then(resp => resolve(resp), error => reject(error));\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function saveSignOrder(args) {\r\n    const features = args[0]\r\n    let pureFeatures = [];\r\n    for ( let i = 0;i < features.length; i++){\r\n        pureFeatures.push(features[i].feature)\r\n    }\r\n  \r\n    return new Promise((resolve, reject) => {\r\n        loadModules([\"esri/request\"]).then(([esriRequest]) => {\r\n            esriRequest('https://dcdot.esriemcs.com/server/rest/services/Signs/SignWorks_Test/FeatureServ' +\r\n                    'er/1/applyEdits', {\r\n                method: 'post',\r\n                query: {\r\n                    f: \"json\", // format\r\n                    \"updates\": JSON.stringify(pureFeatures)\r\n                }\r\n            }).then(resp => resolve(resp), error => reject(error))\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport function pointToExtent(view, point, toleranceInPixel, callback) {\r\n\r\n    loadModules([\"esri/geometry/Extent\"]).then(([Extent]) => {\r\n\r\n        //calculate map coords represented per pixel\r\n        let pixelWidth = view.extent.width / view.width;\r\n\r\n        //calculate map coords for tolerance in pixel\r\n        let toleraceInMapCoords = toleranceInPixel * pixelWidth;\r\n        //calculate & return computed extent\r\n\r\n        callback(new Extent(point.x - toleraceInMapCoords, point.y - toleraceInMapCoords, point.x + toleraceInMapCoords, point.y + toleraceInMapCoords, view.spatialReference))\r\n\r\n    })\r\n\r\n}\r\n\r\n//NON-ESRI DATA CALLS\r\n\r\nexport async function getMUTCDS(args) {\r\n    const baseUrl = \"http://ddotgisapp01/SignCatalog/api/mutcd?code=\" + args[0];\r\n    try {\r\n        const response = await fetch(baseUrl);\r\n        if (response.ok) {\r\n            const results = await response.json();\r\n            return results;\r\n        }\r\n    } catch (err) {\r\n        console.error('Something went wrong');\r\n        throw new Error('Bad stuff happened.');\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}