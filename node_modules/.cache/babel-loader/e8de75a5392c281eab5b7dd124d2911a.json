{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(openGoogleStreetView),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGoogleStreet);\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { types as graphicTypes } from '../reducers/graphic';\nimport { projectGeometry, getSupportByExtent, pointToExtentSaga, createFeatureSet } from '../../utils/JSAPI'; // WORKER //\n\nfunction openGoogleStreetView(action) {\n  return _regeneratorRuntime.wrap(function openGoogleStreetView$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('action :', action);\n          _context.next = 4;\n          return put({\n            type: graphicTypes.SHOW_GOOGLE_STREET_VIEWER_RG,\n            payload: {\n              leftVisible: true,\n              leftMode: 'Google'\n            }\n          });\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('SAGA ERROR: graphic/openGoogleStreet, ', _context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n} // WATCHER //\n\n\nexport function watchGoogleStreet() {\n  return _regeneratorRuntime.wrap(function watchGoogleStreet$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(graphicTypes.START_GOOGLE_STREET_VIEWER_S, openGoogleStreetView);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\redux\\sagas\\_openGoogleStreetView.js"],"names":["openGoogleStreetView","watchGoogleStreet","call","put","takeLatest","types","graphicTypes","projectGeometry","getSupportByExtent","pointToExtentSaga","createFeatureSet","action","console","log","type","SHOW_GOOGLE_STREET_VIEWER_RG","payload","leftVisible","leftMode","START_GOOGLE_STREET_VIEWER_S"],"mappings":";;;;yBAOWA,oB;;;yBAmBOC,iB;;AA1BlB,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,UAAnB,QAAoC,oBAApC;AACA,SAAQC,KAAK,IAAIC,YAAjB,QAAoC,qBAApC;AACA,SAAQC,eAAR,EAAyBC,kBAAzB,EAA6CC,iBAA7C,EAAgEC,gBAAhE,QAAuF,mBAAvF,C,CAGA;;AAEA,SAAWV,oBAAX,CAAgCW,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGAC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AAHA;AAKQ,iBAAMR,GAAG,CAAC;AACNW,YAAAA,IAAI,EAAER,YAAY,CAACS,4BADb;AAENC,YAAAA,OAAO,EAAE;AACLC,cAAAA,WAAW,EAAE,IADR;AAELC,cAAAA,QAAQ,EAAC;AAFJ;AAFH,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcQN,UAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;;AAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAkBA;;;AACA,OAAO,SAAWZ,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMG,UAAU,CAACE,YAAY,CAACa,4BAAd,EAA4CnB,oBAA5C,CAAhB;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {call, put, takeLatest} from 'redux-saga/effects';\r\nimport {types as graphicTypes} from '../reducers/graphic';\r\nimport {projectGeometry, getSupportByExtent, pointToExtentSaga, createFeatureSet} from '../../utils/JSAPI'\r\n\r\n\r\n// WORKER //\r\n\r\nfunction * openGoogleStreetView(action) {\r\n    try {\r\n        \r\nconsole.log('action :', action);\r\n\r\n        yield put({\r\n            type: graphicTypes.SHOW_GOOGLE_STREET_VIEWER_RG,\r\n            payload: {\r\n                leftVisible: true,\r\n                leftMode:'Google'\r\n            }\r\n        });\r\n\r\n    } catch (e) {\r\n        console.log('SAGA ERROR: graphic/openGoogleStreet, ', e);\r\n    }\r\n}\r\n\r\n// WATCHER //\r\nexport function * watchGoogleStreet() {\r\n\r\n    yield takeLatest(graphicTypes.START_GOOGLE_STREET_VIEWER_S, openGoogleStreetView);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}