{"ast":null,"code":"import _classCallCheck from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Projects\\\\Signworks3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Signworks3\\\\src\\\\components\\\\myModules\\\\SuperQuery.js\";\nimport React, { Component } from 'react';\nimport './SuperQuery.css';\nimport ModalWrapper from './Modals/ModalWrapper';\nimport { layerURLs } from '../../utils/JSAPI';\nimport Downshift from 'downshift'; //import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\n\nvar SuperQuery =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuperQuery, _Component);\n\n  function SuperQuery(props) {\n    var _this;\n\n    _classCallCheck(this, SuperQuery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SuperQuery).call(this, props));\n    _this.items = [];\n\n    _this.formattedMuttArray = function () {\n      var mutt = [];\n\n      for (var i = 0; i < _this.props.map.muttArray.length; i++) {\n        var leMutt = {};\n        leMutt.name = _this.props.map.muttArray[i].code.toUpperCase() + \":\" + _this.props.map.muttArray[i].name.toUpperCase();\n        leMutt.id = _this.props.map.muttArray[i].id;\n        mutt.push(leMutt);\n      }\n\n      return mutt;\n    };\n\n    _this.mutcdLookUpSelectHandler = function (desc) {\n      var option = desc.name.split(':');\n\n      _this.setState({\n        selectedMutt: option[0],\n        selected: true\n      });\n\n      _this.myRef.current.focus();\n    };\n\n    _this.cancelClickHandler = function () {\n      _this.props.modalClicked(false, null);\n    };\n\n    _this.inputProps = {\n      size: 40,\n      autoFocus: true\n    };\n    _this.menuProps = {\n      style: {\n        listStyle: 'none'\n      }\n    };\n\n    _this.searchClickHandler = function (evt) {\n      _this.props.removeQueryGraphics();\n\n      var where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND SIGNCODE='\" + _this.state.selectedMutt + \"'\";\n      var extent = _this.props.map.extent;\n      var layer = layerURLs(_this.props).superquery;\n      console.log('layer', layer);\n\n      _this.props.querySuperQuery(where, extent, layer);\n    };\n\n    _this.myRef = React.createRef();\n    _this.state = {\n      selectedMutt: null,\n      selected: false,\n      ready: true //  this.items = this.getOptions();\n\n    };\n    _this.items = _this.formattedMuttArray();\n\n    _this.props.removeQueryGraphics();\n\n    return _this;\n  }\n\n  _createClass(SuperQuery, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ModalWrapper, Object.assign({}, this.props, {\n        title: \"Query\",\n        width: 400,\n        showOk: this.props.showOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"SuperQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SuperQueryCancel\",\n        title: \"Close Window\",\n        onClick: this.cancelClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"div\", {\n        className: \"queryTabRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"queryTabSelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"queryTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"queryTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"queryTabContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Type a partial MUTCD and select from results\"), React.createElement(Downshift, {\n        onChange: function onChange(sel) {\n          return _this2.mutcdLookUpSelectHandler(sel);\n        },\n        itemToString: function itemToString(item) {\n          return item ? item.name : '';\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            getItemProps = _ref.getItemProps,\n            getMenuProps = _ref.getMenuProps,\n            isOpen = _ref.isOpen,\n            inputValue = _ref.inputValue,\n            highlightedIndex = _ref.highlightedIndex,\n            selectedItem = _ref.selectedItem;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({}, getInputProps(_this2.inputProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })), React.createElement(\"ul\", Object.assign({}, getMenuProps(_this2.menuProps), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }), isOpen ? _this2.items.filter(function (item) {\n          return !inputValue || item.name.includes(inputValue.toUpperCase());\n        }).map(function (item, index) {\n          return React.createElement(\"li\", Object.assign({}, getItemProps({\n            key: item.id,\n            index: index,\n            item: item,\n            style: {\n              backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n              fontWeight: selectedItem === item ? 'bold' : 'normal'\n            }\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }), item.name);\n        }) : null));\n      })), React.createElement(\"div\", {\n        className: \"bottomDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.props.graphic.queryCount, \"\\xA0 features found\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"The Extent for the query will be the extent of the displayed map\"), React.createElement(\"button\", {\n        ref: this.myRef,\n        onClick: this.searchClickHandler,\n        disabled: this.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"SEARCH\"))));\n    }\n  }]);\n\n  return SuperQuery;\n}(Component);\n\nexport { SuperQuery as default };","map":{"version":3,"sources":["C:\\Projects\\Signworks3\\src\\components\\myModules\\SuperQuery.js"],"names":["React","Component","ModalWrapper","layerURLs","Downshift","SuperQuery","props","items","formattedMuttArray","mutt","i","map","muttArray","length","leMutt","name","code","toUpperCase","id","push","mutcdLookUpSelectHandler","desc","option","split","setState","selectedMutt","selected","myRef","current","focus","cancelClickHandler","modalClicked","inputProps","size","autoFocus","menuProps","style","listStyle","searchClickHandler","evt","removeQueryGraphics","where","state","extent","layer","superquery","console","log","querySuperQuery","createRef","ready","showOk","sel","item","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","selectedItem","filter","includes","index","key","backgroundColor","fontWeight","graphic","queryCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport './SuperQuery.css'\r\nimport ModalWrapper from './Modals/ModalWrapper';\r\nimport {layerURLs} from '../../utils/JSAPI'\r\nimport Downshift from 'downshift'\r\n\r\n//import {SupportType, addOptionsToSelect} from '../../../SignworksJSON';\r\n\r\n\r\nexport default class SuperQuery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            selectedMutt: null,\r\n            selected: false,\r\n            ready: true\r\n        }\r\n        //  this.items = this.getOptions();\r\n        this.items = this.formattedMuttArray();\r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n    }\r\n\r\n    items = [];\r\n\r\n    formattedMuttArray = () =>{\r\n\r\n        let mutt = [];\r\n        for (let i = 0;i < this.props.map.muttArray.length;i++){\r\n            let leMutt = {};\r\n            leMutt.name = this.props.map.muttArray[i].code.toUpperCase() + \":\" + this.props.map.muttArray[i].name.toUpperCase();\r\n            leMutt.id = this.props.map.muttArray[i].id;\r\n            mutt.push(leMutt);\r\n\r\n        }\r\n        return mutt;\r\n    }\r\n\r\n   \r\n   \r\n\r\n    mutcdLookUpSelectHandler = (desc) => {\r\n    \r\n        let option = desc.name.split(':')\r\n        this.setState({selectedMutt: option[0], selected: true})\r\n        this\r\n            .myRef\r\n            .current\r\n            .focus();\r\n\r\n    }\r\n\r\n    cancelClickHandler = () => {\r\n\r\n        this\r\n            .props\r\n            .modalClicked(false, null)\r\n    }\r\n    inputProps = {size:40,autoFocus:true};\r\n    menuProps = { style:{ listStyle: 'none'}};\r\n\r\n    searchClickHandler = (evt) => {\r\n  \r\n        this\r\n            .props\r\n            .removeQueryGraphics();\r\n        const where = \"SUPPORTSTATUS = 1 AND SIGNSTATUS = 1 AND SIGNCODE='\" + this.state.selectedMutt + \"'\";\r\n        const extent = this.props.map.extent;\r\n        const layer = layerURLs(this.props).superquery;\r\nconsole.log('layer', layer)\r\n        this\r\n            .props\r\n            .querySuperQuery(where, extent, layer)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ModalWrapper\r\n                {...this.props}\r\n                title=\"Query\"\r\n                width\r\n                ={400}\r\n                showOk={this.props.showOk}>\r\n\r\n                <div className=\"SuperQuery\">\r\n                    <div\r\n                        className=\"SuperQueryCancel\"\r\n                        title=\"Close Window\"\r\n                        onClick={this.cancelClickHandler}>X</div>\r\n                        <div className=\"queryTabRow\"><div className=\"queryTabSelect\"></div><div className=\"queryTab\"></div><div className=\"queryTab\"></div></div>\r\n                    <div className= \"queryTabContent\">\r\n\r\n                        <p>Type a partial MUTCD and select from results</p>\r\n                        <Downshift\r\n                           onChange = {(sel) => this.mutcdLookUpSelectHandler(sel)}\r\n                            itemToString={item => (item\r\n                            ? item.name\r\n                            : '')}>\r\n                            {({\r\n                                getInputProps,\r\n                                getItemProps,                               \r\n                                getMenuProps,\r\n                                isOpen,\r\n                                inputValue ,\r\n                                highlightedIndex,\r\n                                selectedItem\r\n                            }) => (\r\n                                <div>\r\n                                    \r\n                                    <input {...getInputProps(this.inputProps)}/>\r\n                                    <ul {...getMenuProps(this.menuProps)}>\r\n                                       \r\n                                        {isOpen\r\n                                            ? this\r\n                                                .items\r\n                                                .filter(item => !inputValue || item.name.includes(inputValue.toUpperCase()))\r\n                                                .map((item, index) => (\r\n                                                    <li\r\n                                                        {...getItemProps({ key: item.id, index, item,\r\n                                                         style: { backgroundColor: highlightedIndex === index ? \r\n                                                         'lightgray' : 'white', fontWeight: selectedItem === item ? \r\n                                                         'bold' : 'normal', } })}>\r\n                                                        {item.name}\r\n                                                    </li>\r\n                                                ))\r\n                                            : null}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </Downshift>\r\n\r\n                    </div>\r\n                    <div className=\"bottomDiv\">\r\n                         <div >\r\n                        {this.props.graphic.queryCount}\r\n                        &nbsp; features found</div>\r\n                    <p>\r\n                        The Extent for the query will be the extent of the displayed map</p>\r\n                    < button ref={this.myRef} onClick={this.searchClickHandler} disabled={this.selected}>\r\n                        SEARCH</button>\r\n                    </div>\r\n                   \r\n\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}