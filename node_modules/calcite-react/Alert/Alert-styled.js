"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledAlertClose = exports.StyledAlert = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _helpers = require("../utils/helpers");

var _color = require("../utils/color");

var _Elements = require("../Elements");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var StyledAlert = _styledComponents.default.div.withConfig({
  displayName: "StyledAlert",
  componentId: "sc-8vnym9-0"
})(["padding:", ";color:", ";background-color:", ";position:relative;z-index:100;max-width:40em;border:1px solid ", ";box-shadow:", ";border-radius:", ";", ";", ";", ";", ";", ";"], function (props) {
  return (0, _helpers.unitCalc)(props.theme.baseline, 2, '/');
}, function (props) {
  return props.theme.palette.offBlack;
}, function (props) {
  return props.theme.palette.lightestBlue;
}, function (props) {
  return props.theme.palette.blue;
}, function (props) {
  return props.theme.boxShadow;
}, function (props) {
  return props.theme.borderRadius;
}, function (props) {
  return (0, _color.linkColor)(props.theme.palette.offBlack, props.theme.palette.black);
}, function (props) {
  return props.red && (0, _styledComponents.css)(["background-color:", ";border-color:", ";"], function (props) {
    return props.theme.palette.lightestRed;
  }, function (props) {
    return props.theme.palette.red;
  });
}, function (props) {
  return props.yellow && (0, _styledComponents.css)(["background-color:", ";border-color:", ";"], function (props) {
    return props.theme.palette.lightestYellow;
  }, function (props) {
    return props.theme.palette.yellow;
  });
}, function (props) {
  return props.green && (0, _styledComponents.css)(["background-color:", ";border-color:", ";"], function (props) {
    return props.theme.palette.lightestGreen;
  }, function (props) {
    return props.theme.palette.green;
  });
}, function (props) {
  return props.full && (0, _styledComponents.css)(["max-width:none;"]);
});

exports.StyledAlert = StyledAlert;
var StyledAlertClose = (0, _styledComponents.default)(_Elements.CalciteA).withConfig({
  displayName: "StyledAlertClose",
  componentId: "sc-8vnym9-1"
})(["position:absolute;right:", ";color:", ";&:hover{color:", ";}svg{fill:currentColor;}"], function (props) {
  return (0, _helpers.unitCalc)(props.theme.baseline, 2, '/');
}, function (props) {
  return props.theme.palette.offBlack;
}, function (props) {
  return props.theme.palette.black;
});
exports.StyledAlertClose = StyledAlertClose;