"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ArcgisAccountControl = _interopRequireDefault(require("./ArcgisAccountControl"));

var _ArcgisAccountMenu = _interopRequireDefault(require("./ArcgisAccountMenu"));

var _Popover = _interopRequireDefault(require("../Popover"));

var _Avatar = _interopRequireDefault(require("../Avatar"));

var _UserIcon = _interopRequireDefault(require("calcite-ui-icons-react/UserIcon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// JSON
// CSS
var ArcgisAccount =
/*#__PURE__*/
function (_Component) {
  _inherits(ArcgisAccount, _Component);

  function ArcgisAccount(props) {
    var _this;

    _classCallCheck(this, ArcgisAccount);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArcgisAccount).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "openAccountControl", function () {
      _this.setState({
        open: true
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "closeAccountControl", function () {
      _this.setState({
        open: false
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "toggleAccountControl", function () {
      _this.setState({
        open: !_this.state.open
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_getThumbnail", function (user, token) {
      var username = user.username,
          thumbnail = user.thumbnail;

      var _token = token || '';

      return "https://www.arcgis.com/sharing/rest/community/users/".concat(username, "/info/").concat(thumbnail, "?token=").concat(_token);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_getAvatar", function (userInfo, token, size) {
      if (userInfo.thumbnail) {
        return _react.default.createElement(_Avatar.default, {
          src: _this._getThumbnail(userInfo, token),
          size: size
        });
      } else if (userInfo.firstName && userInfo.lastName) {
        var initials = userInfo.firstName[0] + userInfo.lastName[0];
        initials = initials.toUpperCase();
        return _react.default.createElement(_Avatar.default, {
          size: size,
          fontSize: size * 0.5
        }, initials);
      } else {
        return _react.default.createElement(_Avatar.default, {
          size: size
        }, _react.default.createElement(_UserIcon.default, {
          size: size * 0.7
        }));
      }
    });

    _this.state = {
      open: false
    };
    return _this;
  }

  _createClass(ArcgisAccount, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          user = _this$props.user,
          portal = _this$props.portal,
          token = _this$props.token,
          onRequestSwitchAccount = _this$props.onRequestSwitchAccount,
          onRequestSignOut = _this$props.onRequestSignOut,
          children = _this$props.children,
          hideSwitchAccount = _this$props.hideSwitchAccount,
          other = _objectWithoutProperties(_this$props, ["user", "portal", "token", "onRequestSwitchAccount", "onRequestSignOut", "children", "hideSwitchAccount"]);

      return _react.default.createElement(_Popover.default, {
        targetEl: _react.default.createElement(_ArcgisAccountControl.default, _extends({
          onClick: this.toggleAccountControl,
          avatar: this._getAvatar(this.props.user, this.props.token, 32),
          fullName: user.fullName,
          username: user.username,
          open: this.state.open
        }, other)),
        open: this.state.open,
        onRequestClose: this.closeAccountControl,
        placement: "bottom-end",
        positionFixed: true
      }, _react.default.createElement(_ArcgisAccountMenu.default, {
        user: user,
        portal: portal,
        avatar: this._getAvatar(user, token, 120),
        style: {
          width: '410px'
        },
        hideSwitchAccount: hideSwitchAccount,
        onRequestSwitchAccount: onRequestSwitchAccount,
        onRequestSignOut: onRequestSignOut
      }, children));
    }
  }]);

  return ArcgisAccount;
}(_react.Component);

ArcgisAccount.propTypes = {
  /** AGOL user object. */
  user: _propTypes.default.object.isRequired,

  /** AGOL portal object. */
  portal: _propTypes.default.object.isRequired,

  /** AGOL login token. */
  token: _propTypes.default.string,

  /** Hide the button to switch accounts in the menu. */
  hideSwitchAccount: _propTypes.default.bool,

  /** Callback when the user selects the Switch Account button. */
  onRequestSwitchAccount: _propTypes.default.func,

  /** Callback when the user selects the Sign Out button. */
  onRequestSignOut: _propTypes.default.func
};
ArcgisAccount.defaultProps = {
  onRequestSwitchAccount: function onRequestSwitchAccount() {},
  onRequestSignOut: function onRequestSignOut() {}
};
ArcgisAccount.displayName = 'ArcgisAccount';
var _default = ArcgisAccount;
exports.default = _default;