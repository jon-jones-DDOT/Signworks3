"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ArcgisAccountStyled = require("./ArcgisAccount-styled");

var _CalciteThemeProvider = require("../CalciteThemeProvider");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// Third-party components (buttons, icons, etc.)
// JSON
// CSS
var ArcgisAccountContentInfo = function ArcgisAccountContentInfo(_ref) {
  var user = _ref.user,
      portal = _ref.portal,
      avatar = _ref.avatar,
      other = _objectWithoutProperties(_ref, ["user", "portal", "avatar"]);

  var _avatar = _react.default.cloneElement(avatar, {
    style: {
      border: "2px solid ".concat(_CalciteThemeProvider.CalciteTheme.palette.white),
      boxShadow: "0 0 0 3px ".concat(_CalciteThemeProvider.CalciteTheme.palette.blue),
      marginBottom: _CalciteThemeProvider.CalciteTheme.baseline
    }
  });

  return _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountContentInfo, other, _avatar, _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountContentName, null, user.fullName), _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountContentId, null, user.username), _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountContentGroup, null, portal.name));
};

ArcgisAccountContentInfo.propTypes = {
  /** AGOL user object */
  user: _propTypes.default.object
};
ArcgisAccountContentInfo.defaultProps = {};
ArcgisAccountContentInfo.displayName = 'ArcgisAccountContentInfo';
var _default = ArcgisAccountContentInfo;
exports.default = _default;