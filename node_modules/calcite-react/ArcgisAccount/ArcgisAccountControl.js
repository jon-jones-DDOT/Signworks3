"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ArcgisAccountStyled = require("./ArcgisAccount-styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// App components
// Third-party components (buttons, icons, etc.)
// JSON
// CSS
var ArcgisAccountControl = function ArcgisAccountControl(_ref) {
  var avatar = _ref.avatar,
      fullName = _ref.fullName,
      username = _ref.username,
      open = _ref.open,
      other = _objectWithoutProperties(_ref, ["avatar", "fullName", "username", "open"]);

  return _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountControl, _extends({
    open: open
  }, other), _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountControlAvatar, null, avatar), _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountControlNames, null, _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountControlFriendlyName, null, fullName), _react.default.createElement(_ArcgisAccountStyled.StyledArcgisAccountControlUsername, null, username)));
};

ArcgisAccountControl.propTypes = {
  /** User profile avatar image. */
  avatar: _propTypes.default.node,

  /** User's full name. */
  fullName: _propTypes.default.string,

  /** User's AGOL username. */
  username: _propTypes.default.string,

  /** Boolean toggle for popover visibility. */
  open: _propTypes.default.bool
};
ArcgisAccountControl.defaultProps = {};
ArcgisAccountControl.displayName = 'ArcgisAccountControl';
var _default = ArcgisAccountControl;
exports.default = _default;