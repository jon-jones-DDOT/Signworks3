"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledSpanCrumb = exports.StyledCrumb = exports.StyledBreadcrumbs = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _color = require("../utils/color");

var _Elements = require("../Elements");

var _helpers = require("../utils/helpers");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var StyledBreadcrumbs = _styledComponents.default.nav.withConfig({
  displayName: "StyledBreadcrumbs",
  componentId: "z9j3tq-0"
})(["", ";color:", ";"], (0, _helpers.fontSize)(-2), function (props) {
  return props.theme.palette.darkerGray;
});

exports.StyledBreadcrumbs = StyledBreadcrumbs;
var StyledCrumb = (0, _styledComponents.default)(_Elements.CalciteA).withConfig({
  displayName: "StyledCrumb",
  componentId: "z9j3tq-1"
})(["color:", ";&::before{content:'/';color:", ";font-weight:400;display:inline-block;padding:0 0.5rem;}&:first-child::before{display:none;}&:last-child{font-weight:600;}", ";"], function (props) {
  return props.theme.palette.darkerGray;
}, function (props) {
  return props.theme.palette.darkerGray;
}, function (props) {
  return props.white && (0, _styledComponents.css)(["color:", ";", ";&::before{color:", ";}"], props.theme.palette.white, (0, _color.linkColor)(props.theme.palette.white, props.theme.palette.lightestGray), props.theme.palette.white);
});
exports.StyledCrumb = StyledCrumb;

var StyledSpanCrumb = _styledComponents.default.span.withConfig({
  displayName: "StyledSpanCrumb",
  componentId: "z9j3tq-2"
})(["color:", ";&::before{content:'/';color:", ";font-weight:400;display:inline-block;padding:0 0.5rem;}&:first-child::before{display:none;}&:last-child{font-weight:600;}", ";"], function (props) {
  return props.theme.palette.darkerGray;
}, function (props) {
  return props.theme.palette.darkerGray;
}, function (props) {
  return props.white && (0, _styledComponents.css)(["color:", ";", ";&::before{color:", ";}"], props.theme.palette.white, (0, _color.linkColor)(props.theme.palette.white, props.theme.palette.lightestGray), props.theme.palette.white);
});

exports.StyledSpanCrumb = StyledSpanCrumb;