"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonInfo = require("@storybook/addon-info");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _GuideExample = _interopRequireDefault(require("../../../stories/GuideExample"));

var _Card = _interopRequireDefault(require("./Card.md"));

var _bridge = _interopRequireDefault(require("../../../stories/images/bridge3.jpg"));

var _bridgeCircle = _interopRequireDefault(require("../../../stories/images/bridge-circle.png"));

var _ = _interopRequireWildcard(require("../"));

var _Button = _interopRequireDefault(require("../../Button"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CustomStyledCard = (0, _styledComponents.default)(_.default).withConfig({
  displayName: "CustomStyledCard",
  componentId: "pxzhmk-0"
})(["max-width:320px;box-shadow:rgba(0,0,0,0.19) 0px 10px 30px,rgba(0,0,0,0.23) 0px 6px 10px;"]);
(0, _react2.storiesOf)('Card', module).add('Basic', (0, _addonInfo.withInfo)(_Card.default)(function () {
  return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_.default, {
    style: {
      maxWidth: '320px'
    }
  }, _react.default.createElement(_.CardImage, {
    src: _bridge.default,
    caption: "Florida, January 1954",
    alt: "Bridge Club, 1954"
  }), _react.default.createElement(_.CardContent, null, _react.default.createElement(_.CardTitle, null, "Card with Image"), _react.default.createElement("p", null, "Cards can have full-bleed images with optional captions."), _react.default.createElement(_Button.default, null, "View Examples")))), _react.default.createElement(_GuideExample.default, {
    label: "shaped"
  }, _react.default.createElement(_.default, {
    shaped: true,
    style: {
      maxWidth: '320px'
    }
  }, _react.default.createElement(_.CardImage, {
    src: _bridgeCircle.default,
    alt: "Bridge Club, 1942"
  }), _react.default.createElement(_.CardContent, null, _react.default.createElement("p", null, "Another class ", _react.default.createElement("code", null, "shaped"), " allows for a stylized version of the card meant to work with geometrically-shaped images."), _react.default.createElement(_Button.default, {
    clear: true
  }, "View Examples")))), _react.default.createElement(_GuideExample.default, {
    label: "bar",
    style: {
      display: 'flex',
      justifyContent: 'space-between'
    }
  }, _react.default.createElement(_.default, {
    bar: "blue",
    style: {
      margin: '0 5px',
      flex: '1 1 20%'
    }
  }, _react.default.createElement(_.CardContent, null, _react.default.createElement(_.CardTitle, null, "Card with Colored Bar"), _react.default.createElement("p", null, "Every color in calcite can be used as a colored \"bar\" along the top of a card to provide a bit of visual punch with", ' ', _react.default.createElement("code", null, "bar=\"", '{color}', "\"")), _react.default.createElement(_Button.default, {
    clear: true
  }, "What Colors?"))), _react.default.createElement(_.default, {
    bar: "green",
    style: {
      margin: '0 5px',
      flex: '1 1 20%'
    }
  }, _react.default.createElement(_.CardContent, null, _react.default.createElement(_.CardTitle, null, "Card with Colored Bar"), _react.default.createElement("p", null, "Every color in calcite can be used as a colored \"bar\" along the top of a card to provide a bit of visual punch with", ' ', _react.default.createElement("code", null, "bar=\"", '{color}', "\"")), _react.default.createElement(_Button.default, {
    clear: true
  }, "What Colors?"))), _react.default.createElement(_.default, {
    bar: "yellow",
    style: {
      margin: '0 5px',
      flex: '1 1 20%'
    }
  }, _react.default.createElement(_.CardContent, null, _react.default.createElement(_.CardTitle, null, "Card with Colored Bar"), _react.default.createElement("p", null, "Every color in calcite can be used as a colored \"bar\" along the top of a card to provide a bit of visual punch with", ' ', _react.default.createElement("code", null, "bar=\"", '{color}', "\"")), _react.default.createElement(_Button.default, {
    clear: true
  }, "What Colors?"))), _react.default.createElement(_.default, {
    bar: "red",
    style: {
      margin: '0 5px',
      flex: '1 1 20%'
    }
  }, _react.default.createElement(_.CardContent, null, _react.default.createElement(_.CardTitle, null, "Card with Colored Bar"), _react.default.createElement("p", null, "Every color in calcite can be used as a colored \"bar\" along the top of a card to provide a bit of visual punch with", ' ', _react.default.createElement("code", null, "bar=\"", '{color}', "\"")), _react.default.createElement(_Button.default, {
    clear: true
  }, "What Colors?")))), _react.default.createElement(_GuideExample.default, {
    label: "wide"
  }, _react.default.createElement(_.default, {
    wide: true
  }, _react.default.createElement(_.CardImage, {
    wide: true,
    src: _bridge.default,
    caption: "Florida, January 1954",
    alt: "Bridge Club, 1954"
  }), _react.default.createElement(_.CardContent, {
    wide: true
  }, _react.default.createElement(_.CardTitle, null, "Wide Cards"), _react.default.createElement("p", null, "Wide cards are just like standard cards except that they are displayed in landscape orientation. This is useful in situations where there is too much content to display well in a standard card."), _react.default.createElement("p", null, "Generally wide cards are meant to be displayed one-up, not grouped.")))), _react.default.createElement(_GuideExample.default, {
    label: "styled(Card)"
  }, _react.default.createElement(CustomStyledCard, null, _react.default.createElement(_.CardImage, {
    src: _bridge.default,
    caption: "Florida, January 1954",
    alt: "Bridge Club, 1954"
  }), _react.default.createElement(_.CardContent, null, _react.default.createElement(_.CardTitle, null, "Card with a Custom Component"), _react.default.createElement("p", null, "Components can be styled using the ", _react.default.createElement("code", null, "styled(Card)"), ' ', "syntax provided by styled-components. The new component will inherit the functionality of the component and add your new styles on top of the default styles."), _react.default.createElement(_Button.default, null, "View Examples")))));
}));