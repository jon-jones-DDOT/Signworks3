"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _DrawerStyled = require("../Drawer-styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Drawer = function Drawer(_ref) {
  var children = _ref.children,
      active = _ref.active,
      right = _ref.right,
      drawerWidth = _ref.drawerWidth,
      onRequestClose = _ref.onRequestClose,
      drawerNavStyle = _ref.drawerNavStyle,
      other = _objectWithoutProperties(_ref, ["children", "active", "right", "drawerWidth", "onRequestClose", "drawerNavStyle"]);

  function gutterClicked(e) {
    if (e.target === e.currentTarget) {
      onRequestClose(e);
    }
  }

  return _react.default.createElement(_DrawerStyled.StyledDrawer, _extends({
    active: active,
    onClick: gutterClicked
  }, other), _react.default.createElement(_DrawerStyled.StyledDrawerNav, {
    active: active,
    right: right,
    drawerWidth: drawerWidth,
    style: drawerNavStyle
  }, children));
};

Drawer.propTypes = {
  /** Child elements to be rendered inside the Drawer */
  children: _propTypes.default.node,

  /** Toggle visibility of the drawer */
  active: _propTypes.default.bool,

  /** Display the drawer on the right side of the screen */
  right: _propTypes.default.bool,

  /** Width (in px) of the drawer nav */
  drawerWidth: _propTypes.default.number,

  /** Function called when the user clicks the overlay area of a drawer */
  onRequestClose: _propTypes.default.func,

  /** Styles passed to the DrawerNav sub-component */
  drawerNavStyle: _propTypes.default.node
};
Drawer.defaultProps = {
  drawerWidth: 280,
  onRequestClose: function onRequestClose() {}
};
Drawer.displayName = 'Drawer';
var _default = Drawer;
exports.default = _default;