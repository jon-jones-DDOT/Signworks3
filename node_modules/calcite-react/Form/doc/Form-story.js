"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonInfo = require("@storybook/addon-info");

var _GuideExample = _interopRequireDefault(require("../../../stories/GuideExample"));

var _Form = _interopRequireDefault(require("./Form.md"));

var _ = _interopRequireWildcard(require("../"));

var _TextField = _interopRequireDefault(require("../../TextField"));

var _Select = _interopRequireDefault(require("../../Select"));

var _Menu = require("../../Menu");

var _Radio = _interopRequireDefault(require("../../Radio"));

var _Checkbox = _interopRequireDefault(require("../../Checkbox"));

var _DatePicker = _interopRequireDefault(require("../../DatePicker"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _react2.storiesOf)('Form', module).add('Basic', (0, _addonInfo.withInfo)(_Form.default)(function () {
  return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_.default, null, _react.default.createElement(_.FormControl, null, _react.default.createElement(_TextField.default, {
    defaultValue: "Map Man",
    label: "Name:"
  })), _react.default.createElement(_.FormControl, {
    error: true
  }, _react.default.createElement(_TextField.default, {
    defaultValue: "map_man@yahoo.com",
    label: "Email:"
  }), _react.default.createElement(_.FormHelperText, null, "Really... Yahoo?")), _react.default.createElement(_.FormControl, null, _react.default.createElement(_.FormControlLabel, null, "State:"), _react.default.createElement(_Select.default, {
    selectedValue: "co",
    onChange: function onChange() {
      return true;
    },
    fullWidth: true
  }, _react.default.createElement(_Menu.MenuItem, {
    value: "ca"
  }, "California"), _react.default.createElement(_Menu.MenuItem, {
    value: "co"
  }, "Colorado"))), _react.default.createElement(_.FormControl, {
    success: true
  }, _react.default.createElement(_TextField.default, {
    fullWidth: true,
    defaultValue: "Denver",
    label: "City:"
  }), _react.default.createElement(_.FormHelperText, null, "City checks out")), _react.default.createElement(_.FormControl, null, _react.default.createElement(_DatePicker.default, {
    date: null,
    focused: false,
    onFocusChange: function onFocusChange() {
      return true;
    }
  })), _react.default.createElement(_.FormControl, null, _react.default.createElement(_.Fieldset, {
    name: "storyRadioGroup"
  }, _react.default.createElement(_.Legend, null, "Gender:"), _react.default.createElement(_Radio.default, null, "Male"), _react.default.createElement(_Radio.default, null, "Female"), _react.default.createElement(_Radio.default, null, "Other"))), _react.default.createElement(_.FormControl, null, _react.default.createElement(_.Fieldset, {
    name: "storyCheckboxGroup"
  }, _react.default.createElement(_.Legend, null, "Pets:"), _react.default.createElement(_Checkbox.default, null, "Dog"), _react.default.createElement(_Checkbox.default, null, "Cat"), _react.default.createElement(_Checkbox.default, null, "Other"))))));
})).add('Horizontal Forms', (0, _addonInfo.withInfo)(_Form.default)(function () {
  return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_.default, {
    horizontal: true
  }, _react.default.createElement(_.FormControl, null, _react.default.createElement(_TextField.default, {
    defaultValue: "James"
  })), _react.default.createElement(_.FormControl, null, _react.default.createElement(_TextField.default, {
    defaultValue: "Kirk"
  })), _react.default.createElement(_.FormControl, {
    error: true
  }, _react.default.createElement(_TextField.default, {
    defaultValue: "jKirk_1701@gmail.com",
    type: "email"
  }), _react.default.createElement(_.FormHelperText, null, "Must be a .gov email")), _react.default.createElement(_.FormControl, null, _react.default.createElement(_TextField.default, {
    defaultValue: "Denver"
  })))), _react.default.createElement(_GuideExample.default, {
    label: "horizontal FormControl"
  }, _react.default.createElement(_.default, null, _react.default.createElement(_.FormControl, {
    horizontal: true
  }, _react.default.createElement(_.FormControlLabel, {
    style: {
      minWidth: '120px'
    }
  }, "First Name:"), _react.default.createElement(_TextField.default, {
    defaultValue: "James"
  })), _react.default.createElement(_.FormControl, {
    horizontal: true
  }, _react.default.createElement(_.FormControlLabel, {
    style: {
      minWidth: '120px'
    }
  }, "Last Name:"), _react.default.createElement(_TextField.default, {
    fullWidth: true,
    defaultValue: "Kirk"
  })), _react.default.createElement(_.FormControl, {
    horizontal: true,
    error: true
  }, _react.default.createElement(_.FormControlLabel, {
    style: {
      minWidth: '120px'
    }
  }, "Email:"), _react.default.createElement(_TextField.default, {
    defaultValue: "jKirk_1701@gmail.com",
    type: "email"
  }), _react.default.createElement(_.FormHelperText, null, "Must be a .gov email")), _react.default.createElement(_.FormControl, {
    horizontal: true
  }, _react.default.createElement(_.FormControlLabel, {
    style: {
      minWidth: '120px'
    }
  }, "State:"), _react.default.createElement(_Select.default, {
    selectedValue: "co",
    onChange: function onChange() {
      return true;
    }
  }, _react.default.createElement(_Menu.MenuItem, {
    value: "ca"
  }, "California"), _react.default.createElement(_Menu.MenuItem, {
    value: "co"
  }, "Colorado"))), _react.default.createElement(_.FormControl, {
    horizontal: true
  }, _react.default.createElement(_.FormControlLabel, {
    style: {
      minWidth: '120px'
    }
  }, "City:"), _react.default.createElement(_Select.default, {
    selectedValue: "co",
    onChange: function onChange() {
      return true;
    },
    fullWidth: true
  }, _react.default.createElement(_Menu.MenuItem, {
    value: "ca"
  }, "Denver"), _react.default.createElement(_Menu.MenuItem, {
    value: "co"
  }, "Boulder"))))));
}));