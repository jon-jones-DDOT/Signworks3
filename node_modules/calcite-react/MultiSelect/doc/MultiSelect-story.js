"use strict";

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react2 = require("@storybook/react");

var _addonInfo = require("@storybook/addon-info");

var _formik = require("formik");

var _GuideExample = _interopRequireDefault(require("../../../stories/GuideExample"));

var _MultiSelect = _interopRequireDefault(require("./MultiSelect.md"));

var _Menu = require("../../Menu");

var _ = _interopRequireDefault(require("../"));

var _Form = _interopRequireWildcard(require("../../Form"));

var _Button = _interopRequireDefault(require("../../Button"));

var _states = _interopRequireDefault(require("../../../stories/_sampleJson/states.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

(0, _react2.storiesOf)('MultiSelect', module).add('Controlled MultiSelect', (0, _addonInfo.withInfo)({
  text: _MultiSelect.default,
  propTables: [_.default]
})(function () {
  var MultiSelectStory =
  /*#__PURE__*/
  function (_Component) {
    _inherits(MultiSelectStory, _Component);

    function MultiSelectStory(props) {
      var _this;

      _classCallCheck(this, MultiSelectStory);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiSelectStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleMultiSelectChange", function (values, items) {
        _this.setState({
          selectedValues: values
        });
      });

      _this.state = {
        selectedValues: [10]
      };
      return _this;
    }

    _createClass(MultiSelectStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, {
          label: "selectedItem={this.state.selectedValues}"
        }, _react.default.createElement(_.default, {
          onChange: this.handleMultiSelectChange,
          selectedValues: this.state.selectedValues
        }, _react.default.createElement(_Menu.MenuItem, {
          value: 10
        }, "Ten"), _react.default.createElement(_Menu.MenuItem, {
          value: 20
        }, "Twenty"), _react.default.createElement(_Menu.MenuItem, {
          value: 30
        }, "Thirty"), _react.default.createElement(_Menu.MenuItem, {
          value: 40
        }, "Fourty"), _react.default.createElement(_Menu.MenuItem, {
          value: 50
        }, "Fifty"), _react.default.createElement(_Menu.MenuItem, {
          value: 60
        }, "Sixty"), _react.default.createElement(_Menu.MenuItem, {
          value: 70
        }, "Seventy"), _react.default.createElement(_Menu.MenuItem, {
          value: 80
        }, "Eighty"), _react.default.createElement(_Menu.MenuItem, {
          value: 90
        }, "Ninety"), _react.default.createElement(_Menu.MenuItem, {
          value: 100
        }, "One Hundred"))), _react.default.createElement(_GuideExample.default, {
          label: "fullWidth"
        }, _react.default.createElement(_.default, {
          fullWidth: true,
          onChange: this.handleMultiSelectChange,
          selectedValues: this.state.selectedValues
        }, _react.default.createElement(_Menu.MenuItem, {
          value: 10
        }, "Ten"), _react.default.createElement(_Menu.MenuItem, {
          value: 20
        }, "Twenty"), _react.default.createElement(_Menu.MenuItem, {
          value: 30
        }, "Thirty"), _react.default.createElement(_Menu.MenuItem, {
          value: 40
        }, "Fourty"), _react.default.createElement(_Menu.MenuItem, {
          value: 50
        }, "Fifty"), _react.default.createElement(_Menu.MenuItem, {
          value: 60
        }, "Sixty"), _react.default.createElement(_Menu.MenuItem, {
          value: 70
        }, "Seventy"), _react.default.createElement(_Menu.MenuItem, {
          value: 80
        }, "Eighty"), _react.default.createElement(_Menu.MenuItem, {
          value: 90
        }, "Ninety"), _react.default.createElement(_Menu.MenuItem, {
          value: 100
        }, "One Hundred"))), _react.default.createElement(_GuideExample.default, {
          label: "appendToBody"
        }, _react.default.createElement(_.default, {
          onChange: this.handleMultiSelectChange,
          selectedValues: this.state.selectedValues,
          appendToBody: true
        }, _react.default.createElement(_Menu.MenuItem, {
          value: 10
        }, "Ten"), _react.default.createElement(_Menu.MenuItem, {
          value: 20
        }, "Twenty"), _react.default.createElement(_Menu.MenuItem, {
          value: 30
        }, "Thirty"), _react.default.createElement(_Menu.MenuItem, {
          value: 40
        }, "Fourty"), _react.default.createElement(_Menu.MenuItem, {
          value: 50
        }, "Fifty"), _react.default.createElement(_Menu.MenuItem, {
          value: 60
        }, "Sixty"), _react.default.createElement(_Menu.MenuItem, {
          value: 70
        }, "Seventy"), _react.default.createElement(_Menu.MenuItem, {
          value: 80
        }, "Eighty"), _react.default.createElement(_Menu.MenuItem, {
          value: 90
        }, "Ninety"), _react.default.createElement(_Menu.MenuItem, {
          value: 100
        }, "One Hundred"))), _react.default.createElement(_GuideExample.default, {
          label: "closeOnSelect={false}"
        }, _react.default.createElement(_.default, {
          onChange: this.handleMultiSelectChange,
          selectedValues: this.state.selectedValues,
          closeOnSelect: false
        }, _react.default.createElement(_Menu.MenuItem, {
          value: 10
        }, "Ten"), _react.default.createElement(_Menu.MenuItem, {
          value: 20
        }, "Twenty"), _react.default.createElement(_Menu.MenuItem, {
          value: 30
        }, "Thirty"), _react.default.createElement(_Menu.MenuItem, {
          value: 40
        }, "Fourty"), _react.default.createElement(_Menu.MenuItem, {
          value: 50
        }, "Fifty"), _react.default.createElement(_Menu.MenuItem, {
          value: 60
        }, "Sixty"), _react.default.createElement(_Menu.MenuItem, {
          value: 70
        }, "Seventy"), _react.default.createElement(_Menu.MenuItem, {
          value: 80
        }, "Eighty"), _react.default.createElement(_Menu.MenuItem, {
          value: 90
        }, "Ninety"), _react.default.createElement(_Menu.MenuItem, {
          value: 100
        }, "One Hundred"))));
      }
    }]);

    return MultiSelectStory;
  }(_react.Component);

  MultiSelectStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(MultiSelectStory, null);
})).add('Custom Label Renderer', (0, _addonInfo.withInfo)({
  text: _MultiSelect.default,
  propTables: [_.default]
})(function () {
  var MultiSelectStory =
  /*#__PURE__*/
  function (_Component2) {
    _inherits(MultiSelectStory, _Component2);

    function MultiSelectStory(props) {
      var _this2;

      _classCallCheck(this, MultiSelectStory);

      _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MultiSelectStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), "handleMultiSelectChange", function (values, items) {
        _this2.setState({
          selectedValues: values
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), "renderValue", function (items) {
        if (!items || items.length === 0) {
          return 'Select an Option';
        } else if (items.length > 2) {
          return "".concat(items.length, " Items Selected");
        } else {
          return items.map(function (item) {
            return item.props.children;
          }).join(', ');
        }
      });

      _this2.state = {
        selectedValues: [10, 20, 30]
      };
      return _this2;
    }

    _createClass(MultiSelectStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, {
          label: "selectedItem={this.state.selectedValues}"
        }, _react.default.createElement(_.default, {
          renderValue: this.renderValue,
          onChange: this.handleMultiSelectChange,
          selectedValues: this.state.selectedValues
        }, _react.default.createElement(_Menu.MenuItem, {
          value: 10
        }, "Ten"), _react.default.createElement(_Menu.MenuItem, {
          value: 20
        }, "Twenty"), _react.default.createElement(_Menu.MenuItem, {
          value: 30
        }, "Thirty"), _react.default.createElement(_Menu.MenuItem, {
          value: 40
        }, "Fourty"), _react.default.createElement(_Menu.MenuItem, {
          value: 50
        }, "Fifty"), _react.default.createElement(_Menu.MenuItem, {
          value: 60
        }, "Sixty"), _react.default.createElement(_Menu.MenuItem, {
          value: 70
        }, "Seventy"), _react.default.createElement(_Menu.MenuItem, {
          value: 80
        }, "Eighty"), _react.default.createElement(_Menu.MenuItem, {
          value: 90
        }, "Ninety"), _react.default.createElement(_Menu.MenuItem, {
          value: 100
        }, "One Hundred"))));
      }
    }]);

    return MultiSelectStory;
  }(_react.Component);

  MultiSelectStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(MultiSelectStory, null);
})).add('Minimal', (0, _addonInfo.withInfo)({
  text: _MultiSelect.default,
  propTables: [_.default]
})(function () {
  var MultiSelectStory =
  /*#__PURE__*/
  function (_Component3) {
    _inherits(MultiSelectStory, _Component3);

    function MultiSelectStory(props) {
      var _this3;

      _classCallCheck(this, MultiSelectStory);

      _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MultiSelectStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), "handleMultiSelectChange", function (values, items) {
        _this3.setState({
          selectedValues: values
        });
      });

      _this3.state = {
        selectedValues: [10]
      };
      return _this3;
    }

    _createClass(MultiSelectStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_.default, {
          minimal: true,
          onChange: this.handleMultiSelectChange,
          selectedValues: this.state.selectedValues
        }, _react.default.createElement(_Menu.MenuItem, {
          value: 10
        }, "Ten"), _react.default.createElement(_Menu.MenuItem, {
          value: 20
        }, "Twenty"), _react.default.createElement(_Menu.MenuItem, {
          value: 30
        }, "Thirty"), _react.default.createElement(_Menu.MenuItem, {
          value: 40
        }, "Fourty"), _react.default.createElement(_Menu.MenuItem, {
          value: 50
        }, "Fifty"), _react.default.createElement(_Menu.MenuItem, {
          value: 60
        }, "Sixty"), _react.default.createElement(_Menu.MenuItem, {
          value: 70
        }, "Seventy"), _react.default.createElement(_Menu.MenuItem, {
          value: 80
        }, "Eighty"), _react.default.createElement(_Menu.MenuItem, {
          value: 90
        }, "Ninety"), _react.default.createElement(_Menu.MenuItem, {
          value: 100
        }, "One Hundred"))));
      }
    }]);

    return MultiSelectStory;
  }(_react.Component);

  MultiSelectStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(MultiSelectStory, null);
})).add('Virtualized', (0, _addonInfo.withInfo)({
  text: _MultiSelect.default,
  propTables: [_.default]
})(function () {
  var MultiSelectStory =
  /*#__PURE__*/
  function (_Component4) {
    _inherits(MultiSelectStory, _Component4);

    function MultiSelectStory(props) {
      var _this4;

      _classCallCheck(this, MultiSelectStory);

      _this4 = _possibleConstructorReturn(this, _getPrototypeOf(MultiSelectStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), "handleMultiSelectChange", function (values, items) {
        _this4.setState({
          selectedValues: values
        });
      });

      _this4.state = {
        selectedValues: []
      };
      return _this4;
    }

    _createClass(MultiSelectStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, {
          label: "virtualized"
        }, _react.default.createElement(_.default, {
          virtualized: true,
          virtualizedMenuWidth: 250,
          onChange: this.handleMultiSelectChange,
          selectedValues: this.state.selectedValues
        }, _states.default.states.map(function (state) {
          return _react.default.createElement(_Menu.MenuItem, {
            key: state,
            value: state
          }, state);
        }))));
      }
    }]);

    return MultiSelectStory;
  }(_react.Component);

  MultiSelectStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(MultiSelectStory, null);
})).add('with Formik', (0, _addonInfo.withInfo)(_MultiSelect.default)(function () {
  var formValues = {
    dogs: []
  };
  var dogOptions = [{
    name: 'Afghan Hound',
    value: 'afghanhound'
  }, {
    name: 'Basenji',
    value: 'basenji'
  }, {
    name: 'Bulldog',
    value: 'bulldog'
  }, {
    name: 'Chihuahua',
    value: 'chihuahua'
  }, {
    name: 'Great Dane',
    value: 'greatdane'
  }, {
    name: 'Labrador Retriever',
    value: 'labrador'
  }, {
    name: 'Yorkie',
    value: 'yorkie'
  }, {
    name: 'Whippet',
    value: 'whippet'
  }];

  var onSubmit = function onSubmit(values, actions) {
    setTimeout(function () {
      console.log(values);
      actions.setSubmitting(false);
    }, 1000);
  };

  var onValidate = function onValidate(values) {
    var errors = {};

    if (!values.dogs.length) {
      errors.dogs = 'You must like at least one... 🤨';
    }

    return errors;
  };

  return _react.default.createElement(_formik.Formik, {
    initialValues: formValues,
    validate: onValidate,
    onSubmit: onSubmit
  }, function (_ref) {
    var values = _ref.values,
        errors = _ref.errors,
        touched = _ref.touched,
        handleSubmit = _ref.handleSubmit,
        isSubmitting = _ref.isSubmitting;
    return _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_Form.default, {
      onSubmit: handleSubmit
    }, _react.default.createElement(_Form.FormControl, {
      success: touched.dogs && !errors.dogs ? true : false,
      error: touched.dogs && errors.dogs ? true : false
    }, _react.default.createElement(_Form.FormControlLabel, {
      htmlFor: "token"
    }, "Favorite Dogs:"), _react.default.createElement(_formik.Field, {
      component: _.default,
      name: "dogs"
    }, dogOptions.map(function (dog) {
      return _react.default.createElement(_Menu.MenuItem, {
        key: dog.value,
        value: dog.value
      }, dog.name);
    })), _react.default.createElement(_Form.FormHelperText, null, touched.dogs && errors.dogs || null)), _react.default.createElement(_Form.FormControl, null, _react.default.createElement(_Button.default, {
      type: "submit",
      disabled: isSubmitting
    }, isSubmitting ? 'Submitting.......' : 'Submit')), _react.default.createElement("pre", null, JSON.stringify(values, null, 2))));
  });
}));