"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopoverContext = exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _Transition = _interopRequireDefault(require("react-transition-group/Transition"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _outy = _interopRequireDefault(require("outy"));

var _reactPopper = require("react-popper");

var _uniqid = _interopRequireDefault(require("uniqid"));

var _PopoverStyled = require("./Popover-styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PopoverContext = (0, _react.createContext)({
  popoverContext: {
    isInPopover: undefined
  }
});
exports.PopoverContext = PopoverContext;

var Popover =
/*#__PURE__*/
function (_Component) {
  _inherits(Popover, _Component);

  function Popover(props) {
    var _this;

    _classCallCheck(this, Popover);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popover).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_setOutsideTap", function () {
      var elements = [];

      if (!_this.props.closeOnSelect) {
        elements.push(document.getElementById("".concat(_this._generatedId, "Popover")));
      }

      if (_this.outsideTap) {
        _this.outsideTap.remove();
      }

      _this.outsideTap = (0, _outy.default)(elements, ['click', 'touchstart'], _this._handleOutsideTap);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_unsetOutsideTap", function () {
      if (_this.outsideTap) {
        _this.outsideTap.remove();
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_handleOutsideTap", function (e) {
      _this.props.onRequestClose(e);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "_getPopper", function (popper, appendToBody) {
      if (appendToBody) {
        return _reactDom.default.createPortal(popper, document.body);
      }

      return popper;
    });

    _this.popoverContext = {
      isInPopover: true
    };
    _this._generatedId = (0, _uniqid.default)();
    return _this;
  }

  _createClass(Popover, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevProps.open === false && this.props.open === true) {
        this._setOutsideTap();
      }

      if (prevProps.open === true && this.props.open === false) {
        this._unsetOutsideTap();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this._unsetOutsideTap();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var usePreventOverflow = this.props.appendToBody || this.props.positionFixed ? false : true;
      return _react.default.createElement(PopoverContext.Provider, {
        value: {
          popoverContext: this.popoverContext
        }
      }, _react.default.createElement(_reactPopper.Manager, null, _react.default.createElement(_reactPopper.Reference, {
        style: {
          display: 'inline-block'
        }
      }, function (_ref) {
        var ref = _ref.ref;
        return _react.default.createElement(_PopoverStyled.StyledTargetWrapper, {
          ref: ref,
          id: "".concat(_this2._generatedId, "Target"),
          style: _this2.props.targetContainerStyles
        }, _this2.props.targetEl);
      }), _react.default.createElement(_Transition.default, {
        in: this.props.open,
        timeout: this.props.enterDelay
      }, function (state) {
        return _this2.props.open ? _this2._getPopper(_react.default.createElement(_reactPopper.Popper, {
          positionFixed: _this2.props.positionFixed,
          placement: _this2.props.placement,
          modifiers: {
            preventOverflow: {
              enabled: usePreventOverflow
            },
            hide: {
              enabled: usePreventOverflow
            }
          }
        }, function (_ref2) {
          var ref = _ref2.ref,
              style = _ref2.style,
              placement = _ref2.placement;
          return _react.default.createElement(_PopoverStyled.StyledPopover, {
            ref: ref,
            id: "".concat(_this2._generatedId, "Popover"),
            style: _objectSpread({}, style, _this2.props.style),
            transitionState: state,
            transitionDuration: _this2.props.transitionDuration,
            "data-placement": placement
          }, _this2.props.children);
        }), _this2.props.appendToBody) : null;
      })));
    }
  }]);

  return Popover;
}(_react.Component);

exports.default = Popover;
Popover.propTypes = {
  /** Nodes to be used as options in the Popover. */
  children: _propTypes.default.node,

  /** The element that will anchor the Popover. */
  targetEl: _propTypes.default.node,

  /** Whether or not the Popover is visible. */
  open: _propTypes.default.bool,

  /** Placement of the Popover in relation to the target. */
  placement: _propTypes.default.oneOf(['top', 'right', 'bottom', 'left', 'top-start', 'right-start', 'bottom-start', 'left-start', 'top-end', 'right-end', 'bottom-end', 'left-end']),

  /** Duration of animation in milliseconds. */
  transitionDuration: _propTypes.default.number,

  /** How long it takes for the Popover to show up. */
  enterDelay: _propTypes.default.number,

  /** Function called when the Popover receives an event that may trigger a close. */
  onRequestClose: _propTypes.default.func,

  /** Whether or not the Popover should trigger onRequestClose when an element is selected. */
  closeOnSelect: _propTypes.default.bool,

  /** Styles passed onto the target element container div. */
  targetContainerStyles: _propTypes.default.object,

  /** Styles passed onto the Popover container div. */
  popoverContainerStyles: _propTypes.default.object,

  /** Uses `position: fixed` on the tooltip allowing it to show up outside of containers that have `overflow: hidden`. */
  positionFixed: _propTypes.default.bool
};
Popover.defaultProps = {
  open: false,
  placement: 'bottom-start',
  transitionDuration: 200,
  enterDelay: 0,
  true: true
};
Popover.displayName = 'Popover';