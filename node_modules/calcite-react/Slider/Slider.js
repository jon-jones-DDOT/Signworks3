"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _SliderStyled = require("./Slider-styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Slider = function Slider(_ref) {
  var value = _ref.value,
      min = _ref.min,
      max = _ref.max,
      field = _ref.field,
      form = _ref.form,
      _ref$success = _ref.success,
      success = _ref$success === void 0 ? false : _ref$success,
      _ref$error = _ref.error,
      error = _ref$error === void 0 ? false : _ref$error,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      other = _objectWithoutProperties(_ref, ["value", "min", "max", "field", "form", "success", "error", "disabled"]);

  var name, touched, errors, isSubmitting;

  if (field) {
    name = field.name;
    touched = form.touched;
    errors = form.errors;
    isSubmitting = form.isSubmitting;
  }

  var isSuccess = function isSuccess() {
    if (touched) {
      return touched[name] && !errors[name] ? true : false;
    }

    return success;
  };

  var isError = function isError() {
    if (touched) {
      return touched[name] && errors[name] ? true : false;
    }

    return error;
  };

  var isDisabled = function isDisabled() {
    return isSubmitting || disabled;
  };

  return _react.default.createElement(_SliderStyled.StyledSlider, _extends({
    as: "input",
    value: value,
    "aria-valuenow": value,
    min: min,
    "aria-valuemin": min,
    max: max,
    "aria-valuemax": max,
    success: isSuccess(),
    error: isError(),
    disabled: isDisabled()
  }, other, field, {
    type: "range"
  }));
};

Slider.propTypes = {
  /** Numeric value of the current value of the Slider. */
  value: _propTypes.default.number,

  /** Minimum allowable value. */
  min: _propTypes.default.number,

  /** Maximum allowable value. */
  max: _propTypes.default.number,

  /** Size of the steps on the Slider. */
  step: _propTypes.default.number
};
Slider.defaultProps = {
  min: 0,
  max: 100,
  step: 1
};
Slider.displayName = 'Slider';
var _default = Slider;
exports.default = _default;