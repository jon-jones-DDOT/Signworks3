"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _StepperStyled = require("./Stepper-styled");

var _StepIcon = _interopRequireDefault(require("./StepIcon"));

var _helpers = require("../utils/helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Step = function Step(_ref) {
  var children = _ref.children,
      stepNumber = _ref.stepNumber,
      small = _ref.small,
      active = _ref.active,
      complete = _ref.complete,
      error = _ref.error,
      icon = _ref.icon,
      vertical = _ref.vertical,
      other = _objectWithoutProperties(_ref, ["children", "stepNumber", "small", "active", "complete", "error", "icon", "vertical"]);

  var childArray = _react.default.Children.toArray(children);

  var childrenWithProps = childArray.map(function (child, i) {
    switch ((0, _helpers.getChildType)(child)) {
      case 'StepTitle':
        return _react.default.cloneElement(child, {
          active: active,
          small: small,
          complete: complete,
          error: error,
          vertical: vertical
        });

      case 'StepDescription':
        return _react.default.cloneElement(child, {
          active: active,
          small: small,
          complete: complete,
          error: error,
          vertical: vertical
        });

      default:
        return child;
    }
  });
  return _react.default.createElement(_StepperStyled.StyledStep, _extends({
    vertical: vertical
  }, other), _react.default.createElement(_StepIcon.default, {
    icon: icon,
    active: active,
    complete: complete,
    error: error,
    small: small,
    vertical: vertical
  }, stepNumber), _react.default.createElement(_StepperStyled.StyledStepTextContainer, {
    vertical: vertical
  }, childrenWithProps));
};

Step.propTypes = {
  /** The content of the component; can be StepTitle or StepDescription. */
  children: _propTypes.default.node,

  /** A style prop used to render the Step in an error state with red text and X icon. */
  error: _propTypes.default.bool
};
Step.defaultProps = {};
Step.displayName = 'Step';
var _default = Step;
exports.default = _default;