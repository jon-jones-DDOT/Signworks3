"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _StepperStyled = require("./Stepper-styled");

var _helpers = require("../utils/helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Stepper = function Stepper(_ref) {
  var children = _ref.children,
      currentStep = _ref.currentStep,
      small = _ref.small,
      vertical = _ref.vertical,
      other = _objectWithoutProperties(_ref, ["children", "currentStep", "small", "vertical"]);

  var childArray = _react.default.Children.toArray(children);

  var currentChildStepNumber = 0;
  var childrenWithProps = childArray.map(function (child, i) {
    switch ((0, _helpers.getChildType)(child)) {
      case 'Step':
        currentChildStepNumber++;
        return _react.default.cloneElement(child, {
          small: small,
          vertical: vertical,
          stepNumber: currentChildStepNumber,
          active: currentChildStepNumber === currentStep,
          complete: currentChildStepNumber < currentStep
        });

      default:
        return child;
    }
  });
  return _react.default.createElement(_StepperStyled.StyledStepper, _extends({
    vertical: vertical
  }, other), childrenWithProps);
};

Stepper.propTypes = {
  /** The content of the component; can be a Step. */
  children: _propTypes.default.node,

  /** A style prop used to render small Steps. */
  small: _propTypes.default.bool,

  /** A style prop to position the Steps vertically. */
  vertical: _propTypes.default.bool
};
Stepper.defaultProps = {};
Stepper.displayName = 'Stepper';
var _default = Stepper;
exports.default = _default;