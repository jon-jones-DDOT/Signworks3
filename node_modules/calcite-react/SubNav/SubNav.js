"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SubNavContext = exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _SubNavStyled = require("./SubNav-styled");

var _helpers = require("../utils/helpers");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var SubNavContext = (0, _react.createContext)({
  subNavContext: {
    blue: undefined
  }
});
exports.SubNavContext = SubNavContext;

var SubNav = function SubNav(_ref) {
  var children = _ref.children,
      blue = _ref.blue,
      other = _objectWithoutProperties(_ref, ["children", "blue"]);

  var subNavContext = {
    blue: blue
  };

  var getLeftContent = function getLeftContent() {
    return _react.Children.toArray(children).filter(function (child) {
      return (0, _helpers.getChildType)(child) === 'SubNavTitle' || (0, _helpers.getChildType)(child) === 'SubNavList';
    });
  };

  var getSubNavActions = function getSubNavActions() {
    return _react.Children.toArray(children).filter(function (child) {
      return (0, _helpers.getChildType)(child) === 'SubNavActions';
    });
  };

  return _react.default.createElement(SubNavContext.Provider, {
    value: {
      subNavContext: subNavContext
    }
  }, _react.default.createElement(_SubNavStyled.StyledSubNav, _extends({
    blue: blue
  }, other), _react.default.createElement(_SubNavStyled.StyledSubNavLeftContent, null, getLeftContent()), getSubNavActions()));
};

exports.default = SubNav;
SubNav.propTypes = {
  /** The content of the component. */
  children: _propTypes.default.node,

  /** A style prop to render the SubNav with a blue background. */
  blue: _propTypes.default.bool,

  /** The background image src. */
  backgroundImage: _propTypes.default.node,

  /** If true, the gradient is applied on top of the image. */
  overlayGradient: _propTypes.default.bool,

  /** The gradient overlay color to start from the left of the SubNav. */
  gradientFromColor: _propTypes.default.string,

  /** The gradient overlay color to end on the right of the SubNav. */
  gradientToColor: _propTypes.default.string
};
SubNav.defaultProps = {
  overlayGradient: true
};
SubNav.displayName = 'SubNav';