"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonInfo = require("@storybook/addon-info");

var _formik = require("formik");

var _GuideExample = _interopRequireDefault(require("../../../stories/GuideExample"));

var _Switch = _interopRequireDefault(require("./Switch.md"));

var _ = _interopRequireDefault(require("../"));

var _Form = _interopRequireWildcard(require("../../Form"));

var _Button = _interopRequireDefault(require("../../Button"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _react2.storiesOf)('Switch', module).add('Basic', (0, _addonInfo.withInfo)(_Switch.default)(function () {
  return _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_Form.default, null, _react.default.createElement(_Form.FormControl, null, _react.default.createElement(_.default, null, "Inline example")), _react.default.createElement(_Form.FormControl, null, _react.default.createElement(_.default, {
    destructive: true
  }, "Confirm account deletion. You cannot recover deleted accounts.")), _react.default.createElement(_Form.FormControl, null, _react.default.createElement(_.default, {
    labelPosition: "before"
  }, "Enable Two-Factor Authentication")))));
})).add('with Formik', (0, _addonInfo.withInfo)(_Switch.default)(function () {
  var options = {
    mfa: false
  };

  var onSubmit = function onSubmit(values, actions) {
    setTimeout(function () {
      console.log(values);
      actions.setSubmitting(false);
    }, 1000);
  };

  var onValidate = function onValidate(values) {
    var errors = {};

    if (!values.mfa) {
      errors.mfa = 'You must enable MFA';
    }

    return errors;
  };

  return _react.default.createElement(_formik.Formik, {
    initialValues: options,
    validate: onValidate,
    onSubmit: onSubmit
  }, function (_ref) {
    var values = _ref.values,
        errors = _ref.errors,
        touched = _ref.touched,
        handleSubmit = _ref.handleSubmit,
        isSubmitting = _ref.isSubmitting;
    return _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_Form.default, {
      onSubmit: handleSubmit
    }, _react.default.createElement(_Form.FormControl, {
      success: touched.mfa && !errors.mfa ? true : false,
      error: touched.mfa && errors.mfa ? true : false
    }, _react.default.createElement(_formik.Field, {
      component: _.default,
      name: "mfa",
      value: "mfa"
    }, "Enable Multi-Factor Authentication"), _react.default.createElement(_Form.FormHelperText, null, touched.mfa && errors.mfa || null)), _react.default.createElement(_Form.FormControl, null, _react.default.createElement(_Button.default, {
      type: "submit",
      disabled: isSubmitting
    }, isSubmitting ? 'Submitting.......' : 'Submit')), _react.default.createElement("pre", null, JSON.stringify(values, null, 2))));
  });
}));