"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _TabStyled = require("./Tab-styled");

var _helpers = require("../utils/helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TabContents = function TabContents(_ref) {
  var children = _ref.children,
      activeTabIndex = _ref.activeTabIndex,
      gray = _ref.gray,
      transparent = _ref.transparent,
      translucent = _ref.translucent,
      dark = _ref.dark,
      other = _objectWithoutProperties(_ref, ["children", "activeTabIndex", "gray", "transparent", "translucent", "dark"]);

  var childrenWithProps = _react.Children.map(children, function (child, itemIndex) {
    switch ((0, _helpers.getChildType)(child)) {
      case 'TabSection':
        var section;

        if (itemIndex === activeTabIndex) {
          section = _react.default.cloneElement(child, {
            key: itemIndex,
            index: itemIndex,
            activeTabIndex: activeTabIndex,
            gray: gray,
            transparent: transparent,
            translucent: translucent,
            dark: dark
          });
        }

        return section;

      default:
        return child;
    }
  });

  return _react.default.createElement(_TabStyled.StyledTabContents, _extends({
    gray: gray,
    transparent: transparent,
    translucent: translucent,
    dark: dark
  }, other), childrenWithProps);
};

TabContents.propTypes = {
  /** The content of the component; should be a number of TabSections. */
  children: _propTypes.default.node
};
TabContents.displayName = 'TabContents';
var _default = TabContents;
exports.default = _default;