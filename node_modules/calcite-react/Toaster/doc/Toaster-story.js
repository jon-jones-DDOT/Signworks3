"use strict";

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react2 = require("@storybook/react");

var _addonInfo = require("@storybook/addon-info");

var _reactToastify = require("react-toastify");

var _GuideExample = _interopRequireDefault(require("../../../stories/GuideExample"));

var _Toaster = _interopRequireDefault(require("./Toaster.md"));

var _ = _interopRequireWildcard(require("../"));

var _Button = _interopRequireDefault(require("../../Button"));

var _ToasterExampleComponent = _interopRequireDefault(require("./ToasterExampleComponent"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

(0, _react2.storiesOf)('Toaster', module).add('Basic', (0, _addonInfo.withInfo)({
  text: _Toaster.default,
  propTables: [_.ToastContainer, _.default]
})(function () {
  var ToasterStory =
  /*#__PURE__*/
  function (_Component) {
    _inherits(ToasterStory, _Component);

    function ToasterStory(props) {
      var _this;

      _classCallCheck(this, ToasterStory);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(ToasterStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "showToaster", function () {
        _this.setState({
          toasterOpen: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "hideToaster", function () {
        _this.setState({
          toasterOpen: false
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "showToaster2", function () {
        _this.setState({
          toaster2Open: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "hideToaster2", function () {
        _this.setState({
          toaster2Open: false
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "showToaster3", function () {
        _this.setState({
          toaster3Open: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "hideToaster3", function () {
        _this.setState({
          toaster3Open: false
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "showToaster4", function () {
        _this.setState({
          toaster4Open: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "hideToaster4", function () {
        _this.setState({
          toaster4Open: false
        });
      });

      _this.state = {
        toasterOpen: false,
        toaster2Open: false,
        toaster3Open: false,
        toaster4Open: false
      };
      return _this;
    }

    _createClass(ToasterStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_.ToastContainer, null), _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_Button.default, {
          onClick: this.showToaster
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster
        }, "Something Happened!")), _react.default.createElement(_GuideExample.default, {
          label: "autoClose={false}"
        }, _react.default.createElement(_Button.default, {
          onClick: this.showToaster2
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toaster2Open,
          onClose: this.hideToaster2,
          autoClose: false
        }, "This toaster won't close automatically!")), _react.default.createElement(_GuideExample.default, {
          label: "autoClose={10000}"
        }, _react.default.createElement(_Button.default, {
          onClick: this.showToaster3
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toaster3Open,
          onClose: this.hideToaster3,
          autoClose: 10000
        }, "This toaster will stay open for 10 seconds!")), _react.default.createElement(_GuideExample.default, {
          label: "showProgress"
        }, _react.default.createElement(_Button.default, {
          onClick: this.showToaster4
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toaster4Open,
          onClose: this.hideToaster4,
          showProgress: true
        }, "This toaster has a progress bar!"))));
      }
    }]);

    return ToasterStory;
  }(_react.Component);

  ToasterStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(ToasterStory, null);
})).add('Type Variations', (0, _addonInfo.withInfo)({
  text: _Toaster.default,
  propTables: [_.ToastContainer, _.default]
})(function () {
  var ToasterStory =
  /*#__PURE__*/
  function (_Component2) {
    _inherits(ToasterStory, _Component2);

    function ToasterStory(props) {
      var _this2;

      _classCallCheck(this, ToasterStory);

      _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ToasterStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), "showToaster", function () {
        _this2.setState({
          toasterOpen: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this2)), "hideToaster", function () {
        _this2.setState({
          toasterOpen: false
        });
      });

      _this2.state = {
        toasterOpen: false
      };
      return _this2;
    }

    _createClass(ToasterStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_.ToastContainer, null), _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, {
          label: "Types"
        }, _react.default.createElement(_Button.default, {
          onClick: this.showToaster
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          autoClose: false
        }, "default"), _react.default.createElement(_.default, {
          type: "success",
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          autoClose: false
        }, "success"), _react.default.createElement(_.default, {
          type: "info",
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          autoClose: false
        }, "info"), _react.default.createElement(_.default, {
          type: "warning",
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          autoClose: false
        }, "warning"), _react.default.createElement(_.default, {
          type: "error",
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          autoClose: false
        }, "error"))));
      }
    }]);

    return ToasterStory;
  }(_react.Component);

  ToasterStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(ToasterStory, null);
})).add('Component in Content', (0, _addonInfo.withInfo)({
  text: _Toaster.default,
  propTables: [_.ToastContainer, _.default]
})(function () {
  var ToasterStory =
  /*#__PURE__*/
  function (_Component3) {
    _inherits(ToasterStory, _Component3);

    function ToasterStory(props) {
      var _this3;

      _classCallCheck(this, ToasterStory);

      _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ToasterStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), "showToaster", function () {
        _this3.setState({
          toasterOpen: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this3)), "hideToaster", function () {
        _this3.setState({
          toasterOpen: false
        });
      });

      _this3.state = {
        toasterOpen: false
      };
      return _this3;
    }

    _createClass(ToasterStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_.ToastContainer, null), _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_Button.default, {
          onClick: this.showToaster
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster
        }, _react.default.createElement(_ToasterExampleComponent.default, {
          onInfoClick: function onInfoClick(e) {
            alert('info clicked');
            e.stopPropagation();
          }
        })))));
      }
    }]);

    return ToasterStory;
  }(_react.Component);

  ToasterStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(ToasterStory, null);
})).add('Positions', (0, _addonInfo.withInfo)({
  text: _Toaster.default,
  propTables: [_.ToastContainer, _.default]
})(function () {
  var ToasterStory =
  /*#__PURE__*/
  function (_Component4) {
    _inherits(ToasterStory, _Component4);

    function ToasterStory(props) {
      var _this4;

      _classCallCheck(this, ToasterStory);

      _this4 = _possibleConstructorReturn(this, _getPrototypeOf(ToasterStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), "showToaster", function () {
        _this4.setState({
          toasterOpen: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this4)), "hideToaster", function () {
        _this4.setState({
          toasterOpen: false
        });
      });

      _this4.state = {
        toasterOpen: false
      };
      return _this4;
    }

    _createClass(ToasterStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_.ToastContainer, null), _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_Button.default, {
          onClick: this.showToaster
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          position: "top-left"
        }, "This toaster is positioned at \"top-left\"!"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          position: "top-center"
        }, "This toaster is positioned at \"top-center\"!"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          position: "top-right"
        }, "This toaster is positioned at \"top-right\"!"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          position: "bottom-right"
        }, "This toaster is positioned at \"bottom-right\"!"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          position: "bottom-center"
        }, "This toaster is positioned at \"bottom-center\"!"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster,
          position: "bottom-left"
        }, "This toaster is positioned at \"bottom-left\"!"))));
      }
    }]);

    return ToasterStory;
  }(_react.Component);

  ToasterStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(ToasterStory, null);
})).add('Transitions', (0, _addonInfo.withInfo)({
  text: _Toaster.default,
  propTables: [_.ToastContainer, _.default]
})(function () {
  var ToasterStory =
  /*#__PURE__*/
  function (_Component5) {
    _inherits(ToasterStory, _Component5);

    function ToasterStory(props) {
      var _this5;

      _classCallCheck(this, ToasterStory);

      _this5 = _possibleConstructorReturn(this, _getPrototypeOf(ToasterStory).call(this, props));

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "showToaster", function () {
        _this5.setState({
          toasterOpen: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "hideToaster", function () {
        _this5.setState({
          toasterOpen: false
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "showToaster2", function () {
        _this5.setState({
          toaster2Open: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "hideToaster2", function () {
        _this5.setState({
          toaster2Open: false
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "showToaster3", function () {
        _this5.setState({
          toaster3Open: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "hideToaster3", function () {
        _this5.setState({
          toaster3Open: false
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "showToaster4", function () {
        _this5.setState({
          toaster4Open: true
        });
      });

      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this5)), "hideToaster4", function () {
        _this5.setState({
          toaster4Open: false
        });
      });

      _this5.state = {
        toasterOpen: false,
        toaster2Open: false,
        toaster3Open: false,
        toaster4Open: false
      };
      return _this5;
    }

    _createClass(ToasterStory, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_.ToastContainer, null), _react.default.createElement("div", null, _react.default.createElement(_GuideExample.default, null, _react.default.createElement(_Button.default, {
          onClick: this.showToaster
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toasterOpen,
          onClose: this.hideToaster
        }, "The Toaster with the Bounce transition!")), _react.default.createElement(_GuideExample.default, {
          label: "transition={Slide}"
        }, _react.default.createElement(_Button.default, {
          onClick: this.showToaster2
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toaster2Open,
          onClose: this.hideToaster2,
          transition: _reactToastify.Slide
        }, "The Toaster with the Slide transition!")), _react.default.createElement(_GuideExample.default, {
          label: "transition={Zoom}"
        }, _react.default.createElement(_Button.default, {
          onClick: this.showToaster3
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toaster3Open,
          onClose: this.hideToaster3,
          transition: _reactToastify.Zoom
        }, "The Toaster with the Zoom transition!")), _react.default.createElement(_GuideExample.default, {
          label: "transition={Flip}"
        }, _react.default.createElement(_Button.default, {
          onClick: this.showToaster4
        }, "Show Toaster"), _react.default.createElement(_.default, {
          open: this.state.toaster4Open,
          onClose: this.hideToaster4,
          transition: _reactToastify.Flip
        }, "The Toaster with the Flip transition!"))));
      }
    }]);

    return ToasterStory;
  }(_react.Component);

  ToasterStory.propTypes = {
    isStory: _propTypes.default.bool
  };
  return _react.default.createElement(ToasterStory, null);
}));