'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var ForkLeftIcon = function ForkLeftIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M9.676 7.07l.024.002c-.009.01-.015.023-.024.034A6.13 6.13 0 0 0 8.67 5.26l-.044-.054 2.86-3.561 1.685 1.109zm-1.79-1.184L6.067 3.628 7.5 2.624 3.002 1 3 3.098V5.78l1.422-.997 1.86 2.286-.003.003A2.981 2.981 0 0 1 7 9v7h2V9a4.988 4.988 0 0 0-1.112-3.116z' }) : _react2.default.createElement('path', { d: 'M12.897 4.666L9.583 9.018a9.049 9.049 0 0 0-.398-1.126l2.918-3.832zM4.71 4H7V3H3v4h1V4.706l2.33 2.325C7.483 8.3 8 9.987 8 12.5V14h1v-1.5a8.756 8.756 0 0 0-1.948-6.16z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M12.057 8.769a9.384 9.384 0 0 1 1.943 5.7V24h-3v-9.531a6.453 6.453 0 0 0-1.228-3.753l.009-.006-.33-.418L6.51 6.675l-.285.2L4 8.435V4.264L4.003 1 11 3.526l-2.025 1.42zm5.46-6.467L13.57 7.285a12.119 12.119 0 0 1 1.564 2.796L20 4z' }) : _react2.default.createElement('path', { d: 'M19.397 6.347l-5.015 6.586a9.853 9.853 0 0 0-.447-1.062l4.668-6.13zM6.755 5H10V4H5v5h1V5.656l4.872 5.265a7.888 7.888 0 0 1 2.105 5.373V21h1v-4.706a8.885 8.885 0 0 0-2.37-6.051z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M15.777 11.769A9.977 9.977 0 0 1 18 18v14h-4V18a5.962 5.962 0 0 0-1.443-3.856l.007-.005-3.72-4.574L6 11.56V6.195L6.004 2 15 5.247l-2.866 2.01 3.639 4.514zm10.565-6.261l-3.37-2.219-6.04 7.522.017.021a11.725 11.725 0 0 1 2.044 3.887 5.972 5.972 0 0 1 .407-.575l-.049-.005z' }) : _react2.default.createElement('path', { d: 'M25.397 7.028l-7.143 9.381q-.195-.546-.44-1.073l6.789-8.914zM8.767 6H14V5H7v7h1V6.645l4.627 5.08A16.74 16.74 0 0 1 17 23.021V27h1v-3.979a17.742 17.742 0 0 0-4.633-11.97z' })
  );
};

exports.default = ForkLeftIcon;