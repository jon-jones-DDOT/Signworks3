'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var ForkRightIcon = function ForkRightIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M7.33 5.26a6.115 6.115 0 0 0-1.006 1.845c-.009-.01-.015-.023-.024-.033l.024-.003L2.83 2.754l1.685-1.11 2.86 3.562zm5.67.52V3.098L12.998 1 8.5 2.624l1.433 1.004-1.82 2.258-.001-.002A4.987 4.987 0 0 0 7 9v7h2V9a2.981 2.981 0 0 1 .721-1.928l-.003-.003 1.86-2.286z' }) : _react2.default.createElement('path', { d: 'M3.897 4.06l2.918 3.832a9.049 9.049 0 0 0-.398 1.126L3.103 4.666zM9 3v1h2.292l-2.36 2.357A8.748 8.748 0 0 0 7 12.5V14h1v-1.5c0-2.513.516-4.2 1.655-5.452L12 4.706V7h1V3z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M20.028 4.263v4.173l-2.224-1.56-.285-.2-2.943 3.616-.329.418.01.006a6.453 6.453 0 0 0-1.229 3.753V24h-3v-9.531a9.384 9.384 0 0 1 1.943-5.7l3.082-3.824-2.025-1.42L20.025 1zM6.511 2.302L4.028 4l4.866 6.081a12.119 12.119 0 0 1 1.564-2.796z' }) : _react2.default.createElement('path', { d: 'M10.065 11.87a9.853 9.853 0 0 0-.447 1.063L4.603 6.347l.794-.606zM14 4v1h3.245l-4.851 5.243a8.885 8.885 0 0 0-2.37 6.05V21h1v-4.706a7.888 7.888 0 0 1 2.104-5.373L18 5.656V9h1V4z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M23.157 9.565l-3.721 4.574.007.005A5.962 5.962 0 0 0 18 18v14h-4V18a9.974 9.974 0 0 1 2.223-6.231l.004.002 3.639-4.514L17 5.247 25.996 2 26 6.195v5.365zm-8.09 1.246L9.027 3.29l-3.37 2.219 6.992 8.63-.05.006a5.972 5.972 0 0 1 .408.575 11.725 11.725 0 0 1 2.044-3.887z' }) : _react2.default.createElement('path', { d: 'M13.746 16.41L6.603 7.027l.794-.606 6.788 8.914q-.244.527-.439 1.073zM18 5v1h5.234l-4.601 5.052A17.74 17.74 0 0 0 14 23.021V27h1v-3.979a16.737 16.737 0 0 1 4.373-11.295L24 6.646V12h1V5z' })
  );
};

exports.default = ForkRightIcon;