'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var GaugeIcon = function GaugeIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M15 14H1v-2h14zM10 2.172v.975A5.982 5.982 0 0 1 13.832 9h-1.894c.006-.08.01-.161.01-.242A3.927 3.927 0 0 0 10 5.379v1.224a2.963 2.963 0 0 1 1 2.202V10h3.892A6.957 6.957 0 0 0 10 2.172zM7 6.004a3.002 3.002 0 0 0-2 2.8V10H1.17A6.945 6.945 0 0 1 7 1.955v.915a5.675 5.675 0 0 0-2.463 1.077l1.296 1.518A3.91 3.91 0 0 1 7 4.952zM8 1h1v6H8z' }) : _react2.default.createElement('path', { d: 'M15 15H1v-3h14zm-1-1v-1H2v1zM10 2.172v.975a5.978 5.978 0 0 1 3.837 5.61c0 .08-.002.162-.005.243h-1.894c.006-.08.01-.161.01-.242A3.927 3.927 0 0 0 10 5.379v1.224a2.963 2.963 0 0 1 1 2.202V10h3.892A6.855 6.855 0 0 0 15 8.805a7.005 7.005 0 0 0-5-6.633zm-3 2.78a3.91 3.91 0 0 0-1.167.513L4.537 3.947A5.675 5.675 0 0 1 7 2.87v-.915a6.97 6.97 0 0 0-5.937 6.85A6.855 6.855 0 0 0 1.17 10H5V8.805a3.002 3.002 0 0 1 2-2.801zM4.053 8.758c0 .08.003.161.009.242H2.168a6.741 6.741 0 0 1-.005-.242A6.021 6.021 0 0 1 3.67 4.752l1.283 1.503a3.922 3.922 0 0 0-.9 2.503zM8 7h1V1H8z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M24 22H0v-2h24zM13.456 7.322a7.894 7.894 0 0 0-1.421-.135A7.974 7.974 0 0 0 7.883 8.35l-1.27-2.085a10.177 10.177 0 0 1 5.381-1.53 10.299 10.299 0 0 1 2.232.25l.502-1.52A11.942 11.942 0 0 0 0 14.934c0 .141.003.907.01 1.065H6a40.81 40.81 0 0 1-.015-1.068 6.019 6.019 0 0 1 6.05-6.146 6.271 6.271 0 0 1 .914.074zM24 14.935c0 .14-.004.9-.01 1.065H18c.01-.227.014-.924.014-1.068a6.265 6.265 0 0 0-1.604-4.247.981.981 0 0 0 .286-.413l.416-1.262A7.975 7.975 0 0 1 19.936 14h2.03a9.734 9.734 0 0 0-2.74-6.265 10.293 10.293 0 0 0-1.327-1.112l.529-1.604A11.781 11.781 0 0 1 24 14.935zM13.847 9.332l2.464-7.474 1.9.626-2.465 7.475z' }) : _react2.default.createElement('path', { d: 'M0 22h24v-3H0zm1-2h22v1H1zm5-4a40.81 40.81 0 0 1-.015-1.068 6.019 6.019 0 0 1 6.05-6.146c.137 0 .27.012.405.02l.324-.983a7.192 7.192 0 0 0-.729-.037A7.021 7.021 0 0 0 8.217 8.9L6.306 5.762a10.905 10.905 0 0 1 5.688-1.626 10.749 10.749 0 0 1 1.926.183l.318-.965A11.961 11.961 0 0 0 0 14.934c0 .142.003.908.01 1.066zm-5-1.065A10.794 10.794 0 0 1 5.476 6.32L7.414 9.5a7.142 7.142 0 0 0-2.429 5.432V15H1zm17.524-8.611l.335-1.019A11.754 11.754 0 0 1 24 14.935c0 .14-.004.9-.01 1.065H18c.01-.227.014-.924.014-1.068a6.32 6.32 0 0 0-1.286-3.873 1.45 1.45 0 0 0 .442-.63l.09-.271a7.229 7.229 0 0 1 1.755 4.775V15H23v-.065a10.79 10.79 0 0 0-4.476-8.611zm-2.46 4.266l2.778-8.425-2.85-.938-2.777 8.423zm.565-8.1l.95.312-2.151 6.525-.95-.313z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M16.079 10.801l-.025-.001C12.46 10.8 8.66 13.537 9 19H.013A58.218 58.218 0 0 1 0 17.797 15.92 15.92 0 0 1 18.795 2.262l-.563 1.707A13.749 13.749 0 0 0 8.157 6.242L8 6.35l2.746 4.463.175-.127a8.782 8.782 0 0 1 5.21-1.69c.147 0 .29.013.436.02l-.449 1.363a.986.986 0 0 0-.04.422zm6.535-7.348l-.558 1.693A14.018 14.018 0 0 1 30.074 17h-5.21a8.575 8.575 0 0 0-4.447-6.884l-.5 1.517a.984.984 0 0 1-.137.241C21.777 13.12 23.265 15.465 23 19h8.987c.008-.21.013-1.012.013-1.203a15.859 15.859 0 0 0-9.386-14.344zm-3.647 7.866l3.269-9.912-1.9-.625-3.268 9.91zM32 24H0v2h32z' }) : _react2.default.createElement('path', { d: 'M0 27h32v-3H0zm1-2h30v1H1zm8-6c-.326-5.22 3.13-7.945 6.575-8.177a1.491 1.491 0 0 1 .069-.6l.134-.41a8.115 8.115 0 0 0-4.614 1.628L7.556 5.577a14.842 14.842 0 0 1 10.422-2.433l.316-.959A15.873 15.873 0 0 0 0 17.797C0 17.99.005 18.801.013 19zM6.749 6.173l3.65 5.931c-.068.066-.14.126-.204.195A8.434 8.434 0 0 0 7.982 18H1.001L1 17.797A14.697 14.697 0 0 1 6.749 6.173zM22.76 4.606l.309-.936A15.84 15.84 0 0 1 32 17.797c0 .191-.005.994-.013 1.203H23a7.354 7.354 0 0 0-2.814-6.846 1.479 1.479 0 0 0 .206-.364l.193-.587a7.745 7.745 0 0 1 1.3 1.117A8.32 8.32 0 0 1 24.03 18H31l.001-.203a14.782 14.782 0 0 0-8.24-13.191zm-3.475 7.345l3.582-10.863-2.85-.937-3.581 10.86zm1.37-10.538l.95.313-2.957 8.962-.95-.314z' })
  );
};

exports.default = GaugeIcon;