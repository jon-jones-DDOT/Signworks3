'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var LassoIcon = function LassoIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M13.09 4.487C9.747-.695 3.44.625 3.212 5.266 3.05 8.543 1 8.836 1 10.439c0 2.212 2 2.828 3 2.828s2.018-.468 4 .565C16 18 16 9 13.09 4.487zm.112 8.217c-.372.683-.93 1.001-1.754 1.002-.812 0-1.822-.312-3.004-.928-.992-.517-1.889-.757-2.823-.757-.334 0-.636.03-.922.06-.195.02-.38.041-.565.041-.02 0-1.932-.02-1.932-1.765 0-.28.141-.479.546-.975.625-.768 1.483-1.819 1.59-3.974C4.44 3.296 6.071 2.35 7.642 2.35c1.694 0 3.32 1.014 4.46 2.781 1.509 2.34 2.023 5.88 1.1 7.573z' }) : _react2.default.createElement('path', { d: 'M13.09 4.487C9.747-.695 3.44.625 3.212 5.266 3.05 8.543 1 8.836 1 10.438c0 2.213 2 2.829 3 2.829s2.018-.468 4 .565C16 18 16 9 13.09 4.487zm.348 8.458c-.375.689-.938 1.01-1.772 1.01-.846 0-1.903-.328-3.143-.974-1.068-.557-2.036-.817-3.046-.817-.358 0-.682.033-.989.065-.204.021-.396.045-.59.045-.019 0-1.948-.022-1.948-1.773 0-.264.144-.464.556-.97.674-.827 1.597-1.957 1.711-4.28.108-2.175 1.79-3.149 3.408-3.149 1.764 0 3.458 1.06 4.65 2.906 1.585 2.457 2.129 6.167 1.163 7.937z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M19.337 6.936C14.516-.54 5.422 1.366 5.09 8.058c-.234 4.727-3.19 5.15-3.19 7.46 0 3.192 2.884 4.08 4.326 4.08s2.91-.675 5.77.815c11.537 6.01 11.537-6.97 7.34-13.477zm.521 12.17c-.563 1.031-1.405 1.511-2.65 1.513-1.226 0-2.752-.472-4.537-1.403-1.497-.78-2.852-1.144-4.264-1.144-.505 0-.96.046-1.392.092-.295.03-.575.062-.854.062-.028 0-2.918-.03-2.918-2.667 0-.422.214-.722.825-1.472.945-1.16 2.24-2.747 2.4-6.003.158-3.19 2.621-4.618 4.994-4.618 2.559 0 5.013 1.532 6.735 4.2 2.28 3.534 3.056 8.88 1.661 11.44z' }) : _react2.default.createElement('path', { d: 'M19.337 6.936C14.516-.54 5.422 1.366 5.09 8.058c-.234 4.727-3.19 5.15-3.19 7.46 0 3.192 2.884 4.08 4.326 4.08s2.91-.676 5.77.815c11.537 6.01 11.537-6.97 7.34-13.477zm-2.19 14.225c-1.315 0-2.924-.491-4.781-1.458-1.386-.723-2.631-1.058-3.92-1.058-.485 0-.922.045-1.308.085-.314.034-.613.067-.91.067-.036 0-3.527-.038-3.527-3.278 0-.653.329-1.087.96-1.86.877-1.078 2.08-2.553 2.229-5.562.15-3.045 2.443-5.173 5.576-5.173 2.753 0 5.376 1.62 7.199 4.445 2.404 3.73 3.167 9.207 1.666 11.962-.672 1.232-1.713 1.83-3.184 1.83z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M25.46 9.37C19.24-.273 7.51 2.183 7.082 10.816c-.301 6.097-4.115 6.644-4.115 9.623 0 4.117 3.721 5.262 5.581 5.262 1.86 0 3.754-.87 7.442 1.051 14.882 7.754 14.882-8.989 9.468-17.384zm.959 15.813c-.795 1.459-2.033 2.169-3.783 2.169-1.639-.001-3.657-.62-5.998-1.84-1.842-.96-3.503-1.408-5.226-1.408-.645 0-1.22.061-1.726.114-.425.045-.791.083-1.137.083-.042 0-4.18-.044-4.18-3.86 0-.72.374-1.21 1.154-2.168 1.165-1.428 2.76-3.385 2.959-7.386.184-3.724 2.99-6.324 6.825-6.324 3.423 0 6.695 2.029 8.976 5.565 3.038 4.71 4.016 11.605 2.136 15.055z' }) : _react2.default.createElement('path', { d: 'M25.46 9.37C19.24-.273 7.51 2.183 7.082 10.816c-.301 6.097-4.115 6.644-4.115 9.623 0 4.117 3.721 5.262 5.581 5.262 1.86 0 3.754-.87 7.442 1.051 14.882 7.754 14.882-8.989 9.468-17.384zm-2.767 18.48c-1.718 0-3.816-.639-6.235-1.9-1.798-.937-3.413-1.373-5.084-1.373-.63 0-1.197.059-1.699.112-.42.044-.818.086-1.187.086-.047 0-4.62-.05-4.62-4.297 0-.86.43-1.428 1.256-2.44 1.14-1.398 2.7-3.312 2.893-7.214.196-3.98 3.193-6.76 7.285-6.76 3.592 0 7.015 2.112 9.39 5.796 3.135 4.86 4.128 12 2.17 15.593-.88 1.613-2.243 2.397-4.169 2.397z' })
  );
};

exports.default = LassoIcon;