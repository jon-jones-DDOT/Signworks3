'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var ListMergeIcon = function ListMergeIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M15 9V8h-1v7h-2V8h-1v1h-1V8l3-3 3 3.001V9zM7 9v-.999L4 5 1 8v1h1V8h1v7h2V8h1v1zM6 3h9V2H6zM2.557 4.168l2.708-2.705-.738-.737-1.97 1.97-.92-.796-.737.738z' }) : _react2.default.createElement('path', { d: 'M15 3H6V2h9zM4.527.726l-1.97 1.97-.92-.796-.737.738 1.657 1.53 2.708-2.705zm-1.88 8.928l.706.707L5 8.715V15h1V8.715l1.646 1.646.707-.707L5.5 6.801zm12.706 0L12.5 6.801 9.646 9.654l.707.707L12 8.715V15h1V8.715l1.646 1.646z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M12 13.152l-3-2.93v11.471H7v-11.47l-3 2.93v-2.154L8 7l4 4zM23 11l-4-4-4 4v2.152l3-2.93v11.471h2v-11.47l3 2.93zM9 5h14V4H9zM2.557 6.168L6 2.738 5.262 2 2.557 4.696 1.437 3.7.7 4.438z' }) : _react2.default.createElement('path', { d: 'M8.498 8.795l2.854 2.82-.704.712L9 10.697V22H8V10.707l-1.646 1.647-.707-.707zm7.148 2.851l.707.707L18 10.707V22h1V10.697l1.648 1.63.704-.711-2.854-2.821zM9 4v1h14V4zM5.262 2L2.557 4.696 1.437 3.7.7 4.438l1.857 1.73L6 2.738z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M29 4v1H11V4zM9.89 2.262L8.73 1.1 4.557 5.27 2.973 3.684 1.81 4.846l2.747 2.746zM4 15.33v2.91l4-3.842V29h3V14.398l4 3.841v-2.908L9.5 10zm14 0v2.91l4-3.842V29h3V14.398l4 3.841v-2.908L23.5 10z' }) : _react2.default.createElement('path', { d: 'M29.354 15.566L25.5 11.712l-3.853 3.852.707.707L25 13.626V29h1V13.626l2.647 2.647zm-13 0L12.5 11.712l-3.853 3.852.707.707L12 13.626V29h1V13.626l2.647 2.647zM29 5H11v1h18zM8.527 1.726l-3.97 3.97-1.884-1.788-.738.738 2.622 2.522 4.708-4.705z' })
  );
};

exports.default = ListMergeIcon;