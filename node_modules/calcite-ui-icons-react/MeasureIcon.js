'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var MeasureIcon = function MeasureIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M3.646 7.354L.795 4.502l2.82-2.854.712.704L2.697 4H7v1H2.707l1.647 1.646zm8.127-.706l.71.704 2.822-2.854-2.851-2.852-.707.707L13.393 4H9.1v1h4.303zM16 9v6H0V9zM3 12H2v2h1zm2-1H4v3h1zm2 1H6v2h1zm2-1H8v3h1zm2 1h-1v2h1zm2-1h-1v3h1zm2 1h-1v2h1z' }) : _react2.default.createElement('path', { d: 'M0 9v6h16V9zm15 3h-1v2h-1v-3h-1v3h-1v-2h-1v2H9v-3H8v3H7v-2H6v2H5v-3H4v3H3v-2H2v2H1v-4h14zm.18-7.5l-2.85 2.85-.71-.7L13.23 5H9V4h4.32l-1.7-1.69.71-.7zM2.68 4H7v1H2.77l1.61 1.65-.71.7L.82 4.5l2.85-2.85.71.7z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M24 22H0V12h24zM4 17H3v4h1zm2 1H5v3h1zm-4 0H1v3h1zm6-4H7v7h1zm2 4H9v3h1zm2-1h-1v4h1zm2 1h-1v3h1zm2-4h-1v7h1zm2 4h-1v3h1zm2-1h-1v4h1zm2 1h-1v3h1zM13 5h6.705l-1.763-1.8L19.2 1.942 23.22 6l-4.02 4.058L17.942 8.8 19.705 7H13zm-2 .002H4.295L6.058 3.2 4.8 1.942.78 6.002l4.02 4.056L6.058 8.8 4.295 7H11z' }) : _react2.default.createElement('path', { d: 'M20.3 6H15V5h5.29l-1.64-1.65.7-.7 2.86 2.85-2.83 2.85-.71-.7zM4.35 7.65L2.71 6H8V5H2.7l1.63-1.65-.71-.7L.79 5.5l2.86 2.85zM23 13v9H0v-9zm-1 1H1v7h1v-2h1v2h1v-3h1v3h1v-2h1v2h1v-6h1v6h1v-2h1v2h1v-3h1v3h1v-2h1v2h1v-6h1v6h1v-2h1v2h1v-3h1v3h1z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M13 10H5.295l3.398 3.4-1.257 1.258L1.779 9l5.657-5.656 1.257 1.258L5.295 8H13zm6 0h7.705l-3.398 3.4 1.258 1.258L30.22 9l-5.657-5.656-1.257 1.258L26.705 8H19zM0 18v10h32V18zm3 9H2v-3h1zm2 0H4v-4h1zm2 0H6v-3h1zm2 0H8v-7h1zm2 0h-1v-3h1zm2 0h-1v-4h1zm2 0h-1v-3h1zm2 0h-1v-7h1zm2 0h-1v-3h1zm2 0h-1v-4h1zm2 0h-1v-3h1zm2 0h-1v-7h1zm2 0h-1v-3h1zm2 0h-1v-4h1zm2 0h-1v-3h1z' }) : _react2.default.createElement('path', { d: 'M0 18v10h32V18zm31 6h-1v3h-1v-4h-1v4h-1v-3h-1v3h-1v-7h-1v7h-1v-3h-1v3h-1v-4h-1v4h-1v-3h-1v3h-1v-7h-1v7h-1v-3h-1v3h-1v-4h-1v4h-1v-3h-1v3H9v-7H8v7H7v-3H6v3H5v-4H4v4H3v-3H2v3H1v-8h30zM29.21 8.5l-3.86 3.85-.7-.7L27.29 9H20V8h7.29l-2.64-2.65.7-.7zM3.71 8H11v1H3.71l2.64 2.65-.7.7L1.79 8.5l3.86-3.85.7.7z' })
  );
};

exports.default = MeasureIcon;