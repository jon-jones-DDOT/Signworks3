'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var MergeOnHighwayIcon = function MergeOnHighwayIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M5 9.443a14.541 14.541 0 0 0 2 3.735V16H5zM7 5h1.75L6 1.088 3.25 5H5c.026.337.658 8.36 7.157 10.936l.737-1.86C7.566 11.966 7.005 5.07 7 5z' }) : _react2.default.createElement('path', { d: 'M7 10.301a10.323 10.323 0 0 0 1 1.68V14H7zm1-4.42V3.708l1.646 1.647.707-.707L7.5 1.793 4.646 4.646l.707.707L7 3.707v2.175a9.366 9.366 0 0 0 5.017 8.31l.466-.884A8.37 8.37 0 0 1 8 5.882z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M19.34 21.114l-1.104 2.79C8.486 20.04 7.539 7.504 7.5 7H4.875L9 1.132 13.125 7H10.5c.008.105.85 10.949 8.84 14.114zM7 24h3v-4.864a22.292 22.292 0 0 1-3-6.117z' }) : _react2.default.createElement('path', { d: 'M11 14.107a14.765 14.765 0 0 0 1 2.111V21h-1zm1.025-5.284V4.731l2.61 2.61.707-.706L11.5 2.793 7.66 6.635l.707.707 2.659-2.66v4.141a13.8 13.8 0 0 0 7.392 12.244l.466-.884a12.804 12.804 0 0 1-6.858-11.36z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M25.787 28.152l-1.472 3.72C11.315 26.721 10.052 10.673 10 10H6.5L12 2.176 17.5 10H14c.01.14 1.133 13.932 11.787 18.152zM10 32h4v-6.485a29.726 29.726 0 0 1-4-8.157z' }) : _react2.default.createElement('path', { d: 'M15 17.885a19.195 19.195 0 0 0 1 2.43V28h-1zm1-6.12V5.68l3.645 3.673.71-.706-4.855-4.89-4.855 4.89.71.706L15 5.68v6.085a18.236 18.236 0 0 0 9.767 16.177l.466-.884A17.238 17.238 0 0 1 16 11.765z' })
  );
};

exports.default = MergeOnHighwayIcon;