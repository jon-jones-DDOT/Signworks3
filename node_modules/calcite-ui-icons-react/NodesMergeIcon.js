'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var NodesMergeIcon = function NodesMergeIcon(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? 24 : _ref$size,
      _ref$filled = _ref.filled,
      filled = _ref$filled === undefined ? false : _ref$filled,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['color', 'size', 'filled', 'className', 'children']);

  var classes = 'calcite-icon';
  if (className) classes += ' ' + className;

  if (size <= 16) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 16 16', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M15.854.854l-.707-.707L9.733 5.56A2.99 2.99 0 0 0 5.56 9.733L.146 15.146l.707.707 5.414-5.413a2.99 2.99 0 0 0 4.173-4.173z' }) : _react2.default.createElement('path', { d: 'M15.854.854l-.707-.707L9.733 5.56A2.99 2.99 0 0 0 5.56 9.733L.146 15.146l.707.707 5.414-5.413a2.99 2.99 0 0 0 4.173-4.173zM8 10a2 2 0 1 1 2-2 2.002 2.002 0 0 1-2 2z' })
    );
  }

  if (size <= 24) {
    return _react2.default.createElement(
      'svg',
      _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 24 24', className: classes }),
      filled ? _react2.default.createElement('path', { d: 'M23.854.854l-.707-.707-8.707 8.706A3.96 3.96 0 0 0 12 8a4.004 4.004 0 0 0-4 4 3.96 3.96 0 0 0 .853 2.44L.146 23.146l.707.707 8.707-8.706A3.96 3.96 0 0 0 12 16a4.004 4.004 0 0 0 4-4 3.96 3.96 0 0 0-.853-2.44z' }) : _react2.default.createElement('path', { d: 'M23.854.854l-.707-.707-8.707 8.706A3.96 3.96 0 0 0 12 8a4.004 4.004 0 0 0-4 4 3.96 3.96 0 0 0 .853 2.44L.146 23.146l.707.707 8.707-8.706A3.96 3.96 0 0 0 12 16a4.004 4.004 0 0 0 4-4 3.96 3.96 0 0 0-.853-2.44zM12 15a3 3 0 1 1 3-3 3.003 3.003 0 0 1-3 3z' })
    );
  }

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: size, height: size, fill: color, viewBox: '0 0 32 32', className: classes }),
    filled ? _react2.default.createElement('path', { d: 'M31.854.854l-.707-.707L19.87 11.423a5.994 5.994 0 0 0-8.449 8.447L.146 31.146l.707.707L12.13 20.577a5.994 5.994 0 0 0 8.449-8.447z' }) : _react2.default.createElement('path', { d: 'M31.854.854l-.707-.707L19.87 11.423a5.994 5.994 0 0 0-8.449 8.447L.146 31.146l.707.707L12.13 20.577a5.994 5.994 0 0 0 8.449-8.447zM16 21a5 5 0 1 1 5-5 5.006 5.006 0 0 1-5 5z' })
  );
};

exports.default = NodesMergeIcon;